commit 54df099368b9e7669726355656365bc22a0eec2f
Author: John Wolfe <jwolfe@vmware.com>
Date:   Wed Aug 19 12:16:02 2020 -0700

    Release Notes for 11.1.5

commit 2ed582719f33893b427a7327df4b688dc21f9cb6
Author: John Wolfe <jwolfe@vmware.com>
Date:   Wed Aug 19 10:47:36 2020 -0700

    Update version to 11.1.5 and set final build numbers

commit 893cedd626553d32c05362507f91b6289cac0a53
Author: John Wolfe <jwolfe@vmware.com>
Date:   Wed Aug 19 10:01:17 2020 -0700

    Remove duplicate global definitions.
    
    Remove duplicate and unused global definitions for
    GDK_SELECTION_TYPE_TIMESTAMP and GDK_SELECTION_TYPE_UTF8_STRING.
    
    This fix will address https://github.com/vmware/open-vm-tools/issues/451

commit a807e6e9802c69829cf21a123047451872471839
Author: John Wolfe <jwolfe@vmware.com>
Date:   Wed Aug 19 10:01:17 2020 -0700

    Fix Coverity-reported dead code issue.
    
    The underlying problem was that retryCount was being zeroed on every
    iteration of the while loop.  Zero it before entering the loop instead.

commit b88ddc94807f392f6df5d106fffcef6f6de83595
Author: John Wolfe <jwolfe@vmware.com>
Date:   Wed Aug 19 10:01:17 2020 -0700

    Common header file change not applicable to open-vm-tools.

commit ab85d3e86d4b44b9981eb5d652ce4fbe5ede4bbd
Author: John Wolfe <jwolfe@vmware.com>
Date:   Wed Aug 19 10:01:17 2020 -0700

    Code cleanup to address a Coverity issue.
    
    Coverity reports a "dereference after NULL check" in
    BkdoorChannelStart.  However, at the point of dereference
    it's known that chan->inStarted is TRUE, which means chan->in
    is guaranteed to be non-NULL, so it's not a bug.
    
    Still, given that an input channel, if present, must have been
    started before calling BkdoorChannelStart, it's possible to do
    some code cleanup that will also get Coverity to stop reporting
    the issue.  Change what's currently a test into an ASSERT, test
    chan->in rather than chan->inStarted, and add comments to make
    it clearer what's going on.

commit 858534048c1036dfc8049e781f9cd6f989188b69
Author: John Wolfe <jwolfe@vmware.com>
Date:   Wed Aug 19 10:01:17 2020 -0700

    Implement the Set_option handler in appInfo plugin.
    
    * Add a handler for Set_option in the appInfo plugin.
      The poll loop will be immediately turned off when
      the feature is turned off at the host side.
      The poll loop will be immediately turned on when
      the feature is turned on at the host side.
    
    * Add code to handle VM vmotion to an older host that
      doesn't have logic to send 'set_option'.
    
    * Fix some miscellaneous issues in the appinfo plugin.
      Use the proper @param and @return statements in the
      function documentation for AppInfoServerSetOption.
    
      Reorganize an "if" code block.

commit cc4844d41850670384d93c95d1e161ecf5c4cd3c
Author: John Wolfe <jwolfe@vmware.com>
Date:   Wed Aug 19 10:01:17 2020 -0700

    Fix a Coverity-reported NULL pointer issue.

commit 4437575805152d81951c6a7f5dab6e6d7a3c56cc
Author: John Wolfe <jwolfe@vmware.com>
Date:   Wed Aug 19 10:01:17 2020 -0700

    Fix a dereference after null check reported by Coverity.

commit 9425667b2aebfcf0b347ee92c6910f3eb7d402e8
Author: John Wolfe <jwolfe@vmware.com>
Date:   Wed Aug 19 10:01:17 2020 -0700

    ServiceDiscovery: Replacing deprecated 'netstat' command with 'ss'
    
    Updating the Linux serviceDiscovery scripts to use "ss" in place of
    the deprecated "netstat" command.

commit ac2ee14cbffb605c1a2a7480297883edb8c5f029
Author: John Wolfe <jwolfe@vmware.com>
Date:   Wed Aug 19 10:01:17 2020 -0700

    Pick up the LSB distro file for ALT Linux
    
    Improve the documentation of the Linux identification routine so others
    know that nothing needs to be changed in the field.
    Only VMware needs to add identification codes.
    
    https://github.com/vmware/open-vm-tools/pull/431

commit 2caacd03466b9777ce920dfba19402f371d74884
Author: John Wolfe <jwolfe@vmware.com>
Date:   Wed Aug 19 10:01:17 2020 -0700

    ServiceDiscovery: Deleting keys from NDB by chunks to reduce RPC calls.
    
    Setting chunk size to 25 keys at a time.

commit 36367e444682d554c784c8a1ae2da5d5d52e0f92
Author: John Wolfe <jwolfe@vmware.com>
Date:   Wed Aug 19 10:01:16 2020 -0700

    Make peeking back into the stack work for back traces
    
    GCC 10 doesn't like peeking back before the end of an arrary (which
    is used to peek into the stack).  Fix this.
    
    https://github.com/vmware/open-vm-tools/issues/429

commit 48cbf483dbcc3ffaaa629ef5728cf36151579dc4
Author: John Wolfe <jwolfe@vmware.com>
Date:   Wed Aug 19 10:01:16 2020 -0700

    [AppInfo] Tweak the gather loop only for a real config reload.
    
    The poll loop for appInfo is being tweaked (destroyed and recreated)
    for every tools.conf reload, even when nothing related to appinfo changed.
    This may cause a few scenarios where the 'application information'
    will never be collected inside the guest.  Tweak the loop only when there
    is a real appinfo related config change in the tools.conf file.

commit 994a930f61fdb335b764d42c8653e2db8e530d01
Author: John Wolfe <jwolfe@vmware.com>
Date:   Wed Aug 19 10:01:16 2020 -0700

    Directive argument is null from GCC 9.3.0
    
    There are paths that do not properly deal with NULL in FileMakeTempEx2Work.
    Fix this.
    
    https://github.com/vmware/open-vm-tools/issues/428

commit 7ede22ec6f00ee132651cbf4334fecb2366c01aa
Author: John Wolfe <jwolfe@vmware.com>
Date:   Wed Aug 19 10:01:16 2020 -0700

    Free old ununsed loggers when tools.conf changes.
    
    Existing unused loggers are leaked when there is a change
    in logging configuration.  Added a check to free the loggers
    that are not used after tools.conf is modified.

commit c8019ab746e09b939d929919cebf063751a97612
Author: John Wolfe <jwolfe@vmware.com>
Date:   Wed Aug 19 10:01:16 2020 -0700

    The SDMP plugin generates a warning message every 5 minutes when there is no
    Namespace DB instance created on a VM.  Change the log level to
    debug to solve the problem.

commit 193d1bc967a23d2770ee60d15ecec557103c7d47
Author: John Wolfe <jwolfe@vmware.com>
Date:   Wed Aug 19 10:01:16 2020 -0700

    serviceDiscovery: Updating 'get-versions.sh' script
    
    The following changes have been made:
    
    1. Environment variable 'ALIVE_BASE' is used to construct the path of
       the file where vcops version is stored.  The variable is not available
       when running the script inside serviceDiscovery plugin process, so a
       hardcoded path is used.
    
    2. Added command to retrieve tcserver version

commit f67deb5c749e3b32bd79620958b36a1bfebed173
Author: John Wolfe <jwolfe@vmware.com>
Date:   Wed Aug 19 10:01:16 2020 -0700

    Prepare the branch for VMware Tools 11.1.5 update builds.
    
    Set the open-vm-tools version number to 11.1.5.

commit e713c58563c5fb700d589033c98d82d98942464e
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri May 8 13:11:52 2020 -0700

    Update README.md
    
    space after #

commit fbae0b825601266387ea910a6773e29ac1d7d2cd
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri May 8 13:09:10 2020 -0700

    add compatibility and languages

commit c0c61430d2e4f450f6724a49a6c48f67a53dd872
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri May 8 12:08:04 2020 -0700

    release notes for 11.1.0

commit feed1c655b2ce7e36efac17521e887a980bb8a6e
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri May 8 12:02:24 2020 -0700

    document new sdmp plugin

commit ef31bf4f3ccc1d3ca1c91a7b28d85d19c3b2a637
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed May 6 10:08:04 2020 -0700

    update build number

commit 3a42b6205432017958343a0b920a7d6cf5b8f6de
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Apr 21 14:52:11 2020 -0700

    Use random poll-interval for appInfo on channel reset.
    
    In few workflows like instant clone, when a large number of VMs are
    cloned at the same time, if the appinfo plugin runs at the same time
    in all the VMs, the underlying ESXi may encounter heavy load.  To
    avoid these situations, a random poll interval should be used
    for the appinfo whenever applicable workflows are detected.
    
    Detecting a 'rpc channel reset' is a simple approach to detect.
    
    In this changeset, add the following changes:
    
    - Added a new callback function for the 'rpc channel reset'.  If
    the rpc channel is reset, a new random poll interval is calculated
    and poll timer is adjusted accordingly.  If the existing appinfo
    poll interval is greater than the minimum interval of 30 seconds,
    random interval will be generated between 30 and appinfopollinterval.
    If the existing poll interval is less than the minimum 30 seconds
    time, then random interval will not be changed.
    
    - Code refactoring for few functions.
    - Changed one global variable as static.
    - Added few debug/info log messages.

commit 7c5845cf0cb4ee18b72f983f89a1c116c989044b
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Apr 21 14:52:11 2020 -0700

    AppInfo updates.
    
    While most of the changes are only applicable to VMware Tools for Windows
    and are not applicable to open-vm-tools, the following changes do apply.
    
    - Modified few log messages from g_debug from g_warning.
    - Modified the default poll interval to 360 minutes (Once in six hours).
    - Modified log messages to log the filepath whose version is being retrieved.

commit 8b952152cd6b31d4aedda67637310d122992109b
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Apr 21 14:52:10 2020 -0700

    Make Backdoor fallback temporary.
    
    When RpcOut falls to Backdoor, it stays with Backdoor
    permanently for the life of vmtoolsd service.  It is a
    long standing bug in the reset handling code.  Typically,
    channel type is not changed during reset.  Our reset
    handling code can either keep the channel type same or
    switch it from vsocket to Backdoor, but it can't do other
    way.  Though it is supposed to switch to vsocket on reset
    caused by events like vmtoolsd being restarted or VMX
    breaking the channel for some VM management operation.
    With this change when we start the channel, we always
    try vsocket first unless Backdoor is enforced by the
    caller.
    
    Using Backdoor for too long is not desirable because
    privileged RPCs can't be used on such channel.  So, we
    need to retry switching the channel back to vsocket
    periodically.  We don't want to try vsocket on every
    RpcChannel_Send call because that adds to overhead and
    increases the latency of RpcChannel_Send due to connection
    timeouts.  So, we retry vsocket with a backoff delay
    between 2sec-5min.
    
    As some RpcChannel callers intend to use Backdoor channel
    we need to differentiate between such usage from the
    callers that create vsocket channel and fallback to
    Backdoor.  Therefore, introduced a concept of mutable
    channel.  The vsocket channel is mutable as it can fallback
    to Backdoor and restore vsocket.  However, if a caller
    creates Backdoor channel, it will not be mutable and
    stay with Backdoor for its lifetime.
    
    As vmxLogger frequently connects and disconnects the
    channel for every log message and does not use any
    privileged RPC, so make it use Backdoor channel
    permanently to avoid frequent vsocket connections.
    
    Additionally, removed the redundant 'stopRpcOut' interface
    and renamed 'onStartErr' to 'destroy'.

commit f216c7024d2fa815147eca47014bed66d2d43894
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Apr 1 11:54:20 2020 -0700

    update version to 11.1.0

commit 0a2ae04c1aaa26186add04e6f44823ec6777ca5b
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Apr 1 11:53:33 2020 -0700

    sync tclodefs.h to source

commit 2b0a7464b81d91e52074b9af049753d0ed1523af
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Apr 1 11:34:06 2020 -0700

    serviceDiscovery: Adding sleep before 'RpcChannel_SendOneRawPriv' call.

commit 8b1c196d3ac08748285592fc0cb2e23012d76173
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Apr 1 11:34:06 2020 -0700

    Do a 100 msec delay for each vsock channel start retry.
    
    Move the 100 msec delay into the vsock RPC start retry loop.  The
    100 msec delay before each start retry is needed for errors that
    will return quickly.

commit db029643df53022a48758e5c75f2332ba99e7b7c
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Apr 1 11:34:06 2020 -0700

    Add a retry loop to VSockChannelStart() to recover on start failure.
    
    On failure, a vsock RPC channel will eventually fallback to the
    backdoor channel.  Services that require or are limited to the
    priviledge RPC channel will fail.
    
    Adding a simple, limited loop in VSockChannelStart to retry the vsock
    channel start before ultimately switching to the backdoor channel.
    Retries are not done for "send once" operations.

commit 9dbcfe022c01b032bf8a92ef2bdc569bcbd3da50
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Apr 1 11:34:06 2020 -0700

    Destroy the dedicated RPCI channel set up for the Vmx Guest Logging
    when vmtoolsd process exits.

commit 41a605e7c9298d3b1227ec22b814cb204422462c
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Apr 1 11:34:06 2020 -0700

    ServiceDiscovery: Fixing failure of sending message via RPCChannel after
    it has failed to the backdoor.

commit 8f499635a68ca5811f534cb1482ad2847842e462
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Apr 1 11:34:06 2020 -0700

    Fixing some log messages
    
    1. PublishScriptOutputToNamespaceDB can fail for various reasons,
       caller can't know exact reason from return values, so just printing
       that the function failed in case return value is FALSE.  Exact cause
       must be inferred from the function's logs itself.
    2. Printing log for chunkCount only if we successfully wrote it in NDB

commit d5713148bf3ad4b218842d0f70a66f7677ed491c
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Apr 1 11:34:05 2020 -0700

    open-vm-tools: stage all *.vmsg files
    
    Only a subset of the *.vmsg files were installed. Fixing this by
    using a glob.

commit ab320617291769464b2cfb841dcdde6fc59e9156
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Apr 1 11:34:05 2020 -0700

    vmtools: fix compiler errors in posix service discovery core plugin
    
    As we build the vmtools for arm (unfortunately not on main), we hit
    a compiler warnings "ISO C90 forbids mixed declarations and code"
    in this new code.

commit 0269b76545bc9b1c6d3cbaeb5826089ea978cd6e
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Apr 1 11:34:05 2020 -0700

    Annotate a Coverity false positive.
    
    The open-vm-tools Coverity scan reports a NULL pointer dereference
    for the variable untrustedCerts.  However, untrustedCerts is NULL
    only if no untrusted certs are found, in which case the code that
    dereferences untrustedCerts isn't executed.

commit 6ade13b5955db0227912487b569e519f1b6241b4
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Mar 17 14:36:58 2020 -0700

    ServiceDiscovery: Correcting warning log if operation over RPC has failed.

commit 0d643b05bdd0322fe0ef826d76087221e351f2ea
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Mar 17 14:36:58 2020 -0700

    Service Discovery plugin integration into open-vm-tools

commit 1aab2602bc198fcc98d9aadfbd71771063f6c3b9
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Mar 17 14:36:58 2020 -0700

    Backout previous change to lib/unicode/unicodeSimpleTypes.c

commit a994ab0ba4ddaa796d4677b5923cd3ef1267bece
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Mar 17 14:36:57 2020 -0700

    bora/lib/unicode: fix leak on exit
    
    The hashtable used for encoding name -> IANA table index
    lookups was not getting freed.
    
    Also, HashTable_AllocOnce() incorrectly instructs
    the hashtable to clear its clientData, which contains
    an integer index and not a pointer, using "free".

commit 7d014ec26c28c4d9379879270fb8704f8dce6b57
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Mar 17 14:36:57 2020 -0700

    Common source file change not applicable to open-vm-tools.

commit c8252e3ea8e111818c63eff87254a9a3a2e7d02b
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Mar 17 14:36:57 2020 -0700

    Common header file change not applicable to open-vm-tools.

commit 04fd0b21b69cd1285fb24df4647168797de1b039
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Mar 17 14:36:57 2020 -0700

    Common header file change not applicable to open=vm-tools.

commit 4d7317e88fbf2384ba30d7599e1c38921134a113
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Mar 17 14:36:57 2020 -0700

    Fix a Coverity-reported overrun.
    
    A Coverity scan of open-vm-tools reports a buffer overrun in
    Escape_Unescape.  The problem is that Escape_Unescape uses
    sizeof('\0') to specify the size of a buffer that consists of
    a single character in the variable nulByte (previously named
    nullbyte).  However, character literals in C are ints, so
    sizeof('\0') is equivalent to sizeof int rather than sizeof char.
    Use "sizeof nulByte" instead.

commit fcd16fe5ef52d51bf5ef34c55ca763e23d5d6d7c
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Mar 17 14:36:56 2020 -0700

    Common header file change not applicable to open-vm-tools.

commit ad9247fd5efe7d38f9e61db13eea849f01b21ef6
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Mar 17 14:36:56 2020 -0700

    Remove the now unused LOGLEVEL_VARIADIC

commit ad88e6369dd48f7e8ed6f228ecdb5fba1669a13f
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Mar 17 14:36:56 2020 -0700

    Common header file change not applicable to open-vm-tools.

commit 5815d916ef067ba2c42d8bc4f8124dda6c66d848
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Mar 17 14:36:56 2020 -0700

    Common header file change not applicable to open-vm-tools.

commit 9fe2a62d8b86c805a1552e1a50dfb75de7b0f696
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Mar 17 14:36:56 2020 -0700

    LOG variadic: remove LOGLEVEL_VARIADIC [1 of 2]
    
    Mass conversion is complete. It's time to remove the intermediate state.
    [1/2]: remove LOGLEVEL_VARIADIC from loglevel_defs.h.  This removes the
    backwards-compat path.

commit 95bb9273cccfd38e0f3299828a0a6cf5a8c30efb
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Mar 17 14:36:55 2020 -0700

    Update copyright to reflect previous change.

commit 8dbd6e991315bb1b0a18c369c4d2bb165ef1f184
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Mar 17 14:36:55 2020 -0700

    Fix a trivial memory leak in namespacetool.c.
    
    Fix a memory leak reported by a customer based on their Coverity
    scans of open-vm-tools.

commit 534aabe47851e71524bffcffeb7f60ad4d1993dd
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Mar 17 14:36:55 2020 -0700

    Common header file change not applicable to open-vm-tools.

commit 9933bf8930d5dd7ffb913c4b2629280befd97bf5
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Mar 17 14:36:55 2020 -0700

    Common header file change not applicable to open-vm-tools.

commit 36d5425215ec95779774c276731f26338da08a13
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Mar 17 14:36:55 2020 -0700

    Common header file change not applicable to open-vm-tools.

commit ac7bce08fcebaf91a166aa93901c4c3b70b4be57
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Mar 17 14:36:55 2020 -0700

    Common header file change not applicable to open-vm-tools.

commit 189e63b2ee5b0f92044b816363a7981494135840
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Mar 17 14:36:54 2020 -0700

    Provide a switch in VMTools configuration to disable guest customization.
    
    This switch can prevent a VI admin from running customization on a VM that
    is already customized and give control to guest admin to decide this.
    
    By default the guest customization is enabled.

commit 22aecd9eb691f0e3bf19f7b343b6a9e0e5b7b296
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Mar 17 14:36:54 2020 -0700

    Provide a switch in VMTools configuration to disable guest customization.
    
    Header file change: adding error enumerations.

commit cbf1f71c278d94777a94b4f0c4ce27b39ad726ad
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Mar 17 14:36:54 2020 -0700

    Common header file change not applicable to open-vm-tools.

commit 8e4de82af2a71d14197abf31990a16a31fb8a8a8
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Mar 17 14:36:54 2020 -0700

    open-vm-tools: add --enable-valgrind configure option
    
    Add the option "--enable-valgrind" to the ./configure command, and test
    if the necessary headers are installed.

commit 0da01328633ad1fe705460fc0f60b9c30ff0ea3f
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Mar 17 14:36:54 2020 -0700

    Fix crash because xerror in get_monitor_at_window
    
    Sometimes there is an x drawable error while calling get_monitor_at_window.
    This error can be safely ignored.

commit 9e0b84a2bd6a2fd918970e4dbab24668d4689268
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Mar 17 14:36:53 2020 -0700

    VMware Tools service discovery core plugin changes
    
    First step in creating a new plugin to collect in-guest process related
    data over Namespace DB.

commit e39585728582b2c169da61948e946a501c897a11
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Mar 17 14:36:53 2020 -0700

    Common header file change not applicable to open-vm-tools.

commit 8e49a8032a2bcbf546e62cee5629cd1215f4ad0a
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Mar 4 12:07:13 2020 -0800

    Common header file change not applicable to open-vm-tools.

commit bbcd0accb045637c56d9dfe9b7ac114d74ac6d73
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Mar 4 12:07:13 2020 -0800

    Mapping the deployPkg log error level to g_log warning level.
    
    g_error() is always fatal, resulting in terminating the application.  In
    this case the guest customization will fail.  So mapping the deployPkg log
    error level to g_log warning level to avoid application termination.

commit 1d11a7eebf2de97efecbdd4cf86104625ce10848
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Mar 4 12:07:13 2020 -0800

    Common header file change not applicable to open-vm-tools.

commit bf9de87b3cd4d25e6ca23db63c01f353acf40419
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Mar 4 12:07:13 2020 -0800

    Send GUESTRPCPKT_FIELD_FAST_CLOSE when doing one-off RPC via vsock
    
    To work around a vsock/vmci/VMX issue with vsock cleanup, send a special
    command that tells the VXM to immediately close a vsock after completing
    an RPC.  This minimizes delays/timeouts when sending one-off RPCs rapdily.
    
    Can still run out of vsockets, but they clean up pretty quickly,
    so add logic to sleep a bit and retry if ENOBUFS is returned
    by connect().

commit 7221cc5b2498b57d9d7f2284aec913a2561e8a8b
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Mar 4 12:07:13 2020 -0800

    Changes to common source files not directly applicable to open-vm-tools.

commit fc612a0fb6410a0f0448a633db57cce174bd13d3
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Mar 4 12:07:12 2020 -0800

    Misc. Appinfo plugin cleanup.
    
    - Used 'g' prefix for the global variables.
    - Added '%s' at the beginning of each log message.
    - Renamed a non-static function with the proper naming convention.
    - Fixed documentation for few functions.
    - Added '.' at the end of each log message to maintain consistency.
    - Used proper '// IN' comments for each function argument.

commit 612a72437d5d5408eafb015abfa83ae3915afb4e
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Mar 4 12:07:12 2020 -0800

    Common header file change not applicable to open-vm-tools.

commit 281bef810a9aa6e666635de716a56fd9898c835a
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Mar 4 12:07:12 2020 -0800

    Replace VixTools_ConfigGetBoolean with VMTools_ConfigGetBoolean
    
    Initially came up with a utility function named VixTools_ConfigGetBoolean
    to retrieve the boolean value from the config dictionary.  This function
    was designed as local/specific to VIX plugin.  Later, VMTools_ConfigGetBoolean
    function was designed with the same functionality and is being used everywhere
    in the Tools repository.
    
    This changeset gets rid of VixTools_ConfigGetBoolean and replaces
    all those occurrences with VMTools_ConfigGetBoolean.

commit 042d34dbc9b4e8932a71fb1be9341aa5bb70f2f0
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Mar 4 12:07:12 2020 -0800

    Common source file changes not directly applicable to open-vm-tools.
    
    Add a new error ASOCKERR_WEBSOCK_UPGRADE_NOT_FOUND in asyncsocket

commit 5c984cb0d9c72a1ef61cdb378371c528c83b3109
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Mar 4 12:07:12 2020 -0800

    Common source file changes not directly applicable to open-vm-tools.
    
    Fix procMgr library for Windows.
    
    - For windows, to retrieve the command line for a target process,
    the procMgr library creates a remote thread in the target process
    and executes GetCommandLine function.  This approach is OK. But for
    few applications that are not built with proper flags, creating a
    remote thread may crash the application.  In order to avoid any
    issues, it was decided not use the 'remote thread' approach by DEFAULT.
    
    - Refactored the procMgr APIs to take an input argument from the
    user if the 'remote thread' approach needs to be used.
    
    - Refactored the procMgr APIs to conditionally use the WMI for
    retrieving the command line for a target process.
    
    - New options are provided to the user if the 'remote thread'
    and 'WMI' approaches need to be forced.  Modified the VIX tools plugin
    to read and honor the new flags from tools.conf
    
    The following are the new flags under guestoperations group.
    useRemoteThreadForProcessCommandLine
    useWMIForProcessCommandLine
    
    The default value for the above new flags is false. User can set them
    to true if needed.
    
    - Re-factored some code in appInfo plugin that calls procMgr library.
    The appinfo plugin doesn't really use the commandline.  So, modified the
    appinfo plugin to just use the API that doesn't use the complicated
    approaches for the listing down the processes.

commit 3ed8028fb99dbf9e03189ad38ad190abfabdbe3e
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Mar 4 12:07:12 2020 -0800

    Common header file change not applicable to open-vm-tools.

commit 2e10ecfb138f43e225be1830ca4d3558f5749aa6
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Mar 4 12:07:12 2020 -0800

    Arm64 backdoor: Disable USE_HYPERCALL for Arm64 tools build.
    
    Undefine USE_HYPERCALL on ESXi-Arm to force the backdoor interface type
    to BACKDOOR_INTERFACE_IO.  This is necessary to fix the Arm64 tools build.
    This change does not affect x86 (open-vm-tools).

commit 29703e3fff4902856e2ae339cd855abb9a852795
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Mar 4 12:07:12 2020 -0800

    FreeBSD has removed some vnops flags that have never been used.
    
    Two flags that were being tested in the nullfs vnops.c source have
    never actually been used by any filesystem layer on top of the nullfs.
    FreeBSD is doing a little house cleaning and the VDESC_NOMAP_VPP and
    VDESC_VPP_WILLRELE defines are being removed from the source base.
    
    FreeBSD has provided source code changes for the FreeBSD vmblock
    driver as they have made in identical nullfs code in the FreeBSD
    base code.
    
    Pull request: https://github.com/vmware/open-vm-tools/pull/403

commit ca0882fa641ac4f96d344d45b5b7ede079cbc8ab
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Mar 4 12:07:12 2020 -0800

    VMTools 11.1.0: update visible copyrights to 2020.

commit 8283c6097cb790faa1e9e91083a5dd4467aa9e67
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Mar 4 12:07:12 2020 -0800

    Add hypercall to bora/lib/backdoor.
    
    Use vmcall or vmmcall when they are available.
    Removed #include <string.h>, it was added in an earlier version
      but is not needed in the current code.
    Limit HostinfoBackdoorGetInterface to x86 architecture.
    Fix some indents.

commit cf0c01b9e8fefeffdc9fe7d056b58be38e09585a
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Mar 4 12:07:12 2020 -0800

    Remove 'VMware Confidential' from license files for publishing

commit 65a1e8dc319cfdfba9a28a36f09c53a02e5f12c1
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Mar 4 12:07:11 2020 -0800

    Handle LSI Logic Parallel and BusLogic SCSI on PCI bus 0.
    
    When a LSI Logic Parallel or BusLogic SCSI controller appears on PCI
    bus 0, the disk device controller name is not present; the "label" file
    is missing.  Adding logic to check if disk device is attached to a
    SCSI controller on bus 0 (0000:00:10.0) if a "label" file cannot be
    found.  If that is the case, setting the device name to "scsi0.n"
    where "n" is the device unit number previously determined.

commit e57a30556795bd93bd9bb31ca8ae91e1d87fd169
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Mar 4 12:07:11 2020 -0800

    Common header file change not applicable to open-vm-tools.

commit fe560d2644059e7da408c6336837a9fddbee75f4
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Mar 4 12:07:11 2020 -0800

    Common header file change not applicable to open-vm-tools.

commit 21d6e2b3322a6f41c6f13d4608d03b4fc340edbe
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Mar 4 12:07:11 2020 -0800

    Fix broken PowerCLI Invoke-VMScript cmdtlet by an earlier change.
    Also fixed a handle leak in VixToolsGetTokenHandleFromTicketID.
    
    Note: Credential type VIX_USER_CREDENTIAL_TICKETED_SESSION, started by
    VIX_COMMAND_ACQUIRE_CREDENTIALS, is not built upon VGAuth lib
    VGAuth_GenerateSSPIChallenge/VGAuth_ValidateSSPIResponse, impersonation is
    done via lib/impersonate/impersonate.c::Impersonate_Do, the loaded user
    profile is designed to be unloaded after 5 minutes, but because vix.dll is
    linked with stub lib poll whose Poll_CB_RTime() does not do anything, the
    profile is never unloaded.

commit fc25b21183e0ab6b38516a3b07e0391a7750775b
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Mar 4 12:07:11 2020 -0800

    Handle Photon's "/dev/root" mount point when doing disk device mapping
    
    Photon EFI boot VMs have the root disc mounted long before the various
    PCI controllers are initialized and the attached devices enumerated.
    When looking through the /proc/mounts, the root filesystem mounted
    at '/' is displayed as if on device /dev/root/  But there is no "root"
    device in /dev, nor in the PCI device tree at /sys/class/block.  Later
    Photon builds fabricate a block device at "/dev/root" but again nothing
    in the /sys/class/block PCI tree.
    
    For this situation, it is necessary to use the pseudo device's major and
    minor number to access the PCI device tree through /sys/dev/block.
    The major and minor device number can be extracted from the contents of
    /proc/self/mountinfo.
    
    19 0 8:2 / / rw,relatime shared:1 - ext4 /dev/root rw
    
    The 3rd field is the major:minor number and the 9th or 10th, depending
    on Linux release, is the pseudo device in this case.

commit c53e54623f537e96a66811e16d48a2523f4833f8
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Mar 4 12:07:11 2020 -0800

    Rectify a log spew in vmsvc logging (vmware-vmsvc-root.log)
    
    When a LSI Logic Parallel SCSI controller sits in PCI bus 0
    (SCSI controller 0), the Linux disk device enumeration does not provide
    a "label" file with the controller name.  This results in messages like
    
    'GuestInfoGetDiskDevice: Missing disk device name; VMDK mapping
    unavailable for "/var/log", fsName: "/dev/sda2"'
    
    repeatedly appearing in the vmsvc logging.  The patch converts what
    previously was a warning message to a debug message and thus avoids
    the log spew.
    
    This patch has been made available for open-vm-tools 11.0.x on the
    open-vm-tools github repo.
    
    https://github.com/vmware/open-vm-tools/issues/404

commit 051b675718e9d6fd1178dcf9aa94280c9a85878c
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Feb 12 16:49:09 2020 -0800

    Common header file change not applicable to open-vm-tools.

commit ec141cba95763f4fd3e1baf2dd54d539bfd4124d
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Feb 12 16:49:09 2020 -0800

    Common header file change not applicable to open-vm-tools.

commit 7d022445fa482856df3a6fc590c1d97857a618d0
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Feb 12 16:49:09 2020 -0800

    FreeBSD kernel API changes with FreeBSD 13.0 (development)
    
    VOP_UNLOCK(): second argument "flags" has been dropped when the kernel
    version is >= 1300074.
    
    The timeout(9) interface has been deprecated and must be replaced with
    callout(9) (v2) when the kernel version >= 1300067.
    
    https://github.com/vmware/open-vm-tools/pull/398

commit c4217eca9152615e40685fdab8f4728ddcb77a26
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Feb 12 16:49:09 2020 -0800

    Common source file change not directly applicable to open-vm-tools.

commit 5a3d12b2ea0e53227a437aafa3bb827e2ddac8e1
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Feb 12 16:49:09 2020 -0800

    Common source file changes not directly applicable to open-vm-tools.

commit e20954a2b64c1b9dd4f39f05a023a8e09b38ca61
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Feb 12 16:49:09 2020 -0800

    Common header file change not applicable to open-vm-tools.

commit 5f340a8649f803868e19c941b967486f07fd2965
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Feb 12 16:49:09 2020 -0800

    Common header file change not applicable to open-vm-tools.

commit 2006b099e2cd1f5558a977f070a8710d8612cb03
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Feb 12 16:49:09 2020 -0800

    Common header file change not applicable to open-vm-tools.

commit 6310fb3128bb347bcff49af65a5bee315eb1ccc3
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Feb 12 16:49:09 2020 -0800

    lib/file: memory leak in File_WalkDirectoryNext
    
    During a sequence of POSIX readdir calls it is possible for a directory
    to be rearranged and a file that was previously reported may be found
    again.  The code that protects the caller from seeing this isn't freeing
    the file name string if a duplicate is discovered.  Fix this.

commit e267e923ab6952f56ffbfc96c51791f8c86b432d
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Feb 12 16:49:09 2020 -0800

    Common header file change not applicable to open-vm-tools.

commit cb31c37217ed2cef757747ff82a7faa4d168cf20
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Feb 12 16:49:09 2020 -0800

    Back out the previous change to lib/include/str.h

commit 066ea20d57fbbd5b9e795a7d72f1184f990c94f6
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Feb 12 16:49:09 2020 -0800

    Common header file change not applicable to open-vm-tools.

commit ee1a830adc9e509af0da97a3c7c921d0d410d721
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Feb 12 16:49:09 2020 -0800

    More LOG() calls changed to variadic form.

commit ba5964306bcfa034e7be159dbdea9675b6317b1c
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Feb 12 16:49:08 2020 -0800

    Common header file change not applicable to open-vm-tools.

commit dcd51dbbe3703b514e40928f8948bbd0ebe1ba66
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Jan 22 11:30:44 2020 -0800

    Common header file change not applicable to open-vm-tools.

commit 87b56217cb3f1fd5cc9945304d3dac9465490c96
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Jan 22 11:30:44 2020 -0800

    More LOG() calls changed to variadic form.

commit 6d17aabdc30220e295445219c4d5961974c3581c
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Jan 22 11:30:44 2020 -0800

    Common header file change not applicable to open-vm-tools.

commit b283933620f2f401afdc89dba3986d295795bd42
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Jan 22 11:30:44 2020 -0800

    More LOG() calls changed to variadic form - backdoor.c

commit 6508de0c65cc19e5e421fc58a290e13d7bbfc417
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Jan 22 11:30:44 2020 -0800

    Common header file change not applicable to open-vm-tools.

commit b992050b5ce6b9bd64bd09e6f2f62e3d811eb109
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Jan 6 15:46:20 2020 -0800

    Common header file change not applicable to open-vm-tools.

commit b4c6d05537d8ac2a3f6b0513c54b419fa159ceab
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Jan 6 15:46:20 2020 -0800

    Changes to common header files.
    Make ALIGNED() functional for 64-bit Windows
    
    The current implementation of ALIGNED in vm_basic_types.h only
    works for compilers that are, or pretend to be, GCC.  However,
    it is reasonable to conclude that data specifically aligned
    for one OS / compiler should be aligned the same way when built
    with other tools or for OSes.
    
    This change updates the ALIGNED macro to correctly function when
    building on 64-bit Windows.  If not using GCC-alike, or Windows,
    the macro continues to expand to nothing.
    
    The MSVC __declspec construct accepts a limited syntax, basically
    requiring an integer literal (see pciPassthruInfo_public.h).  It
    must be a prefix operation.
    
    The GCC __attribute__ is more expressive and can be postfix or
    prefix, so it is moved to be prefix.
    
    The bulk of the change moves the use of ALIGNED to be prefix in
    all places that compile for the Workstation product on Windows.

commit 57c8fc2e11d368f4459e6ba43010b7f2fd93cdfd
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Jan 6 15:46:20 2020 -0800

    LOG_ONCE changes to variadic just as LOG did recently.

commit cd33d0ff8192464981d434bfb1046800e1afd77e
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Jan 6 15:46:20 2020 -0800

    common header file changes not applicable to open-vm-tools.

commit 91cbb2154acd9a677554e163395496e41bc777ce
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Jan 6 15:46:20 2020 -0800

    Tools: More support for "VMware Tools for Linux-arm64"
    
    Preliminary touch-ups in the main branch to support the upcoming upstreaming
    of the "VMware Tools for Linux-arm64" build code.
    
    bora-vmsoft/vgauth/service/servicePosix.c:
      The glibc on arm64 does not have <sys/io.h>.  It makes sense because I/O
      ports are an x86-ism (for more details, sees
       https://bugzilla.redhat.com/show_bug.cgi?id=1116162#c1 ).  Instead of
      making the inclusion conditions more complex, It was noticed that none
      of the symbols defined in <sys/io.h> and <sys/sysinfo.h> are used in
      this C file.  So these inclusions are not necessary.

commit fb094158dc64a238109b117c59ca608868f505a9
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Jan 6 15:46:19 2020 -0800

    Common header file change not directly applicable to open-vm-tools.

commit c7971d265c234df0ef5af03155c6d90c52fb6398
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Jan 6 15:46:19 2020 -0800

    Remove overly complex ifdefs in the dndcp plugin.

commit 033d4f020159ac0761f2d047a86282942d49b7c5
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Jan 6 15:46:19 2020 -0800

    Common header file change not applicable to open-vm-tools.

commit 3518ebdfbe2ac695e5533e0fb9ad5887ecae53be
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Jan 6 15:46:19 2020 -0800

    Common header file change not applicable to open-vm-tools.

commit cf27e959987100bb4e055c3f61dbcb7f493b560f
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Jan 6 15:46:19 2020 -0800

    Common header file change not applicable to open-vm-tools.

commit b1798eedf5cb6ce0735bf04fe2433593b0d03078
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Dec 20 12:25:52 2019 -0800

    Common header file change not applicable to open-vm-tools.

commit 8692f38c787641bf1382cfc8b9ff6a71b845edcc
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Dec 20 12:25:52 2019 -0800

    Common header file change not applicable to open-vm-tools.

commit 970a9f62d508a1f011adf418d28f56017a4ba998
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Dec 20 12:25:52 2019 -0800

    Common header file change not applicable to open-vm-tools.

commit 4d4e1c58de6e8b5b5bdb74549b6af1294e7cb2ba
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Dec 20 12:25:52 2019 -0800

    Common header file change not applicable to open-vm-tools.

commit b5f6d338c4bdbaa4b317e730dd48a7e9155f0245
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Dec 20 12:25:52 2019 -0800

    Implement better logging for deploypkg plugin if vmware-imc cannot be created.
    
    If vmware-imc cannot be created, log the error message and also redirect the
    customization log to tools log.

commit 5ee8c84e05c52cd383900206af1358e3daee8576
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Dec 20 12:25:52 2019 -0800

    Common header file change not applicable to open-vm-tools.

commit 676758062428e6d40330733ee9df30cdc7d39fb8
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Dec 20 12:25:52 2019 -0800

    A previous change incorrectly deals with the capacity of file system - the
    file system size - and the amount of free space the file system has.
    
    Revert the change; fix a function header; comments to make it clear
    what not to break in the future.

commit 5cf122276604a3737405eae5c187ecd610da0341
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Dec 20 12:25:51 2019 -0800

    Clean up and make consistent [trivial]
    
    Make the ASSERTs consitent in their coding; clean up a few things.

commit 157ca9f1d9d9c119b1bd770c82461a47e3a6dbd5
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Dec 20 12:25:51 2019 -0800

    Common header file change not applicable to open-vm-tools.

commit 60fed34eea765f919275495de794ff38a3119c17
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Dec 20 12:25:51 2019 -0800

    Common header file change not applicable to open-vm-tools.

commit bb0cd9aad5d363c59ccd05841c0126e8cc750c7c
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Dec 20 12:25:51 2019 -0800

    Common header file change not applicable to open-vm-tools.

commit 4f81aa0811baf66ed35404057bcc31349abddc41
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Dec 20 12:25:51 2019 -0800

    File locking depriv, part 2
    
    Remove the device locking code.

commit 1d4460c162623d7087eb50f2cb23c72f56efe82e
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Dec 20 12:25:51 2019 -0800

    Common header file change not applicable to open-vm-tools.

commit ff627f66bfe150a9bc88fb7449a9fc80ba9cff77
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Dec 20 12:25:51 2019 -0800

    common header file change not applicable to open-vm-tools.

commit e2407c8e1feb77efc725973768fc619cbe9680a5
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Dec 20 12:25:51 2019 -0800

    Changes to common source files not directly applicable to open-vm-tools.
    Depriv the file locking code, part 1
    
    This is the first change in a series of changes toward removing the
    need to be root to use the file locking code.  Here, doing some cleanup
    and separate the file locking code from the device locking code.
    
    Another later change will depriv the file locking code.

commit 9014ac687a927ef84c4a8787d7750907778c6623
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Dec 20 12:25:51 2019 -0800

    Common header file change not applicable to open-vm-tools.

commit 986aa71953e2b4c776459bf914bec5c63bfa8739
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Dec 20 12:25:50 2019 -0800

    Common header file change not applicable to open-vm-tools.

commit 342004519d6cddf3a6521e26fc91b1a5c2afa5ad
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Dec 20 12:25:50 2019 -0800

    [Dynbuf] Rename DynBuf_GrowToFit to DynBuf_EnsureMinSize
    
    As suggested, GrowToFit isn't a verb, suggest renaming the function to
    DynBuf_EnsureMinSize, and change the description as "Ensure that the
    size of the DynBuf is at least 'size'"
    
    Change all references of DynBuf_GrowToFit to DynBuf_EnsureMinSize.

commit 6bd31f83d7ee03570b9972a0de2d61e82b04ba5c
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Dec 20 12:25:50 2019 -0800

    Remove sslDirect.c from open-vm-tools.
    
    It is no longer needed.

commit 78a0386068bf4438264941b9a4687d76cf2dcd42
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Dec 20 12:25:50 2019 -0800

    [Dynbuf] Fix minor bug in DynBuf_GrowToFit
    
    DynBuf_GrowToFit tries to provide a dynbuf with size greater than the
    given size.  However, the second argument passed to DynBuf_Enlarge doesn't
    match the intention.  The size should be directly passed, not the
    difference between the target and current size.

commit 3cd8267326d13769388ce45ccae4b40c4f95ce6b
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Dec 20 12:25:49 2019 -0800

    Trivial - Add Copyright symbol '(c)' to tools.conf.
    
    Missed this in the previous review.
    Legal guidelines are to use '(c)' in ASCII files.

commit b81e6d576880fa445621441b543d4cb22706c024
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Dec 20 12:25:49 2019 -0800

    Add Copyright notice to bora-vmsoft/install/common/tools.conf.

commit 7251b9f5e7f51e07936b50e87d6226d24035045b
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Dec 20 12:25:49 2019 -0800

    Common header file change not applicable to open-vm-tools.

commit 7d5ec189d420f560eb237f9e2e7dea4fad0a26bc
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Dec 20 12:25:49 2019 -0800

    Common header file change not applicable to open-vm-tools.

commit 61b43df047e0a6666590016966b9574af21951a8
Author: Oliver Kurth <okurth@vmware.com>
Date:   Thu Dec 5 11:34:43 2019 -0800

    Avoid vmtoolsd crash in HostInfo.
    
    The guest identification code causes vmtoolsd to crash in certain
    versions of some distros.  The crash is caused by recent changes to
    the lsb_release command.  Previously, if the command existed, all
    of its options worked.  Now, some of the options no longer exist.
    
    Change the code to check for an lsb_release failure whenever it is
    invoked.
    
    Fix for: https://github.com/vmware/open-vm-tools/issues/390

commit f6b2c50803a7656522265b59e22b77fce6b317c8
Author: Oliver Kurth <okurth@vmware.com>
Date:   Thu Dec 5 11:34:43 2019 -0800

    Remove an unused variable from the "VMware Tools for Linux-Arm" build
    
    The gHvVendor variable is unused when building for arm64.  So move the
    variable declaration next to the only x86 code which uses the variable,
    and rename the variable since it is no longer global.

commit 73454a5402f71520fefe38e207d03d13e84aca7a
Author: Oliver Kurth <okurth@vmware.com>
Date:   Thu Dec 5 11:34:43 2019 -0800

    Introduce Clang SA-specific assert
    
    Introduce an assert which would only be generated during clang SA
    execution.  With it we would avoid generating extra code from
    assertations which might be needed specifically for Clang SA's correct
    working (even with enabled analyzer, binary wouldn't grow, as
    __clang_analyzer__ is only defined while the analyzer is parsing
    the files for analysis, and not during Clang's compilation).
    
    Cases in which might be used is for example before a statement which
    we are fine just to fail or to possibly silence a false positive.
    
    A real example where we would require such assertion is for the attached
    report in the review.  There seem to be a bug with the analyzer where it
    will falsely ignore branches if we assert a parent class pointer before
    using dynamic_cast as it will evaluate both pointers to be same.
    
    To show more precisely, we would use helper functions from debug checker
    ExprInspection.
    
    Example 1:
    745 void
    746 DvsKeeper::GetMethodFault(Exception *e, Ref<MethodFault>& fault)
    747 {
    748    MethodFault::Exception *mfe = dynamic_cast<MethodFault::Exception *>(e);
    749    clang_analyzer_warnIfReached();
    750    if (mfe != nullptr) {
    751       clang_analyzer_warnIfReached();
    752       fault = mfe->GetFault();
    753    } else {
    754       clang_analyzer_warnIfReached();
    755       fault = new SystemError(e->what());
    756    }
    757    clang_analyzer_warnIfReached();
    758 }
    
    This would generate the following warnings:
    bora/vpx/vpxd/dvs/core/dvsKeeper.cpp:749:4: warning: REACHABLE
    clang_analyzer_warnIfReached();
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    bora/vpx/vpxd/dvs/core/dvsKeeper.cpp:751:7: warning: REACHABLE
    clang_analyzer_warnIfReached();
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    bora/vpx/vpxd/dvs/core/dvsKeeper.cpp:754:7: warning: REACHABLE
    clang_analyzer_warnIfReached();
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    bora/vpx/vpxd/dvs/core/dvsKeeper.cpp:755:31: warning: Called C++ object pointer is null
    fault = new SystemError(e->what());
    ^~~~~~~~~
    bora/vpx/vpxd/dvs/core/dvsKeeper.cpp:757:4: warning: REACHABLE
    clang_analyzer_warnIfReached();
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    5 warnings generated.
    
    Example 2:
    745 void
    746 DvsKeeper::GetMethodFault(Exception *e, Ref<MethodFault>& fault)
    747 {
    748    ASSERT(e != nullptr);
    749    MethodFault::Exception *mfe = dynamic_cast<MethodFault::Exception *>(e);
    750    clang_analyzer_warnIfReached();
    751    if (mfe != nullptr) {
    752       clang_analyzer_warnIfReached();
    753       fault = mfe->GetFault();
    754    } else {
    755       clang_analyzer_warnIfReached();
    756       fault = new SystemError(e->what());
    757    }
    758    clang_analyzer_warnIfReached();
    759 }
    Result:
    bora/vpx/vpxd/dvs/core/dvsKeeper.cpp:750:4: warning: REACHABLE
    clang_analyzer_warnIfReached();
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    bora/vpx/vpxd/dvs/core/dvsKeeper.cpp:752:7: warning: REACHABLE
    clang_analyzer_warnIfReached();
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    bora/vpx/vpxd/dvs/core/dvsKeeper.cpp:758:4: warning: REACHABLE
    clang_analyzer_warnIfReached();
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    3 warnings generated.
    
    When we do that, the whole else branch is unreachable by the analyzer,
    which shouldn't be the case.
    
    Example 3:
    745 void
    746 DvsKeeper::GetMethodFault(Exception *e, Ref<MethodFault>& fault)
    747 {
    748    ASSERT(e != nullptr);
    749    MethodFault::Exception *mfe = dynamic_cast<MethodFault::Exception *>(e);
    750    ASSERT(mfe == nullptr);
    751    clang_analyzer_warnIfReached();
    752    if (mfe != nullptr) {
    753       clang_analyzer_warnIfReached();
    754       fault = mfe->GetFault();
    755    } else {
    756       clang_analyzer_warnIfReached();
    757       fault = new SystemError(e->what());
    758    }
    759    clang_analyzer_warnIfReached();
    760 }
    
    No warnings are generated, and 'mfe' can be null if the cast fails.
    
    Example 4:
    746 void
    747 DvsKeeper::GetMethodFault(Exception *e, Ref<MethodFault>& fault)
    748 {
    749    ASSERT(e != nullptr);
    750    MethodFault::Exception *mfe = dynamic_cast<MethodFault::Exception *>(e);
    751    clang_analyzer_eval(e == mfe);
    752    clang_analyzer_warnIfReached();
    753    if (mfe != nullptr) {
    754       clang_analyzer_warnIfReached();
    755       fault = mfe->GetFault();
    756    } else {
    757       clang_analyzer_warnIfReached();
    758       fault = new SystemError(e->what());
    759    }
    760    clang_analyzer_warnIfReached();
    761 }
    bora/vpx/vpxd/dvs/core/dvsKeeper.cpp:751:4: warning: TRUE
    clang_analyzer_eval(e == mfe);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    bora/vpx/vpxd/dvs/core/dvsKeeper.cpp:752:4: warning: REACHABLE
    clang_analyzer_warnIfReached();
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    bora/vpx/vpxd/dvs/core/dvsKeeper.cpp:754:7: warning: REACHABLE
    clang_analyzer_warnIfReached();
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    bora/vpx/vpxd/dvs/core/dvsKeeper.cpp:760:4: warning: REACHABLE
    clang_analyzer_warnIfReached();
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    4 warnings generated.
    
    Even knowing 'e' is not a nullptr, the analyzer falsely evaluates 'e'
    and 'mfe' to be the same, which leads to many other wrong assumptions.
    
    Example 5 (What would be best way to work around this bug with least
               analyzer impact):
    745 void
    746 DvsKeeper::GetMethodFault(Exception *e, Ref<MethodFault>& fault)
    747 {
    748    MethodFault::Exception *mfe = dynamic_cast<MethodFault::Exception *>(e);
    749    clang_analyzer_warnIfReached();
    750    if (mfe != nullptr) {
    751       clang_analyzer_warnIfReached();
    752       fault = mfe->GetFault();
    753    } else {
    754       clang_analyzer_warnIfReached();
    755       ASSERT(e != nullptr);
    756       clang_analyzer_warnIfReached();
    757       fault = new SystemError(e->what());
    758    }
    759    clang_analyzer_warnIfReached();
    760 }
    bora/vpx/vpxd/dvs/core/dvsKeeper.cpp:749:4: warning: REACHABLE
    clang_analyzer_warnIfReached();
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    bora/vpx/vpxd/dvs/core/dvsKeeper.cpp:751:7: warning: REACHABLE
    clang_analyzer_warnIfReached();
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    bora/vpx/vpxd/dvs/core/dvsKeeper.cpp:754:7: warning: REACHABLE
    clang_analyzer_warnIfReached();
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    bora/vpx/vpxd/dvs/core/dvsKeeper.cpp:759:4: warning: REACHABLE
    clang_analyzer_warnIfReached();
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    4 warnings generated.
    
    In such cases, we could look into the problem as both real and analyzer
    issue and other ways to "fix" it either don't work, or impact the further
    work of the analyzer, which we would like to be as minimal as possible.

commit e965f72a06ee24cf439a717bf72d1c3e6035dfa9
Author: Oliver Kurth <okurth@vmware.com>
Date:   Thu Dec 5 11:34:43 2019 -0800

    LinuxDeployment.c: Temp directories are not cleaned up in the case of error.
    
    Clean up the created temporary directory if an error happens.

commit bc00152c1e5df9284eee2914062adaa3eb51a9f5
Author: Oliver Kurth <okurth@vmware.com>
Date:   Thu Dec 5 11:34:43 2019 -0800

    Add arm64 support in open-vm-tools
    
    This adds the required files and fixes to be able to build
    the open-vm-tools for arm64.
    
    One major change is the update of autoconf from 2.61 to 2.69,
    with automake.  The autoconf update forced to add the libtool
    include path to properly run autoreconf on the tools.  I don't
    know if these AUTOCONF/AUTORECONF variables are used anywhere
    else.
    
    The open-vm-tools have been tested on debian 10 and fedora 31
    VMs (thanks to Andreas Scherr).
    
    Also fixed Hostinfo_TouchVirtualPC() which was incorrectly
    testing if vm_x86_64 was defined.  It is always defined, to
    either to 0 or 1.

commit 4ee97f9eacb8d2794b74f0dc4f7f38eee447d40b
Author: Oliver Kurth <okurth@vmware.com>
Date:   Thu Dec 5 11:34:41 2019 -0800

    Clean up some code in hostinfo.
    
    Remove duplicate declarations in hostinfo.h
    Re-indent some lines in hostinfoPosix.c

commit 133c22738db8d6a3112f838ce99dbafd4f8ed28e
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Nov 22 14:52:35 2019 -0800

    Change to common header file not applicable to open-vm-tools.

commit e744e367695a540a22e112ca9f03761aade13081
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Nov 22 14:52:35 2019 -0800

    Change to common header file not applicable to open-vm-tools.

commit 2ffd2913088505d8249fa342b0ee8e5002a69108
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Nov 22 14:52:35 2019 -0800

    Fix a resource leak issue in deployPkg
    
    Variable file going out of scope in error path leaks the storage it
    points to.  Added fclose before return when malloc failed.

commit e848f92894a7e4d196159cdab9fb7c1cd1f2ca88
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Nov 22 14:52:35 2019 -0800

    Common header file change not applicable to open-vm-tools.

commit ab4a08b8255b75865f90bdd915698b9fface4fab
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Nov 22 14:52:35 2019 -0800

    Common header file change not applicable to open-vm-tools.

commit b74897122d4277c703e6af416dbcf48dab509e91
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Nov 22 14:52:35 2019 -0800

    Add Coverity annotations to bora/lib/file/file.
    
    Add annotations for Coverity-reported false positives in filePosix.c
    and fileIOPosix.c.

commit 76d11da84f4bbb9889effee1269a70a454c0f9bc
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Nov 22 14:52:35 2019 -0800

    Code clean up in lib/file/filePosix.c
    
    Consolidate identical code in File_GetCapacity() and File_GetFreeSpace().

commit 8a01c912927b5bb8cdbfa57f5e8c92e8cf792bef
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Nov 22 14:52:35 2019 -0800

    Address two Coverity-reported issues in hostinfoPosix.c.
    
    Rework some code with the intent of making it more straightfoward,
    which also eliminates a false positive.
    
    Check the return value from PosixUnlink and log a warning on error.

commit 0bb6cf83fb6b1f80c99beb11cd47e0db02e252ff
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Nov 22 14:52:35 2019 -0800

    Fix a potential NULL pointer dereference in the vmbackup plugin.
    
    In some circumtances, VmBackupAsyncCallback might dereference
    gBackupState after calling VmBackupDoAbort even though the
    latter function can potentially set gBackupState to NULL.  Add
    a check to prevent the potential NULL pointer dereference.

commit b401e8786801e4b4b825b40de2701eb0ea3e0e3d
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Nov 22 14:52:35 2019 -0800

    LOG() calls changed to variadic form.

commit 45af4c5b46992039cc6a2bd637815304b27317f3
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Nov 22 14:52:35 2019 -0800

    More LOG() calls changed to variadic form.

commit 195cdcfa2c1a652d043796aac68d59f4ce5d60aa
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Nov 22 14:52:34 2019 -0800

    Enable appinfo plugin for hosted products.
    
    Currently, with TOT code, appInfo plugin is loaded only when
    the VM is managed by VMware ESX server.  In this changeset, that
    limitation is removed and the plugin will be loaded for hosted
    products also.

commit 383caa13e25f90cb4e9a392523fcd333b7ca6166
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Nov 22 14:52:34 2019 -0800

    dndUIX11.cpp::GetLastDirName() Remove a trailing slash in a directory pathname.

commit 96b778ed655a182bd857ed06f032ffc47cd2b8fe
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Nov 22 14:52:34 2019 -0800

    Fix Coverity reported issue time of check to time of use (TOCTOU) in deployPkg
    
    Change to call mkdir directly, then check and log the error.

commit ddab813646c090b8498585884a4a270a56b1eb18
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Nov 22 14:52:34 2019 -0800

    LOG() calls changed to variadic form.

commit 84a8f96c904513fcb7bc4fe05f267b5914ee6dde
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Nov 22 14:52:34 2019 -0800

    Add Coverity annotations in services/plugins/dndcp/dndGuest/rpcV4Util.cpp.
    
    Add Coverity annotations for false positives reported by a scan of
    open-vm-tools.

commit d62ef1f89dbd4807e1ff2623f866966216168d10
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Nov 22 14:52:34 2019 -0800

    Changes to common header file not applicable to open-vm-tools.

commit 80ca86dc7ae0106ed398237201385e958ff2e9ea
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Nov 22 14:52:31 2019 -0800

    Backout previous change to lib/file/filePosix.c.

commit f6b78b6839bbf1e3aaa5d959404b7fd07f6e1143
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Nov 11 18:12:24 2019 -0800

    Common source file change not applicable to open-vm-tools.

commit 976cce8fdc026a490745b1cc1db57f5ae3262cda
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Nov 11 18:12:23 2019 -0800

    open-vm-tools: Do not build the appInfo plugin on FreeBSD
    
    The appInfo plugin is supported only on Linux and Windows guests.
    Modify the bora-vmsoft/install/Source/services/plugins/Makefile.am
    to only include appInfo in the build if OVT is being built for a Linux
    guest.

commit 5f5f6b66767e24c88040e9a5e8d0fa70c29da0cd
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Nov 11 18:12:23 2019 -0800

    More LOG() calls changed to variadic form.

commit fdc1434cb0d0f3121fed2849315048dbf23ee4f0
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Nov 11 18:12:23 2019 -0800

    More LOG() calls changed to variadic form.

commit 3171f29164a3f06b96b37f82efec2df68f0cf01c
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Nov 11 18:12:23 2019 -0800

    More LOG() calls changed to variadic form - dndcp plugin.

commit 7b7bb3226e6168bac11ef1d0362dccbc7a3d62f3
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Nov 11 18:12:23 2019 -0800

    More LOG() calls changed to variadic form - hgfsServer.

commit 3d6b350477a031fda825325a5013dd76a641e426
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Nov 11 18:12:23 2019 -0800

    Common source file change not applicable to open-vm-tools.

commit 6cf7efbe77ebef107f9967e105278eadcf1ad870
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Nov 11 18:12:23 2019 -0800

    Common header file change not applicable to open-vm-tools.

commit 6ead45ae869dfca654840fda4b8a6130c2779bf8
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Nov 11 18:12:23 2019 -0800

    More LOG() calls changed to variadic form.

commit 8809911de0657778187df9ef0686462c10b7077b
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Nov 11 18:12:22 2019 -0800

    More LOG() calls changed to variadic form.

commit 74f798a452b7c1d32ff401b88ec0b734ade9e427
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Nov 11 18:12:22 2019 -0800

    Common header file change not applicable to open-vm-tools

commit 3a5baa86f63b9dea95fba20283c835944a187635
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Nov 11 18:12:22 2019 -0800

    Common header file change not applicable to open-vm-tools.

commit 4820b2a9aca3d1030e3b63cc2c93808c18b799c9
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Nov 11 18:12:22 2019 -0800

    Common header file change not applicable to open-vm-tools.

commit 6ce3919d77f15395f048f839bfdb4c60cf6c6794
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Nov 11 18:12:22 2019 -0800

    Fix a potentisl memory leak in an error situation; reported by Coverity.

commit 6286ea3908c85e829a8a4df7cf91ba62331a3942
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Nov 11 18:12:22 2019 -0800

    Fix issues of unchecked return value reported by Coverity.
    
    CID 80926 (#2 of 2): Unchecked return value (CHECKED_RETURN)
    8. check_return: Calling ForkExecAndWaitCommand without checking return value
    
    CID 80934 (#2 of 2): Unchecked return value from library (CHECKED_RETURN)
    3. check_return: Calling lseek(pkgFd, 512L, 0) without checking return value.
    This library function may fail and return an error code.
    
    CID 80927 (#4 of 4): Unchecked return value from library (CHECKED_RETURN)
    5. check_return: Calling fcntl(p->stdoutFd, 4, flags | 0x800) without
    checking return value. This library function may fail and return an error
    code.

commit 1f1023bb7865175ad2a58b716656540843cc2a89
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Nov 11 18:12:22 2019 -0800

    Use malloc everywhere in linux deploypkg plugin code
    
    This change is replacing Util_SafeMalloc() by malloc() in Linux
    deploypkg plugin code.  Also changing if statement to == NULL
    or != NULL for char* type.

commit f073c9ae5307c211a6dd7c2c6661b0aa9d4af530
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Nov 11 18:12:22 2019 -0800

    Configurable environment for vmtoolsd.
    
    If a user wants to override(*) an environment variable e.g.
    TMPDIR for vmtoolsd, the only choices for the user are:
    1. Change system environment variable, that may affect more
    than vmtoolsd
    2. Change vmtoolsd service startup scripts on Linux.
    Some of these methods, especially #2 gets overwritten by
    upgrades and user is forced to re-apply the change on every
    upgrade of VMTools. Also, #2 is somewhat complex due to
    different type of VMTools installations and differences
    in Linux distros.
    
    We can't override the environment completely from within
    service but we can configure the environment to a large
    extent once vmtoolsd comes up and reads tools.conf.
    
    *=> "override" term here applies to setting, modifying and/or
    unsetting an environment variable.
    
    This is mainly required for system service vmsvc, but
    given that vmusr shares code with vmsvc, we can provide
    this functionality for both.
    
    Updated example tools.conf with the new configuration.

commit ca6253b0788dd14c15f83e8377b13f2bc60bc12d
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Nov 11 18:12:22 2019 -0800

    Back out previous change for configurable environment for vmtoolsd.
    
    Changed checked in with commented code by mistake.
    Will re-submit after uncommenting.

commit b15d067e76e668b3dabea28a1e95970af8435a5b
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Nov 11 18:12:22 2019 -0800

    Configurable environment for vmtoolsd.
    
    If a user wants to override(*) an environment variable e.g.
    TMPDIR for vmtoolsd, the only choices for the user are:
    1. Change system environment variable, that may affect more
    than vmtoolsd
    2. Change vmtoolsd service startup scripts on Linux.
    Some of these methods, especially #2 gets overwritten by
    upgrades and user is forced to re-apply the change on every
    upgrade of VMTools. Also, #2 is somewhat complex due to
    different type of VMTools installations and differences
    in Linux distros.
    
    We can't override the environment completely from within
    service but we can configure the environment to a large
    extent once vmtoolsd comes up and reads tools.conf.
    
    *=> "override" term here applies to setting, modifying and/or
    unsetting an environment variable.
    
    This is mainly required for system service vmsvc, but
    given that vmusr shares code with vmsvc, we can provide
    this functionality for both.
    
    Updated example tools.conf with the new configuration.

commit f48efc8e06529a63ab7574a97b41e6ff3846fd06
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Nov 11 18:12:22 2019 -0800

    Make pollGtk resetable.
    
    A simple poll implementation built on top of GLib, pollGtk can only be
    inited once in a program's lifetime.  This works for product but not
    testcases.
    
    This patch changes the function static variable "inited" to be file static,
    and can be reset this variable in PollGtkExit().

commit 5d636d4032c9a3eb41b3424b09faf027b81e580b
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Nov 11 18:12:22 2019 -0800

    Common header file change not applicable to open-vm-tools.

commit 2b7a823ffa977b010aa5e5a3e1b353d9b4d927fa
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Nov 11 18:12:22 2019 -0800

    Address Coverity reported issues in the DnD plugin.
      - uninitialized non-static class members.
      - memory leak.
      - potential NULL pointer dereference.

commit 7e102f91548493e2dd5af12adac09fc6df539479
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Nov 11 18:12:22 2019 -0800

    Common header file change not applicable to open-vm-tools.

commit 05f650fd234c47762f5427ad1fbd047c617f87e5
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Nov 11 18:12:21 2019 -0800

    Common header file change not applicable to open-vm-tools.

commit f3ecb1047c92f2d076029d066286e416790b9af3
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Nov 11 18:12:21 2019 -0800

    Address some issues reported by the Coverity scan of open-vm-tools.
    
    Fix or annotate issues reported in the Coverity scan of open-vm-tools,
    as follows:
    
    (1) Fix NULL pointer de-reference in failure case of
    CopyStringListEntry.
    
    (2) Add NULL pointer checks before dereferences in
    VixMsg_DeObfuscateNamePassword.
    
    (3) Annotate a false positive in VixMsg_EncodeString.
    
    (4) Annotate and add an ASSERT to a false positive in
    StrUtil_GetLongestLineLength.

commit 99a1db681218005ebd1f363f0c0e966d3c9f47ce
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Nov 11 18:12:21 2019 -0800

    nicinfo: report real nameservers used when using systemd-resolved
    
    If systemd-resolved is used, report the external DNS server, not the
    locally installed one.  This is detected by checking if /etc/resolv.conf
    is a link to /run/systemd/resolve/stub-resolv.conf.  In that case,
    /run/systemd/resolve/resolv.conf will hold the actual DNS server.  See
    https://www.freedesktop.org/software/systemd/man/systemd-resolved.service.html

commit 00c27c23b848b08548a37e2439f4b5a1b3e6d98e
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 30 11:18:23 2019 -0700

    Fix issue reported by Coverity scan in deployPkg
    
    rand() should not be used for security-related applications, because
    linear congruential algorithms are too easy to break.  Use a compliant
    random number generator, such as /dev/random or /dev/urandom on
    Unix-like systems, and CNG (Cryptography API: Next Generation) on Windows.

commit d7d04cf9d931eef727d0349611ac22d7e59377c6
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 30 11:18:23 2019 -0700

    Avoid securing disk device info for ZFS pools (at this time)
    
    ZFS filesystem pools device names can appear as single directory name
    at the root directory.  The current logic to locate the
    /sys/class/blocks/<device> PCI structure based on typical device name
    format will fail for ZFS pools.  As an immediate fix to the SIGSEGV,
    avoid attempting to locate the PCI info; keep vmtoolsd running.
    
    Addresses https://github.com/vmware/open-vm-tools/issues/378

commit 35206f77437cf651e18ce18c57b82c3827bb21c8
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 30 11:18:23 2019 -0700

    Trim trailing whitespace from log params in /etc/tools.conf.
    
    Remove trailing whitespace from pathnames and parameters in
    tools.conf.

commit 82f4044ae0bb0bf005b13657d10cffc33c341037
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 30 11:18:23 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 5e04545a23185ea9ba3276230712fa547362aa37
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 30 11:18:23 2019 -0700

    A LOG goes variadic change in asyncsocket.c

commit 72dd83874a5787b7ee431ea30e1c58dff0f56ae9
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 30 11:18:23 2019 -0700

    Fix Coverity reported issue in dndUIX11.cpp
    
    - unsigned_compare: This greater-than-or-equal-to-zero comparison of an
      unsigned value is always true. end >= 0UL.
     Function: GetLastDirName

commit da965e20d68d1d2c65a477c07a813a7d0f5402d6
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 30 11:18:23 2019 -0700

    Remove dead code in dndCommon.c reported by Coverity.

commit 72e9fb36520934a4f69b752f129d7068c77d0a02
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 30 11:18:23 2019 -0700

    [open-vm-tools Coverity] Fix Coverity scan reported issues in copyPasteUIX11.cpp
    
    - Non-static class member mHGGetListTime is not initialized in this constructor
     solution: add it into init list of constructor
    
    - unsigned_compare: This greater-than-or-equal-to-zero comparison of an
      unsigned value is always true. end >= 0UL.
     Function: GetLastDirName

commit 77390236bac496d112d6bc37ffbb69123f70503f
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 30 11:18:22 2019 -0700

    [open-vm-tools Coverity] Fix sign extension issue reported by Coverity.
    
    - sign_extension: Suspicious implicit sign extension: x with type uint16
      (16 bits, unsigned) is promoted in (x << 16) | y to type int (32 bits,
      signed), then sign-extended to type unsigned long (64 bits, unsigned).
      If (x << 16) | y is greater than 0x7FFFFFFF, the upper bits of the
      result will all be 1.
     File: bora-vmsoft/services/plugins/dndcp/pointer.cpp
     Function: PointerSetPos

commit 103a6d06225a395f2a738cec6f9ec83739b60967
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 30 11:18:22 2019 -0700

    Changes to common source files not directly applicable to open-vm-tools.

commit c374b22454295785ba0ec0a3a8c5bf8d85a4cb02
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 30 11:18:22 2019 -0700

    Correct several uninitialied varialbles reported by Coverity in dnd/cp code.
    
    - uninit_member: Non-static class member mRpc is not initialized in this
      constructor nor in any functions that it calls.
     File: bora/lib/dnd/rpcutil/rpcV3Util.cpp
     Function: RpcV3Util
    
    - uninit_member: Non-static class member field mRpcChanCBList.xdrInSize is
      not initialized in this constructor nor in any functions that it calls.
     File: bora/vmx/tools/dndCPTransportGuestRpc.cpp
     Function: DnDCPTransportGuestRpc
    
    - uninit_member: Non-static class member mGHDnDDropOccurred is not initialized
      in this constructor nor in any functions that it calls.
     File: bora-vmsoft/lib/dndGuestBase/dndUIX11.cpp
     Function: DnDUIX11
    
    - uninit_member: Non-static class member m_main is not initialized in this
      constructor nor in any functions that it calls.
     File: bora-vmsoft/services/plugins/dndcp/copyPasteDnDX11.cpp
     Function: CopyPasteDnDX11
    
    - uninit_member: Non-static class member mToolsAppCtx is not initialized in
      this constructor nor in any functions that it calls.
     File: bora-vmsoft/lib/dndGuest/vmGuestDnDCPMgr.hh
     Function: VMGuestDnDCPMgr
    
    - uninit_member: Non-static class member mRpc is not initialized in this
      constructor nor in any functions that it calls.
     File: bora-vmsoft/lib/dndGuestBase/guestDnDSrc.cc
     Function: GuestDnDSrc
    
    - uninit_member: Non-static class member mMsgSrc is not initialized in this
      constructor nor in any functions that it calls.
     File: bora/lib/dnd/rpcutil/rpcV4Util.cpp
     Function: RpcV4Util
    
    - uninit_member: Non-static class member mIsActive is not initialized in this
      constructor nor in any functions that it calls.
     File: bora-vmsoft/lib/dndGuest/guestCopyPasteDest.cc
     Function: GuestCopyPasteDest

commit ed4f9036ba3d03c068e2e05b97b26b97c9671afd
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 30 11:18:22 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 89aba4b6790337fab1f1277421c5db3ea08a43ef
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 30 11:18:22 2019 -0700

    Address issues from Coverity scan of open-vm-tools.
    
    Fix two issues reported by the Coverity scan of open-vm-tools
    and annotate a third:
    
    * Validate siginfo read from a pipe in order to address
    a tainted data issue reported in signalSource.c.
    
    * Add a "Fall through" comment to address a missing break
    reported in panic.c.
    
    * Annotate an intentional NULL-dereference in guestSDKLog.c.

commit 0222a70307ddd67d718f60d89178e6df649c6f0c
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 30 11:18:21 2019 -0700

    Fix misc. warnings related to strncpy usage.
    
    For few files bundled in open-vm-tools package, one of the code
    scanners reported the following warning.
    
    " Easily used incorrectly; doesn't always \0-terminate or check for
    invalid pointers"
    
    Checked the files and modified the code to pass 'sizeof dest - 1'
    as the third argument to avoid any warnings.
    
    In one of the VGAUTH library functions, added a check for the input buffer
    size and return a valid error.

commit 55dfa0f50befad337c1ce50ade9264264f3f14c7
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 30 11:18:21 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit ba1408a50387a78cfd9fa45b788edb6f81e46a89
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 30 11:18:21 2019 -0700

    Suppress a couple of coverity false alarms in FileLoggerOpen().
    
    The stat() system call is used to determine whether to rotate logs.
    There is no danger of time-of-check vs. time-of-use because the rotation
    decision still holds even under the very-unlikely condition that the existing
    log file size changes.
    
    When rotating the logs, the service should not stop when a rename() fails
    on an old file.  The process ignores the rename() return code intentionally.
    The error condition cannot be logged because the process is already in the
    log handling context and would either crash or risk a recursion loop
    otherwise.  In addition, writing to stdout/stderr is useless, since the
    process is running as a service and the stdout/stderr is reopened on /dev/null.
    
    Therefore, the above two coverity issues are suppressed in the code.

commit 9edce11c056ddfd352d74dba6383e8462adb349f
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 30 11:18:21 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit ee8c9ece23ec51b8388991884fc68ae890cc3312
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 30 11:18:20 2019 -0700

    Fix misc. warnings in base64.c
    
    At few places in the code, %ld is being used as the format specifier for
    printing the variables of size_t datatype. Changed it to %FMTSZu.

commit f1dab8ded45aaaa4b6993a4d96d0aefc700f1796
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Oct 28 16:12:42 2019 -0700

    stop systemd-243 udev complaints #371
    
    Address issues from pull request #371 on github:
    - fix substiution variables for systemd-243
    - fix permissions of rules file
    See https://github.com/vmware/open-vm-tools/pull/371

commit 774e684d26d0705800d960f938a488e3eba1c269
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Oct 28 16:12:42 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 96d274ee7bf73b1b75b20db1a42aa2cfd53c4762
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Oct 28 16:12:42 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 51333efb09aa5725138793dd7a41c62112aeb626
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Oct 28 16:12:42 2019 -0700

    Common source file changes not directly applicable to open-vm-tools.

commit cbb314348c85ea224eaa8548b2e2ea34beb7c69a
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Oct 28 16:12:42 2019 -0700

    Fix 'variable scope can be reduced' warnings.
    
    One of the code quality checkers (Codacy) reported the following
    issue for a bunch of files bundled in 'open-vm-tools'.
    
    """
    Fix 'The scope of the variable 'var' can be reduced.'
    """
    
    Checked all applicable files and removed the variable initialization
    where it's really not necessary.
    
    This is really not a major issue but it's no harm fixing.

commit 975abab4d68c1d55abb1cd05132e1cca14340f56
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Oct 28 16:12:41 2019 -0700

    LOG goes variadic in dndCPTransportGuestRpc.cpp

commit 5b3a0cfd0170bda1f9fb24345fdbb6334248e669
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Oct 28 16:12:41 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 0fdc4978fef2ca6681c3aa67798212eba58a3ef5
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Oct 28 16:12:41 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 4da629d63a22dea477af48fab1cbdd521d7cc3f9
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Oct 28 16:12:41 2019 -0700

    Code clean up in common source files.
    
    Fix macros so they work in the world of Log Facility newlining.
    
    The Log Facility no longer accepts appending calls into a single
    line.  As such, some macros need to be "fixed up".

commit 1d906a742902d932cb8666d474b389a05cd4e5ee
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Oct 28 16:12:40 2019 -0700

    Record new tools patch and update versions in vm_tools_version.h.

commit 9c152fa0053002d6a59d949a2a7f4341f38b429b
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Oct 28 16:12:40 2019 -0700

    Back out previous code clean up changes.

commit 7a56962788d83a97e2c1a619c5ab6b761b09f62a
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Oct 28 16:12:40 2019 -0700

    Code clean up in common source files.
    
    Fix macros so they work in the world of Log Facility newlining.
    
    The Log Facility no longer accepts appending calls into a single
    line.  As such, some macros need to be "fixed up".

commit b4cdf9876993f7a3c9f3bbd33efb6a1446697375
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Oct 28 16:12:40 2019 -0700

    Fix a minor issue reported by Codacy code scanner.
    
    One of the code quality checkers (Codacy) reported the following
    issue for a bunch of files bundled in 'open-vm-tools'.
    
    """
    Fix 'variable has been re-assigned before it's value has been used'
    """
    
    Checked all applicable files and removed the variable initialization
    where it's really not necessary.
    
    This is really not a major issue but it's no harm fixing.

commit 3600232a34c14aa308c6511569f5cec783017eea
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Oct 28 16:12:39 2019 -0700

    Fix minor NULL check in DataMap_Copy function.
    
    One of the code scanners identified the following issue in
    DataMap_Copy function.
    
    """
    Either the condition 'src==NULL' is redundant or there is possible null pointer dereference: src.
    """
    
    Fixed the issue by moving the NULL check to the top of the function.

commit 359b24fa003c8177fa9afbcf2f1214e38f7af29d
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Oct 28 16:12:39 2019 -0700

    Common header file change not directly applicable to open-vm-tools.

commit bce9759be2c09dc506b5846ecfde3e337f629313
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Oct 28 16:12:39 2019 -0700

    Variadic LOG macros and fewer trailing newlines
    
    It's (long past) time we started using variadic LOG macros
    and stopped requiring a newline at the end of every format
    string.  A previous removed the newline requirement recently.
    
    -   LOG(N, ("format string\n", arg1, arg2))
    +   LOG(N, "format string", arg1, arg2)
    
    The important parts of this change are buried in macro madness.
    The key bit is the LOG_BYNAME macro, which now can be written
    to be variadic.
    
    To support both styles simultaneously, this change adds a macro
    LOGLEVEL_VARIADIC which switches the definition of LOG_BYNAME to
    variadic (e.g. remove extra parens).
    
    Following this change, we can convert files to the variadic version
    and set LOGLEVEL_VARIADIC.

commit 0cd3c86ef2eedf3151e99323e966d35667e32c66
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Oct 28 16:12:39 2019 -0700

    Assertion after use fix - lib/file/standalone.c
    
    One of the code scanners caught this one.

commit 50b1bff7f338b964391eb8da2bc56d623193831c
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Oct 28 16:12:39 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 9bc72f0b09702754b429115658a85223cb3058bd
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 2 17:48:35 2019 -0700

    Fix leaks in ListAliases and ListMappedAliases.
    
    The 'record' for each alias was being leaked.

commit 77292fe0be256a5350eeea266378d11beab43c27
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 2 17:48:35 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 41def4aea3c2ca8a6994151067bd8887de2b3ce6
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 2 17:48:35 2019 -0700

    Common source file change not directly applicable to open-vm-tools.
    
    Backing out previous change.

commit 51d83c3e9e6c0cbdc644ad5998e1f252ab8f15e9
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 2 17:48:35 2019 -0700

    Common source file changes not directly applicable to open-vm-tools.

commit 6e56a58474c6c948b4992e2e6b8e63f3581c062b
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 2 17:48:35 2019 -0700

    Common source file changes not directly applicable to open-vm-tools.

commit 12cdffbebdbceb0f698736a1c3923483b62aee53
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 2 17:48:34 2019 -0700

    Common source file changes not directly applicable to open-vm-tools.

commit d2c2ec66aaa0abd0c8a91365f5401ecf6d7c982a
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 2 17:48:34 2019 -0700

    Common header file changes not directly applicable to open-vm-tools.

commit 710735264ba7d40751663c541db0e8154b9f29f9
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 2 17:48:34 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 00d44381a374d60245f286a3faaf66663be678a8
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 2 17:48:34 2019 -0700

    Move /etc/vmware-tools/vm-support to /usr/bin/ in open-vm-tools.
    
    Change scripts/Makefile.am to know about the new location.
    
    This fix requires the following updates to the vendor scripts:
    The rules files have "chmod /etc/vmware-tools/vm-support".
    The spec files have "mv /etc/vmware-tools/vm-support /usr/bin".

commit 944b68a7d8ef4f7659cc8f33d22cf41a0c6cc439
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 2 17:48:34 2019 -0700

    Common source file changes not directly applicable to open-vm-tools.

commit 046695a6b8c14e3faf1b04f0f499d8c85dad3a4e
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 2 17:48:34 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit decf17a7b1257d6e150cdbfac56febb0b3df6a3a
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 2 17:48:34 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit aabba463466d2b9e57589791e7c4b6378c70d84a
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 2 17:48:34 2019 -0700

    Common source file change not directly applicable to open-vm-tools.
    
    Hostinfo: Improve ESXi recognition

commit 393336967fdf8ed16821fbdc16732c96197ebc49
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 2 17:48:33 2019 -0700

    Fix AliasSafeRenameFiles() in vgauth/serviceImpl/alias.c
    
    If the alias mapfile was empty, the updated alias file was not properly
    saved (renamed).  This issues has been fixed.

commit 470f51850e066d62518713573a7aa50ba91f9d43
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Oct 2 17:48:32 2019 -0700

    Common header file change not directly applicable to open-vm-tools.

commit febcb55f747cdf344803b561e1615fc295aed5da
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Sep 30 16:24:27 2019 -0700

    lib/file: Close on exec bit tested incorrectly
    
    The test should be on access, not flags.

commit a1963f28b72f7ce2c0650ac454c2a0b6b337ab88
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Sep 30 16:24:27 2019 -0700

    Common source file change not directly applicable to open-vm-tools.

commit 74e08b1f9abf5d06e9e8fb9af40306270c5b1f43
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Sep 30 16:24:27 2019 -0700

    Add a Coverity annotation to lib/vmGuestLib/vmGuestLib.c
    
    A previous change adding Coverity annotations to vmGuestLib.c
    omitted one.  Adding for completeness although it does not actually
    affect Coverity results.

commit 1943864c3690953ec639474b204304d2d0c6081e
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Sep 30 16:24:27 2019 -0700

    Flipped the default value of config option "hgfs.packetSize.large" to TRUE.

commit 5758ea87e637011bd05cf120fa3974f68644267f
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Sep 30 16:24:27 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit b51906be468487f056c3fda1ff20302a073df6e4
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Sep 30 16:24:27 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit eb70f9bc44c9764e76ed10766f62b234a80e1a54
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Sep 30 16:24:27 2019 -0700

    Fix potential overflow in timeSync reported by Coverity
    
    Issue: Potentially overflowing expression: data->timeSyncPeriod * 1000000U
           is evaluated using 32-bit arithmetic, and then used in a context
           that expects an expression of type uint64.
    Fix: explict type conversion.

commit 89c0d444567eb525e8d083fb564c46d68e96660c
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Sep 30 16:24:27 2019 -0700

    GitHub Issue #367. Remove references to deprecated G_INLINE_FUNC.
    
    G_INLINE_FUNC was a work-around for compilers that didn't support
    static inline.  Change uses of it to static inline.

commit 1f9171277d9cc5a0785baec9b8f4a89993f5bd6b
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Sep 30 16:24:27 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 4d3607ca69fb031cd1b25c157a396250a867cf3e
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Sep 9 11:23:49 2019 -0700

    Fix Misc. issues in vmtoolsLog.c
    
    * g_malloc0 aborts the application if the specificed amount of memory
      cannot be allocated. Hence, no need to have a NULL check for the
      return value of g_malloc0.
    
    * Removed one if block in VMToolsLogInt since the if check will never
      be TRUE.
    
    * g_strdup returns NULL if the input argument is NULL. Removed
      the unnecessary NULL checks for the input argument to g_strdup at few
      places.

commit a2668aedffce69784b29da9bc951492dc5657840
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Sep 9 11:23:49 2019 -0700

    [AppInfo] OVT Coverity fixes.
    
    The return value of Str_Snprintf is not being checked for negative
    values and is directly passed to DynBuf_Append which accepts only
    positive values. This may cause issues if Str_Snprintf fails. Added
    a trivial check.
    
    Initialized appList variable to NULL.

commit d15cb89dbaf17e6e9f89ed02fc180ebe43a49eb9
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Sep 9 11:23:49 2019 -0700

    Backout the previous AppInfo OVT Coverity fix.

commit 24b17d82ce5cef8bedd3f23454de36b1cbb66e4f
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Sep 9 11:23:49 2019 -0700

    [AppInfo] OVT Coverity fixes.
    
    The return value of Str_Snprintf is not being checked for negative
    values and is directly passed to DynBuf_Append which accepts only
    positive values. This may cause issues if Str_Snprintf fails. Added
    a trivial check.

commit e9ffc2476480496416abf474d5a87e2707947605
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Sep 9 11:23:49 2019 -0700

    Add missing copyright header.
    
    The copyright header is missing in one of the files (Makefile.am)
    that is bundled in open-vm-tools tar file. Added the necessary
    copyright header.

commit 281b20fa6dfb468ec6cdb6e3a7fa9a695b049371
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Sep 9 11:23:49 2019 -0700

    Common header file change not directly applicable to open-vm-tools.

commit e3dc77820037c99f19f63320edf53c01fe9c3e23
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Sep 9 11:23:49 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit f8c20561d006a52c97999f7f946daae740830d65
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Sep 9 11:23:49 2019 -0700

    Fix Coverity scan issues in open-vm-tools.

commit 5b7554bd858890184ef34519214d4abe0f402424
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Sep 9 11:23:49 2019 -0700

    Include AppInfo related files in Tools OVT
    
    This changeset contains the necessary changes to include appinfo plugin
    related files in Tools OVT bundle.

commit 8fe54f5da07f5204c20448ad9a21ba0b62e32e3a
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Sep 9 11:23:49 2019 -0700

    Fix the deployPkg status files when privateTmp is enabled
    
    Currently, deployPkg status file path is hardcoded to /tmp.  When
    privateTmp is enabled in the guest VM, /tmp is hidden from the rest
    of the system and is wiped on reboot.  So need use different path to
    save the status file.
    
    This change is changing deployPkg status file path from /tmp to /var/log

commit f8e283fc7a9e165182c3dde78013eef9027df5c9
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Sep 9 11:23:48 2019 -0700

    Backout previous common header file change.

commit 49f799e5c6d620a37fc89051118d8544e2c11c56
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Sep 9 11:23:48 2019 -0700

    Common header file change not directly applicable to open-vm-tools.

commit 6328953abbb54256fb356c428430f352519c0f14
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Sep 9 11:23:48 2019 -0700

    More Coverity annotations for open-vm-tools issues.
    
    Add annotations for additional Coverity-reported issues so that
    Coverity scans of ovt will automatically classify these issues
    as "intentional."  Such annotations are useful both for internal
    use as well as for partners who run Coverity scans of open-vm-tools.

commit 9f9cd4d7690cd9e3a4a4d322ad4ffeaa175a523c
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Sep 9 11:23:48 2019 -0700

    Backout previous default "hgfs.packetSize.large" setting
    
    The default value of config option "hgfs.packetSize.large" is now FALSE.

commit b6e554d661cfef8e7de68b54872fea2f9348bfce
Author: Oliver Kurth <okurth@vmware.com>
Date:   Mon Sep 9 11:23:48 2019 -0700

    Common header file change not directly applicable to open-vm-tools.

commit a4dde45f5e281663efc2e1acbf1bba0dfb5bfce1
Author: Oliver Kurth <okurth@vmware.com>
Date:   Thu Aug 29 17:13:05 2019 -0700

    Due to a quirk the way patches were generated, the 'coomon-agent' directory was not removed as intended, but just contained empty files

commit 048e3e5792d47728c109e9ae8af325e92bee4a5c
Author: Oliver Kurth <okurth@vmware.com>
Date:   Thu Aug 29 15:47:06 2019 -0700

    tools.conf example: add vss.disableAppQuiescing

commit 0d813a16b701cf9187809eaea3d3f30e1a8096c5
Author: Oliver Kurth <okurth@vmware.com>
Date:   Thu Aug 29 15:47:06 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit f2fbd0bf7ecbb68e1f74c42d271258affd644e24
Author: Oliver Kurth <okurth@vmware.com>
Date:   Thu Aug 29 15:47:06 2019 -0700

    Supporting HGFS large IO/packet size
    
    Tools side changes to take advantage of a negotiated larger HGFS IO
    buffer when available in the Fusion or Workstation host.

commit 091d9adca6f501edf63e59626c49742204d79a45
Author: Oliver Kurth <okurth@vmware.com>
Date:   Thu Aug 29 15:47:05 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 9768494f0eab4a51e77aa21eb34d9864ca26692c
Author: Oliver Kurth <okurth@vmware.com>
Date:   Thu Aug 29 15:47:04 2019 -0700

    [OVT] Update copyright year to 2019.
    
    A new version of VMware Tools 11.0.0 will be released in 2019.  All
    applicable files need to stamped with a 2019 copyright year.

commit 822f28b4d683c87b3fde67a36b0a165fac26e68e
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Aug 27 12:55:38 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 2db9f6c0203df67a8984b06bce44e97394b7fa7e
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Aug 27 12:55:38 2019 -0700

    Track recent VMware Tools version numbers used for 10.3.x patches

commit 4b1d001ce3e029e1238f53dcdac01e4d5e72e404
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Aug 27 12:55:38 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 2eb3c8515aa5a12c506acb8924b34b22fa018165
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Aug 27 12:55:38 2019 -0700

    More Coverity annotations for open-vm-tools.
    
    Add Coverity annotations for four additional issues so that Coverity
    scans of open-vm-tools will automatically classify these issues as
    "intentional."  Such annotations are useful both for internal use as
    well as for partners who run Coverity scans of open-vm-tools.

commit 3e26f2f1409c6026f2d35679bdabdd1d0a37d8ab
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Aug 27 12:55:38 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 8a9fc303df675d17657ed4797a23608ec55dc631
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Aug 27 12:55:38 2019 -0700

    Flipped the default value of config option "hgfs.packetSize.large" to TRUE

commit 4f3ebb55872312d12780c26ef296ca7b5fd112d5
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Aug 27 12:55:38 2019 -0700

    Common header file change not directly applicable to open-vm-tools.

commit 945dea136b2589f9522b06d262535032a77ee807
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Aug 27 12:55:37 2019 -0700

    Add more Coverity annotations to open-vm-tools source.
    
    Add Coverity annotations for three issues so that Coverity scans of
    open-vm-tools will automatically classify these issues as
    "Intentional."  These annotations are useful both for internal
    use as well as for partners who run Coverity scans on open-vm-tools.

commit 6bc5512451ddce8a52b9dbd9dc4061b1b3c7accd
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Aug 27 12:55:37 2019 -0700

    Common header file change not applicable to open-vm-tools

commit 8cde21bb94ee55616d81b9a0f8d7e9c5eaf02be8
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Aug 27 12:55:37 2019 -0700

    Get rid of PhysMem's thread registration calls for most threads.
    
    A previous change eliminated the need to register threads before doing
    a PPN to BPN conversion on them.  This change removes some of the
    remaining infrastructure.

commit 5ca2850b60de0f27c3f8c565d7b7e553acc2921f
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Aug 27 12:55:37 2019 -0700

    Address Coverity issues reported in bora/lib/file/file.c.
    
    Fix a minor memory leak in the function File_ExpandAndCheckDir.
    Also add annotations for unchecked return values in functions
    GetOldMachineID and File_MoveTree, so that Coverity scans of
    open-vm-tools will automatically classify these issues as
    "Intentional".  These annotations are useful both for internal
    use as well as for partners who run Coverity scans on open-vm-tools.

commit a29dd522b3ee667279b9a8a1a7c1655ef2f12839
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Aug 27 12:55:36 2019 -0700

    Common header file change not directly applicable to open-vm-tools.

commit 08722696a8d774e3603bda9e7933d31675469179
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Aug 27 12:55:36 2019 -0700

    Do not treat AsyncSocketState as a boolean
    
    AsyncSocketState is an enum.  Storing it into boolean
    results in unexpected and undefined behavior.

commit abd868db33a0ee6556655da561eecf54f4774703
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Aug 27 12:55:36 2019 -0700

    Bool type may not be a char (1 bytes).
    
    Change structures exposed to the guest to not use Bool -
     - while currently Bool is defined as char, we might use C's
       _Bool or C++'s bool for booleans - and neither standard
       mandates _Bool/bool to be 1 byte.

commit d58cbc545662514f049f50a5c06502e1bf8b3c7d
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Aug 27 12:55:36 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 50ddeb23b61a0e7b5e6fbf51649bd9e6d6a4f948
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Aug 27 12:55:36 2019 -0700

    open-vm-tools: add vm_valgrind.h
    
    To build open-vm-tools with valgrind enabled we need this file.

commit 0293d99afa7983ac594141e49bc97240e96043bd
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Aug 27 12:55:36 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit f4fa430fa5be21413e17a9fe6355c613ecb988e2
Author: Oliver Kurth <okurth@vmware.com>
Date:   Tue Aug 27 12:55:35 2019 -0700

    Add Coverity annotations.
    
    Add source code annotations so that Coverity scans will automatically
    classify certain issues as "intentional."  These annotations serve to
    memorialize these classifications in open-vm-tools source, both for
    internal reference as well as for partners like Red Hat who run their
    own Coverity scans on open-vm-tools.

commit 5445ab7798be8ecb5c25ecb8505461e47940ed19
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:21 2019 -0700

    Enable the guest OS disk mapping feature as default.

commit 9a6c6314f7df3b34ec98c70f26ae855bc9c9feb5
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:21 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 2472507ffd0bf1252fd5cc60c67a7a024a0cfd5a
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:21 2019 -0700

    Fix broken command: vmtoolsd --cmd info-get | info-set

commit 683f86c6281f25638d491100d988bfd6e81daa89
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:21 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit efc87690e34f97c33c864208f69866354c2d4a2b
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:21 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 3bb67521f582eb8c4bea841dee4861f87e91c0ae
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:21 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 739d07bc394e732dea2f40d22a4d2879d90d85a4
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:21 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 1f64953995693ce0f0ada607564e0f0f03f89dd8
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:21 2019 -0700

    Bumping HGFS_LARGE_IO_MAX_PAGES to 127 and defining the legacy values
    
    This change bumps up HGFS_LARGE_IO_MAX_PAGES to 127 and define the
    legacy values of HGFS_LARGE_IO_MAX_PAGES, HGFS_LARGE_IO_MAX and
    HGFS_LARGE_PACKET_MAX.  A switch is also added to make sure we still
    use the legacy value unless "hgfs.packetSize.large" is set to "TRUE" in vmx.

commit bfb53c8b0282ec2c518c6777cb6f89b45823a71a
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:21 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 49dc92d4f417c07ab370b390fe3459bce8282bf0
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:21 2019 -0700

    Fix crash in nicinfo/nicInfoPosix.c:PrintResolverNSInfo
    
    SIGSEGV trying to access resp->_u._ext.nsaddrs[i]->sin6_family in
    PrintResolverNSInfo.
    
    Fix: zero out the struct __res_state memory before calling res_ninit().

commit 1c5c5d17f5b03adb0c8d7bdf8001a466959c0ba1
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:21 2019 -0700

    Changes to common source files not directly applicable to open-vm-tools.
    
    Backout previous changes to these files.

commit cbb691ef3e64507ed1b4fddbc055eac01d3cac16
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:21 2019 -0700

    Changes to common source files not directly applicable to open-vm-tools.

commit d58847b497e212737007958c945af1df22a8ab58
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:21 2019 -0700

    Avoid freezing mount points for same device.
    
    Loopback device setup could cause a cyclic dependency
    between 2 mount points. In order to break the cycle,
    avoid freezing the mount points to the same device.
    
    This change also skips some system mount points for 'tmpfs'
    and 'cgroup' etc as those share the same device/FS name.
    This is fine because we can't quiese those mount points
    anyway (system mount points don't support quiescing).

commit e738e0e3dab43527e6af1fe4530a36646c2293a1
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:20 2019 -0700

    Convert linux to __linux__ in preprocessor statements.
    
    Linux ABI uses __linux__, not linux (deprecated).

commit e29038cf8c45eaa643784334d69232dae98e1ac9
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:20 2019 -0700

    Add RpcChannel_SendOneRawPriv()
    
    Send privileged guest RPC "guestStore.connect" with it after the
    vmsvc RPC channel falls back to backdoor.

commit 56d81d3ee5d1c6b13b43461713e78fb2ad3958c7
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:20 2019 -0700

    Common header file change not directly applicable to open-vm-tools.

commit a33261c468f016e28c9af75e762f517f040130ac
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:20 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 3ee98ec57068779dbe8459aeeaeee8ac36e00d89
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:20 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 583e08008e2aab78a0847e01d855ca7efd264a6d
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:20 2019 -0700

    Add an example configuration tools.conf file for tools
    
    This adds an example tools.conf file. Settings are shown in the
    file with default values, but commented out with documentation.

commit fb9bd0ffd2bd9aa8807e64e4fff8d2801693308f
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:20 2019 -0700

    Common header file change not directly applicable to open-vm-tools.

commit da44b2d50727aca00249dc58796e84be11a3ff15
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:20 2019 -0700

    Convert linux to __linux__ in preprocessor statements.
    
    Linux ABI uses __linux__, not linux (deprecated).

commit f83425b3daa3dd985bb8c7fe3af24c034f5feb94
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:20 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit aaa6e31a8fb23d73bb5b07428074331402babf7f
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:20 2019 -0700

    Remove residual data when the DNS nameserver configuration changes.
    
    If the list of DNS nameservers available should shorten or both IPv4 and
    IPv6 entries are present, residual data can still be available for display.
    This change to nicInfoPosix.c corrects the problem.

commit dd8703d64ed0c4291bb02804552d83f35f689ab7
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:20 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit ac04412b75fe6564b4caed28fd39a1d2a11c1481
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:19 2019 -0700

    Convert linux to __linux__ in preprocessor statements.
    
    Linux ABI uses __linux__, not linux (deprecated).

commit 553d128348f311080e156519e9ac26a518c8579d
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:19 2019 -0700

    Fix gcc 9.1 build error in vmblocktest.c
    
    GCC 9.1 in Ubuntu eoan (19.10) failed to build open-vm-tools:
    error: '__builtin_strncpy' specified bound 4096 equals destination
    size [-Werror=stringop-truncation]

commit 30de81b2713603e3a7e7d9ec5491240c1265c7bc
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:19 2019 -0700

    Fix two issues reported by Coverity in vixTools.c:
    
     - a superfluous NULL pointer check in VixToolsRunScript
     - a potential NULL pointer dereference in VixToolsValidateCredentials

commit a0aff48ad1fc1790e99c1b5710332a80d9bc3b75
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:19 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 4aeac83616580a007aebc1e8f85209f47f416733
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:19 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit dcaca7837cb552fddd2d5d7bcc9d57a7572b0168
Author: Oliver Kurth <okurth@vmware.com>
Date:   Fri Aug 2 11:07:19 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 0c15fb2cea00bef03738343f08df0aa837591116
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:20 2019 -0700

    [TOOLS] Fix dnd text from Linux guest
    
    Gtk::Widget::drag_dest_find_target() returns different values from GDK_NONE
    on Gtk2 and Gtk3.
    
    On Gtk2, it returns an empty string. It matches the existing code.
    On Gtk3, it returns "NONE". The current logic breaks.
    
    To overcome this issue, use Gdk::AtomString::to_cpp_type(GDK_NONE) to
    replace the current empty string. This works on both Gtk2 and Gtk3.

commit 8533cc3b32e2c36f6cb0394bd057895e358f392c
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:20 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 091246f5aab85a2a892fa3038c07fe6955ab5c1d
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:20 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 312b970b6551ac0f72e284aa74a10d8b94607947
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:20 2019 -0700

    Record VMware Tools version 10.3.20 as TOOLS_VERSION_JACKHAMMER_UPDATE3

commit ba2226dd1e18f3f33dc2138cd6b3392b8bcbc8b8
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:20 2019 -0700

    Changes to common header files not applicable to open-vm-tools.

commit 3dd020f6886e850a1ae66fd9a5e155568b862dad
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:20 2019 -0700

    Bump the development version of tools to 11.1.0.

commit c2ebde975c41594a36355c5238098d84a15555ea
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:20 2019 -0700

    No JSON disk array termination needed, if partition count is zero.
    
    In the unlikely case of a VM with zero disks, a jsonPerDiskFmtFooterLast
    should not be emitted.

commit ec0c3ec2aa40e6c0f5dc8cc445c8eddfcdb18c8f
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:20 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 364f63ee833770889391e70d5f75683a5eaf3e46
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:19 2019 -0700

    Partial change linux -> __linux__, Tools edition
    
    Linux ABI uses __linux__, not linux (deprecated).

commit 89c426d9b527aa59e0b114aeeacd510c0f49041c
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:19 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit b161d04bd7b154a49c2dfc843c2d1898c9ee7668
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:19 2019 -0700

    Fix the memory leak in procMgr library.
    
    In a specific code path, procCmdAbsPath attribute is ovewritten
    with the new memory. This leads to a memory leak for the previously
    allocated memory.

commit 9827f3ada2457c136b965f12ed13b3e2dc4eae62
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:19 2019 -0700

    Common header file change not directly applicable to open-vm-tools.

commit b4896361913c59b59d39212c02b8cd1421734efa
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:19 2019 -0700

    Make DEBUG_ONLY work with toplevel commas (Change part 3)
    
    Now that all the C pre-processors in use support variadic macros, make
    DEBUG_ONLY work with toplevel commas (i.e. commas which are outside of
    any parentheses pair). This is useful in at least 2 ways:
    
    In C code, to easily pass debug arguments to functions in debug builds
    without any overhead in non-debug builds.
    
      void
      foo(DEBUG_ONLY(int debugArg,) // IN
      int nonDebugArg)          // IN
      {
      ASSERT(DebugFunc(debugArg));
      NonDebugFunc(nonDebugArg);
      }
    
      foo(DEBUG_ONLY(debugArg,) nonDebugArg);
    
    In asm code.
    
      DEBUG_ONLY(mov x0, #0)

commit 05ec637bb53442b2a7139a99027dc2593f3886a7
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:19 2019 -0700

    Use two new inline functions to replace most of the uses of
    HGFS_LARGE_IO_MAX and HGFS_LARGE_PACKET_MAX macros.
    
    In preparation to bump up HGFS_LARGE_IO_MAX and HGFS_LARGE_PACKET_MAX,
    replace most uses of the two macro constants with inline functions that
    can return either the new limits or the older defaults based on the
    configuration.

commit 04813113e28f6cfecf956166136bbad2a6c2a386
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:19 2019 -0700

    [Tools/dndcp] Fix two coverity issues reported by a customer.

commit b8a778702be288556cfbede152acf46728a8172a
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:19 2019 -0700

    Update VMware Tools version numbers for historical information.

commit 4eed229ba2dada3e2527019d4e12396d679bcd96
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:19 2019 -0700

    LOG variadic: Part 2
    
    - do/while blocks removed.
    - LogLevel_LookUpVar removed.

commit e26fc358cba5a594927c7dcf7c2e06307374ffc8
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:19 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 6b9de7147e7f89ccc9fd7297c4ba38e256f4a044
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:19 2019 -0700

    Fix return value in AsyncTCPSocketDoOneMsg
    
    Trivial fix to a bug in AsyncTCPSocketDoOneMsg where ASOCKERR_SUCCESS is
    returned inadvertently instead of ASOCKERR_TIMEOUT when there is a timeout.

commit f3cf471b1668b723fc8b7cfe982ad710936dfe9e
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:19 2019 -0700

    GuestInfo: fix memory leak in GuestInfoGetPrimaryIP()
    
    "ipstr" was not free'ed when it was not being used.

commit a4649cc64c8ce123b8f86e29dc935160be34a22d
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:18 2019 -0700

    Add definition for "debian11" and "debian11-64" to vmx.

commit 7c6374bfd278c7638d7d54f73d541a9f27a75a64
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:18 2019 -0700

    Avoid emitting a trailing comma in the GuestInfoSendDiskInfoV1 JSON RPC
    
    Although currently accepted by the JSMN library that we are using
    in VMX, that superfluous comma is strictly invalid according to the
    JSON standard - ECMA-404.

commit 76550921022ca61ddc9daabd09bdbe8eedda5e7d
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:18 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 9f8eac720b77a787e5b63cd947bb62a7d355e771
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:18 2019 -0700

    Make LOG macro variadic: do the obviously-safe stuff first

commit 3f707cc8567bfcdc500b4833f6daf3773f801bf9
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:18 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit ae9d769e2b21becc9612f7a493ff44db6e0d7011
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:18 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 9d16023d74636f620f86708f55fb399fe9c4d028
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:18 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 32a95bba7fc0b6ec86351965e6eef4d8fc3164ac
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:18 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 6c9504606f49b0fe88f262e4dc17daadae2c5db4
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:18 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit ba7563dfb3ff30b4be6dc15ee0e0e010d1656530
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:18 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 6cb7cddb5b2777d0058edac56a71566ae751592d
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:18 2019 -0700

    Changes to common source files; not directly applicable to open-vm-tools.

commit 2e1d9ed411b3538d7dc8c730e4a41910d5275373
Author: Oliver Kurth <okurth@vmware.com>
Date:   Sat Jul 20 17:15:17 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 0c6ad5edceca60dc05eb9f3b1ee6ac42dc0455ef
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Jul 3 14:28:56 2019 -0700

    Fix a Coverity issue reported in vgauth/serviceImpl/verify.c

commit 47c8f75e4516552615c070c6920633f7e8e572a0
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Jul 3 14:28:56 2019 -0700

    Fix process command name for special linux processes.
    
    While listing down the processes in a linux guest, the existing
    procMgr library reads /proc/<PID>/cmdline file and parses the
    content.  While reading this, an assumption is made that there is
    a null terminating character at the end of the file content.
    This holds true for most of the processes.  But for few special processes,
    the cmdline file doesn't have the terminating null character.
    
    Proper content from cmdline file:
    
    /usr/lib/systemd/systemd\0--switched-root\0--system\0--deserialize\021\0
    /usr/sbin/vmtoolsd\0
    sshd: root@pts/2\0\0\0
    
    Example cmdline file where NUL terminator is missing:
    
    avahi-daemon: running [linux.local]
    avahi-daemon: chroot helper

commit 2660d40ca4f5beca0ba3a4c68a66f8c7dcf77a67
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Jul 3 14:28:56 2019 -0700

    Fix the command name for few linux processes.
    
    ProcMgr library publishes the 'command name' attribute for
    each process while listing down all the processes.  For doing this,
    the commandline is first parsed from /proc/<PID>/cmdline file
    and the part starting from the right-most '/' is considered as the
    command name.  This is OK only if we have an absolute path for the
    command binary.  Other wise, this may result in incorrect results.
    
    For example:
    sshd: root@pts/1
    gdm-session-worker [pam/gdm-autologin]
    
    Fixed the code to ignore the parsing if we do not have an absolute
    path.
    
    Note: There are two ways how the command name is retrieved for each
    process.
    
    1. /proc/<PID>/cmdline is parsed.
    
    If (1) fails for some reason, then
    
    2. /proc/<PID>/status is parsed.
    
    There is no issue with (2). This changeset fixes the parsing issue only
    with (1) approach mentioned above.

commit 7aaf580b14f44a994100ede098e0ced5d60ba484
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Jul 3 14:28:56 2019 -0700

    Add support for NVMe disks; IDE and SATA disk devices in 3.x Linux kernels
    
    Support has been added for virtual disks attached to an NVMe
    controller.  The device "label" will provide the "nvme<n>" for the
    controller.  The disk unit is provided in the device "nsid" file.
    An earlier implementation (Linux 2.6 kernels) provided the unit
    number as the final digit group in the device node name.
    
    The Linux 3.x kernel has some differences in the layout of IDE and
    SATA disk devices in the sysfs filesystem.  The differences from the
    sysfs in a 2.6 Linux kernel are:
     - The IDE "class" file and SATA "class" and "label" files are in a
       different directory.
     - IDE controller and SATA device nodes begin with "ata" where "host"
       was used in earlier kernel sysfs filesystems.
    
    GuestInfoGetDevClass() has been modfied to check in two possible
    locations for the "class" file.   The directory located will also
    contain the "label" file for SCSI, SAS, and SATA disk devices.
    
    GuestInfoGetIdeSataDev() has been modified to search for either
    ata<n> or host<n> directories in the sysfs tree for the disk device.

commit 193a5f93d6678b2ebfec1cf365a84bfd8533650d
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Jul 3 14:26:55 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 2657373a9321ad4090af75d84beac00836170e27
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Jul 3 14:26:55 2019 -0700

    Truncate oversize partition names
    
    Truncate disk partition names if they are too large, rather than just
    skipping all the disk information for the guest. Closes
    https://github.com/vmware/open-vm-tools/issues/346 .

commit 6b8ffb7199159ab3a306646bc572f6a83a8ce7f6
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Jul 3 14:26:55 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit fe04b4263ae90af524fe51e124e206df737e974b
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Jul 3 14:26:55 2019 -0700

    Suppress possible NULL pointer deref in a debug message.

commit 130334ca6f1cf6d696b0fe36d54b83f1f7d7bc2e
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Jul 3 14:26:55 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit ace8b9e3c13a0b320835d36f569d2c7e5c6513a7
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Jul 3 14:26:55 2019 -0700

    Changes to common header files not applicable to open-vm-tools.

commit eda7db540bb048ac406e6624786c300cb17968c2
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Jul 3 14:26:55 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 7b17b7265ad31f2ed3dc6d6d28c5a4caf4c12e5c
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Jul 3 14:26:55 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 59d4eda2fc89e43ac092d82866c42c9692ebca68
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Jul 3 14:26:54 2019 -0700

    Common header file change not applicable to open-vm-tools.

commit 8fe237da4894488e9cb0fccdec1f0d8180998a24
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Jul 3 14:26:54 2019 -0700

    Common header file change not directly applicable to open-vm-tools.

commit e266c0bb1879792f24b29d38af9f9f833475f228
Author: Oliver Kurth <okurth@vmware.com>
Date:   Wed Jul 3 14:26:54 2019 -0700

    Changes to common source files not directly applicable to open-vm-tools.
    
    Reduce malloc/free overheads in the VMX for HGFS over VMCI

2013.04.16  Dmitry Torokhov  <dtor@vmware.com>
	This release tag contains commits up to the following id:
	867ea989d5e6889abcac77b4c7dae7db2651df58


2012.12.26  Dmitry Torokhov  <dtor@vmware.com>
	This release tag contains commits up to the following id:
	530ef7f26ed041ab1b6655f2cdc79f3af97fc50b


2012.10.14  Dmitry Torokhov  <dtor@vmware.com>
	This release tag contains commits up to the following id:
	d85408321c66c927bffdb05106a26581244edd4a

2012.05.21  Dmitry Torokhov  <dtor@vmware.com>
	This release tag contains commits up to the following id:
	482332b8d4282df09838df5ea4c58df9cdb4faf3


2012.03.13  Dmitry Torokhov  <dtor@vmware.com>
	This release tag contains commits up to the following id:
	0114aabd54bf2db4556563b7149c4fbbdec3d87b


2011.12.20  Marcelo Vanzin  <mvanzin@vmware.com>
	This release tag contains commits up to the following id:
	dfca5cf9d1c2335c5d001deedd9266c84956b508


2011.11.20  Marcelo Vanzin  <mvanzin@vmware.com>
	This release tag contains commits up to the following id:
	6c197b8e5eccf32bfee0e2452d8926968182aada


2011.10.26  Marcelo Vanzin  <mvanzin@vmware.com>
	This release tag contains commits up to the following id:
	6271fde90248a4fd49e38aa61498db9e1dbf37c3


2011.09.23  Marcelo Vanzin  <mvanzin@vmware.com>
	This release tag contains commits up to the following id:
	05baddbed1c5e47e9789a44d30bb217d7184232a


2011.08.21  Marcelo Vanzin  <mvanzin@vmware.com>
	This release tag contains commits up to the following id:
	2b3d76ba776f55d06fb5b62499b189ebd6bc1c75


2011.07.19  Marcelo Vanzin  <mvanzin@vmware.com>
	This release tag contains commits up to the following id:
	5bed6f1369ca6e9c2c7fbaf4205d86e50f219c5f


2011.06.27  Marcelo Vanzin  <mvanzin@vmware.com>
	This release tag contains commits up to the following id:
	166bbe1d28da4dab763b9568f163c8dca99ced9c


2011.05.27  Marcelo Vanzin  <mvanzin@vmware.com>
	This release tag contains commits up to the following id:
	3793ddc9c9b5facf376a2625d4c2252aa9bd3daa


2011.04.25  Marcelo Vanzin  <mvanzin@vmware.com>
	This release tag contains commits up to the following id:
	3112c27981074deb53e86e30e1c168d55e42220c


2011.03.28  Marcelo Vanzin  <mvanzin@vmware.com>
	This release tag contains commits up to the following id:
	ec43520f5f3a50f5a980a73d22ae231380f97555


2011.02.23  Marcelo Vanzin  <mvanzin@vmware.com>
	This release tag contains commits up to the following id:
	96cf4718ac0aff1743e50a2165599306ba442fe1


2011.01.24  Marcelo Vanzin  <mvanzin@vmware.com>
	This release tag contains commits up to the following id:
	60c470337c8932a6d9564130dcaf06c7a1a3df53


2010.12.19  Marcelo Vanzin  <mvanzin@vmware.com>
	This release tag contains commits up to the following id:
	5aef2b20a519788613350752575bcba0ac71df79


2010.11.17  Marcelo Vanzin  <mvanzin@vmware.com>
	This release tag contains commits up to the following id:
	11c0273ed4269f6f7a92f82f6c822df7da4c8720


2010.10.18  Marcelo Vanzin  <mvanzin@vmware.com>
	This release tag contains commits up to the following id:
	2162c5d770cdac3b0e275907a1a5d22ece8ce23c


2010.09.19  Marcelo Vanzin  <mvanzin@vmware.com>
	This release tag contains commits up to the following id:
	c92a8bfbb406a906bcd2fb9ef6801f92c5b64d1f


2010.08.24  Marcelo Vanzin  <mvanzin@vmware.com>
	This release tag contains commits up to the following id:
	94e63742d734b41638d37580602de4232da5ece6


2010.07.25  Marcelo Vanzin  <mvanzin@vmware.com>
	This release tag contains commits up to the following id:
	b15cffc7961b97129d0b77643db42b4d4d8e3da7


2010.06.16  Marcelo Vanzin  <mvanzin@vmware.com>
	This release tag contains commits up to the following id:
	ec87703fccdd0f954a118640c0b097e383994391


2010.04.25  Marcelo Vanzin  <mvanzin@vmware.com>
	This release tag contains commits up to the following id:
	6fafd672e006208c1e479b297e19618170ff19bd


2010.03.20  Marcelo Vanzin  <mvanzin@vmware.com>
	This release tag contains commits up to the following id:
	7cdbb623125729b41bf54068568dfbcc2dd58733


2010.02.23  Marcelo Vanzin  <mvanzin@vmware.com>
	This release tag contains commits up to the following id:
	8baa8588d5fd4cf64efb17164cb70c86c758d0c6


2010.01.19  Marcelo Vanzin  <mvanzin@vmware.com>
	This release tag contains commits up to the following id:
	8ee82a5774ae7badeb98ecf4dc629c7e9aac7077


2009.12.16  Marcelo Vanzin  <mvanzin@vmware.com>
	This release tag contains commits up to the following id:
	0d28106da5684dc31ea52ebb5a2dc6a0af5c1d61


2009.11.16  Marcelo Vanzin  <mvanzin@vmware.com>
	This release tag contains commits up to the following id:
	6f4cdd0f38be020d722f2393c0b78d7cd13f04d2


2009.10.15  Marcelo Vanzin  <mvanzin@vmware.com>
	This release tag contains commits up to the following id:
	d2f1b83daab1d7882fd651ad1cc77c729bbd9760


2009.09.18  Marcelo Vanzin  <mvanzin@vmware.com>
	This release tag contains commits up to the following id:
	8bb94fbfbdf65b53b87279cf81529756dba7a2ca

	Other changes not captured in the git logs:

	* Resync with internal dev branch (2009.08.24)

	* hgfsmounter/hgfsmounter.c: allow hgfs users to set ttl to 0 at mount time.

	* lib/guestApp/guestApp.c, lib/include/conf.h, lib/include/netutil.h,
	  lib/include/procMgr.h, lib/include/system.h, lib/vixTools/vixTools.c,
	  lib/vmCheck/vmcheck.c: remove (now unused) Netware checks.

	* lib/message/*, modules/freebsd/vmhgfs/Makefile,
	  modules/linux/vmhgfs/Makefile.*, modules/solaris/vmhgfs/Makefile: remove
	  unused message transport abstraction. The rpcChannel library is now used to
	  do RPC abstraction.

	* modules/*/vmmemctl/*: refactor of the vmmemctl module as part of adding
	  support for Mac OS guests.

	* modules/linux/pvscsi/pvscsi.c: don't clobber RESERVATION_CONFLICT sdstat
	  up from linux pvscsi driver.

	* modules/linux/shared/*: VMCI changes unrelated to the guest driver.

	* modules/linux/vmhgfs/fsutil.c, modules/linux/vmhgfs/inode.c: fix the case
	  where two directories refer to the same inode.

	* scripts/linux/*: support older versions of NetworkManager.

2009-08-24	Marcelo Vanzin	 <mvanzin@vmware.com>
	* Resync with internal trunk (2009.08.19)

	* configure.ac: remove support for Linux kernels < 2.6.9.

	* lib/include/vmtools.h, libvmtools/vmtoolsLog.c, doc/api/services/util.txt:
	  add new log handled that allows appending to existing log files, and fix
	  an issue where old log files would be "rotated" whenever the config file
	  was reloaded.

	* lib/appUtil/appUtilX11.c, lib/ghIntegration/ghIntegrationX11.c,
	  lib/include/appUtil.h: fix compilation issues on FreeBSD when unity
	  was enabled.

	* lib/dnd/dndLinux.c, lib/include/vmblock_user.h, tests/testVmblock/*: add
	  vmblock tests and, as part of the change, do some refactoring of vmblock
	  related functions.

	* lib/guestInfo/guestInfo.c, lib/include/wiper.h, lib/wiper/*,
	  toolbox/toolboxcmd-shrink.c, toolbox/toolboxShrink.c: refactor the wiper
	  structures so that they behave the same on Win32 and other platforms, and
	  also reuse data structures already in use by other parts of the code. This
	  fixes an "use after free" issue that toolbox-cmd had on Win32.

	* lib/guestInfo/guestInfo.c, lib/guestInfo/guestInfoInt.h,
	  lib/guestInfo/guestInfoPosix.c, lib/guestRpc/nicinfo.x,
	  lib/include/guestInfo.h, lib/include/netutil.h, lib/include/slashProc.h,
	  lib/netutil/netUtilLinux.c, lib/slashProc/*,
	  services/plugins/guestInfo/guestInfoServer.c: add support for sending more
	  network-related information to the host, such as routing tables and name
	  servers.

	* lib/hgfsBd/hgfsBd.c: don't log RPC errors when HGFS is disabled.

	* lib/hgfsHelper/*, lib/include/hgfsHelper.h, lib/vixTools/vixTools.c: new
	  library with functions to query information about HGFS; expose some HGFS
	  properties through VIX.

	* lib/hgfsServer/*, lib/hgfsServerPolicyGuest/hgfsServerPolicyGuest.c,
	  lib/include/hgfsServerPolicy.h: fix checking of whether an object belongs
	  to a particular share; this was causing issues with invalid information
	  being returned in certain cases.

	* lib/hgfsServer/*, lib/include/hgfsProto.h: changes to support new VIX API
	  calls (mostly affecting Win32 only).

	* lib/include/guestCaps.h, lib/include/unityCommon.h: add boilerplate for new
	  RPCs for setting windows as sticky / non-sticky (not yet implemented).

	* lib/include/hgfsProto.h: new definitions for the next version of the HGFS
	  protocol.

	* lib/include/xdrutil.h: make XDRUTIL_ARRAYAPPEND() more type-safe when using
	  GCC.

	* lib/misc/codesetOld.c: fix some issues with UTF16 -> UTF8 conversion.

	* lib/rpcChannel/rpcChannel.c, libvmtools/signalSource.c,
	  libvmtools/vmtools.c, libvmtools/vmtoolsConfig.c: g_assert -> ASSERT.

	* lib/unityWindowTracker/unityWindowTracker.c: fix issue with z-ordering of
	  modal dialogs.

	* libvmtools/vmtoolsConfig.c: fix some old config translation issues.

	* modules/freebsd/shared/*, modules/freebsd/vmblock/*: make vmblock work on
	  FreeBSD 8.

	* modules/freebsd/vmmemctl/*, modules/linux/vmmemctl/*,
	  modules/solaris/vmmemctl/*, : refactoring and code changes to support the
	  driver on Mac OS X.

	* modules/linux/vmblock/*, modules/linux/vmci/*, modules/linux/vsock/linux/*:
	  remove compatibility code for older kernels.

	* modules/linux/vmhgfs/*: fix memory leak in HgfsAccessInt().

	* modules/linux/vmxnet3/*: fix kunmap usage in vmxnet3_shm, and reset the
	  shared pages when the char device is closed.

	* modules/linux/vsock/linux/af_vsock.{c,h}, modules/linux/vsock/linux/util.c:
	  add vsock protocol negotiation for notifyOn ops. This allows the driver to
	  negotiate with the remove end which version of the notification protocol to
	  use.

	* modules/linux/vsock/linux/notify.c, modules/linux/vsock/linux/notify.h,
	  modules/linux/vsock/linux/notifyQState.c,
	  modules/linux/vsock/linux/vsockPacket.h: add pktOn protocol. This new
	  protocol improves performance by detecting changes in the queue state
	  instead of sending WAITING_READ and WAITING_WRITE packets.

	* services/plugins/hgfsServer/hgfsPlugin.c,
	  services/plugins/resolutionSet/resolutionSet.c,
	  services/vmtoolsd/mainLoop.c, services/vmtoolsd/pluginMgr.c,
	  services/vmtoolsd/toolsRpc.c: load plugins even when an RPC channel cannot
	  be instantiated (i.e., when running outside of a virtual machine); this
	  allows plugins to perform actions (at load time) also when running outside
	  virtual machines (e.g., to undo some configuration done when the OS was run
	  in a VM).

	* services/vmtoolsd/mainLoop.c, services/vmtoolsd/mainPosix.c,
	  services/vmtoolsd/toolsCoreInt.h: handle SIGHUP differently; instead of
	  stopping the service, just re-load the config data. This should make it
	  easier to integrate the tools service with other tools such as logrotate.

	* toolbox/toolbox-cmd.c, toolbox/toolboxcmd-stat.c: remove memory info query,
	  which didn't really return useful information.

	* vmware-user/copyPasteUI.cpp: if the clipboard/primary with most recent
	  timestamp has no data on it, try the other before giving up during
	  copy/paste.

2009-07-22	Marcelo Vanzin	 <mvanzin@vmware.com>
	* Resync with internal trunk (2009.07.17)

	* configure.ac: fix detection of "dot" and its usage in the doxygen config
	  file.

	* configure.ac, libguestlib/Makefile.am, libguestlib/vmguestlib.pc.in:
	  install vmguestlib headers and add new pkgconfig script.

	* lib/dndGuest/dnd.{cc,hh}, lib/include/dndBase.h, vmware-user/dndUI.{cpp,h}:
	  fix an issue where the DnD code would prevent drops to other windows in
	  Unity mode, instead of just intercepting drops to the desktop.

	* lib/dndGuest/dnd.{cc,hh}, lib/dndGuest/dndRpc.hh, lib/dndGuest/dndRpcV3.cc,
	  lib/include/dndBase.h, vmware-user/dndUI.{cpp,h}: fix an issue where the
	  host Unity code would cause an undesired drop event.

	* lib/dndGuest/dnd.{cc,hh}, lib/dndGuest/dndRpc.hh, lib/dndGuest/dndRpcV3.cc,
	  lib/include/dndBase.h: cleanup mouse simulation code, and fix an issue
	  where a drag would be canceled if the contents were dragged out of a guest
	  and then back in.

	* lib/dndGuest/dndRpcV3.cc, vmware-user/copyPasteDnDWrapper.cpp,
	  vmware-user/dndUI.cpp, vmware-user/dndUI.h, vmware-user/dragDetWnd.cpp,
	  vmware-user/dragDetWnd.h: several DnD fixes; make the DnD code behave
	  more like other GTK applications (based on analysing the flow of signals
	  on a test widget), and get rid of one of the detection windows, merging
	  both the Unity and non-Unity windows. Also, some code refactoring.

	* lib/ghIntegration/*, lib/guestRpc/*, lib/include/guestCaps.h,
	  lib/include/unityCommon.h: add stubs for a few new GHI functions (setting
	  window focus, tray icon updates and enhanced app info) - currently only
	  implemented on Win32.

	* lib/ghIntegration/ghIntegrationX11.c: examine WM_CLASS when determining
	  which DE Tools are running in. The previous code was failing to show a
	  few entries set as "OnlyShowIn=xxx" because checking WM_NAME wasn't enough
	  to properly detect the desktop environment in certain cases.

	* lib/guestApp/guestAppPosixX11.c: use gconftool-2 to detect the user's
	  browser, since gnome-open fails to open "file://" URLs which contain query
	  strings. Also, use "kde-open" when running under KDE.

	* lib/guestInfo/guestInfo.c, lib/include/wiper.h, lib/wiper/wiperPosix.c:
	  allow shrinking LVM partitions.

	* lib/include/appUtil.h: partial refactoring of icon retrieval code.

	* lib/include/dbllnklst.h, lib/misc/dbllnklst.c: inline linked list
	  functions.

	* lib/include/guest_os.h, lib/misc/hostinfoPosix.c: add a couple of
	  distros to the known distro list.

	* lib/include/netutil.h, lib/netUtil/netUtilLinux.c: add Linux interface
	  name, index lookup routines.

	* lib/include/system.h, lib/system/systemLinux.c,
	  services/plugins/timeSync/timeSync.c: fixes a few bugs in the backwards
	  time sync code, mostly due to unit mismatches.

	* lib/include/unityWindowTracker.h, lib/unity/unity.c,
	  lib/unity/unityPlatform.h, lib/unity/unityPlatformX11Window.c,
	  lib/unityWindowTracker/unityWindowTracker.c: expose two new properties in
	  the window tracker to save an RPC to retrieve those properties.

	* lib/include/vmtoolsApp.h, services/vmtoolsd/mainLoop.c,
	  services/vmtoolsd/pluginMgr.c, services/vmtoolsd/toolsCoreInt.h: add
	  support for "application providers", which allow plugins to add support to
	  new kinds of application frameworks through vmtoolsd.

	* lib/unity/unityPlatformX11.c: only enable GIO channels when Unity is
	  actually active.

	* lib/unity/*: cleanup old GTK1 code.

	* libvmtools/vmtoolsConfig.c: don't complain if config file is empty.

	* modules/linux/dkms.conf, modules/linux/dkms.sh: fix dkms.conf, and provide
	  a script to create a dkms tree from open-vm-tools.

	* modules/linux/shared/vmci_queue_pair.h, modules/linux/vmci/vmciKernelIf.c:
	  remove two (now) unneeded functions.

	* modules/linux/vmhgfs/*: code cleanups, properly initialize the list head,
	  and allow receives to timeout so that hibernation works.

	* modules/linux/vmxnet/vmxnet.c, modules/linux/vmxnet3/vmxnet3_drv.c: fix
	  drivers for kernels 2.6.29+.

	* modules/linux/vmxnet3/*: add shared memory support for faster communication
	  between user space and the device backend; this doesn't affect the regular
	  driver functionality, but is used by some VMware code not part of Tools.

	* modules/linux/vsock/*: fix an issue where it was possible for users to send
	  VMCI datagrams directly to the hypervisor.

	* scripts/common/vmware-user.desktop: work around a bug in KDE where desktop
	  files with "NoDisplay" fail to autostart.

	* scripts/freebsd/suspend-vm-default: use netif to bring down interfaces,
	  since dhclient doesn't understand "-r" in the default install.

	* services/plugins/vmbackup/*: add some new code used by enhancements being
	  done in the Win32 version of the plugin.

	* services/vmtoolsd/mainPosix.c: fix running in background when executing
	  vmtoolsd while relying on PATH.

	* services/vmtoolsd/Makefile.am: point to the correct plugin install
	  directory.

	* toolbox/*: better command line handling in the CLI utility, plus some code
	  cleanup.

	* vmware-user/copyPaste.c, vmware-user/copyPasteDnDWrapper.cpp,
	  vmware-user/copyPasteDnDWrapper.h, vmware-user/dnd.c: properly unregister
	  RPCs to avoid multiple registrations (and the ensuing ASSERT) in certain
	  cases.

	* vmware-user/copyPasteUI.{cpp,h}: change way data is retrieved from the
	  clipboard, using the gtk+ clipboard wait APIs (which turn out to be more
	  reliable than the previous approach).

2009-06-18	Marcelo Vanzin	 <mvanzin@vmware.com>
	* Resync with internal trunk (2009.06.15)

	* docs/api/Makefile.am: replace all variables in the doxygen conf file with
	  the correct values.

	* lib/appUtil/appUtilX11.c: try alternate file extensions during icon search.
	  Sometimes a package lists its icon as icon-foo.png, but the package didn't
	  include icon-foo.png.	 Instead, it included icon-foo.xpm.	 Ex: Ubuntu
	  8.04's hwtest.

	* lib/guestApp/guestAppPosixX11.c: change detection of the default browser so
	  that the new help system works; the help files are not yet available in
	  open-vm-tools.

	* lib/hgfs/*, lib/include/cpName.h, lib/include/cpNameLite.h,
	  lib/include/hgfsUtil.h: avoid compiling certain parts of the source in
	  kernel modules.

	* lib/hgfsServer/*: return correct error when files / directories don't
	  exist.

	* lib/include/hgfsChannel.h, modules/linux/vmhgfs/*: added support for vsock
	  channel for HGFS.

	* lib/include/util.h, lib/misc/utilMem.c: un-inline a bunch of functions to
	  reduce the size of binaries.

	* lib/include/vm_tools_version.h: bumped Tools version.

	* lib/resolution/resolutionX11.c: fix for issue where the host would send
	  a "topology set" command with a top-left corner that was not (0, 0) and
	  cause the screen to be reconfigured in the wrong way.

	* lib/unity/unityPlatformX11Window.c: check for errors in calls to
	  XQueryTree.

	* lib/wiper/wiperPosix.c: check return of fgets() to avoid compiler warnings.

	* libvmtools/vmtools.c: fix initialization of wiper library on Win32.

	* modules/Makefile.am: install vsock header file on Linux.

	* modules/freebsd/vmhgfs/*, modules/linux/vmci/*, modules/linux/vsock/*:
	  changes related to 64-bit Mac drivers, don't affect either the FreeBSD
	  or Linux drivers.

	* modules/linux/vmhgfs/hgfs.h: removed duplicate file.

	* modules/linux/vmhgfs/fsutil.c, modules/linux/vmhgfs/inode.c,
	  modules/linux/vmhgfs/module.h: fix issue where two files would get the
	  same inode number in some situations.

	* modules/linux/vmxnet/vmxnet.c: re-probe vmxnet2 device features on resume
	  from hibernate, to cover the case where a VM is resumed on a platform with
	  a different version of the device backend (bug #2209565).

	* scripts/resume-vm-default, scripts/suspend-vm-default: use NetworkManager
	  to handle networking where it is available.

	* services/plugins/hgfsServer/Makefile.am, services/plugins/vix/Makefile.am:
	  fix installation of vmusr plugins that are shared with vmsvc.

	* services/plugins/timeSync/timeSync.c: fix backwards time sync.

	* services/vmtoolsd/cmdLine.c, toolbox/toolbox-cmd.c: print build number as
	  part of "-v" output.

	* toolbox/toolboxcmd-shrink.c: correctly ignore unsupported partitions when
	  shrinking.

	* toolbox/toolbox-gtk.c: changes for the new help system, not yet available
	  for open-vm-tools.

	* toolbox/toolboxInt.{c,h}, toolbox/toolboxScripts.c: some code refactoring.

	* vmware-user/Makefile.am: fix linking when compiling without gtkmm.

2009-05-22	Marcelo Vanzin	 <mvanzin@vmware.com>
	* Resync with internal trunk (2009.05.18)

	* configure.ac, m4/vmtools.m4: check for PAM and enable PAM support when
	  available.

	* configure.ac, services/plugins/*/Makefile.am, tests/*/Makefile.am: avoid
	  the "-rpath" hack to create plugins, using plugin_LTLIBRARIES instead (and
	  manually fixing things when necessary). Thanks to Dominique Leuenberger for
	  the suggestion (and sample patch).

	* docs/api/Makefile.am: fix doc target directories.

	* configure.ac, lib/Makefile.am, lib/deployPkg/*, lib/include/deployPkg.h:
	  remove the deployPkg code, which depends on some VMware code that is not
	  yet open source.

	* lib/backdoor/*, lib/hgfs/*, lib/hgfsBd/*, lib/include/*,
	  lib/include/compat/*, lib/message/*, lib/misc/dbllnklst.c,
	  lib/rpcOut/rpcout.c: as part of sharing code between user-level code and
	  kernel modules, some files have been tagged with more than one license.

	* lib/dndGuest/*, lib/include/dndBase.h, lib/include/dndMsg.h,
	  lib/include/unity*, lib/unity/unityPlatformX11.c: implement mouse movement
	  from within the guest; this avoids a dependency on "unofficial" mouse APIs
	  in the VMware host code, making DnD more reliable, and makes a few things
	  (such as cancelling an ongoing DnD operation) easier.

	* lib/file/filePosix.c: make File_FullPath()'s behavior consistent when the
	  input path starts with a '/'.

	* lib/ghIntegration/ghIntegration.c: send more info about the "start menu"
	  contents to the host (only usable for Windows guests).

	* lib/ghIntegration/ghIntegrationX11.c: prettify the category names of menu
	  items. This is a temporary solution before actually reading this
	  information from .desktop files.

	* lib/guestApp/guestApp.c, libguestlib/vmGuestLib.c, lib/include/guestApp.h,
	  toolbox/toolbox-gtk.c, vmware-user/foreignVM*, vmware-user/vmware-user.cpp,
	  configure.ac, lib/Makefile.am, lib/include/socketMgr.h, lib/socketMgr.*:
	  remove code related to "foreign VM" support, which was never really used.

	* lib/guestInfo/guestInfo.c, lib/include/wiper.h, lib/wiper/wiperPosix.c:
	  properly report disk info for LVM volumes.

	* lib/hgfsServer/hgfsDirNotify*, lib/hgfsServer/hgfsServer.c: add support
	  for directory / file monitoring. It's currently only implemented on
	  Mac OS X.

	* lib/hgfsServer/hgfsServer*: fix issue where it was possible to
	  create a file on a read-only share on Windows hosts.

	* lib/hgfsServer/hgfsServer*, lib/hgfsServerManagerGuest/*,
	  lib/include/hgfs*.h, services/plugins/hgfsServer/hgfsPlugin.c,
	  services/plugins/vix/foundryToolsDaemon.c: some refactoring caused by the
	  work to make HGFS support pluggable transports.

	* lib/include/procMgr.h, lib/procMgr/procMgrPosix.c:
	  remove ProcMgr_GetAsyncStatus().

	* lib/include/vmsupport.h, scripts/vm-support, xferlogs/xferlogs.c,
	  services/plugins/guestInfo/guestInfoServer.c: new feature to automatically
	  collect support data from the guest from the VMware UI.

	* lib/panicDefault/*, lib/user/*: change file names to avoid clash with
	  another file (Mac OS linker doesn't really like that).

	* lib/rpcChannel/rpcChannel.c: try to reinitialize the outbound channel on
	  failure.

	* lib/vixTools/vixTools.c, lib/include/vixCommands.h,
	  lib/include/vixOpenSource.h: add backend for new VIX API call to list the
	  guest's filesystems.

	* libvmtools/vmtoolsLog.c: lazily open the log file, instead of opening it
	  during configuration of the log system. This way two processes can use the
	  same conf file and not overwrite each other's log files (assuming the conf
	  data is sane).

	* modules/Makefile.am, modules/linux/vmci/Makefile.kernel,
	  modules/linux/vsock/Makefile.kernel: don't store VMCI module symbols in
	  /tmp during build; this avoids a possible symlink attack that could cause
	  data to be overwritten when building open-vm-tools.

	* modules/*/*, vmblock-fuse/*: remove a lot of duplicated files by either
	  moving them to a shared location or reusing files that were already
	  available elsewhere.

	* modules/freebsd/vmblock/subr.c, modules/freebsd/vmblock/vmblock_k.h,
	  modules/freebsd/vmblock/vnoops.c: fix a possible kernel crash caused by
	  trying to read / write to the mount point (something vmware-user does to
	  detect whether it's using fuse or non-fuse vmblock).

	* modules/linux/pvscsi/*: adds support for a generic msg framework that is
	  currently used to deliver hot-plug/unplug notifications; get rid of a few
	  divisions; fix a bug where pvscsi_probe could return 0 (aka success) if
	  a call to kmalloc() failed; remove a few unused fields.

	* modules/linux/shared/vmci*: mostly changes related to the host VMCI drivers
	  (removed user-level queue-pair daemon, added support for trusted VMCI
	  endpoints) to keep binary compatibility between the host and guest VMCI
	  drivers.

	* modules/linux/hgfs/inode.c: check host's access rights when checking file
	  permissions, so that permissions are correctly checked when the guest's
	  user id is different from the host's user id.

	* modules/linux/bdhandler.*, modules/linux/filesystem.c; modules/linux/tcp.*,
	  modules/linux/transport.*,: postpone opening the channels so that module
	  can load successfully even if shared folders are disabled on the host;
	  fix a synchronization problem between recv and close/open; allow
	  hibernation to work by timing out the recv thread; correctly handle
	  failures in recv, including injecting a dummy error to the pending
	  requests when the recv thread exits; move the recv code to the channel's
	  implementation so that it can be simpler.

	* modules/linux/vmxnet3/vmxnet3.c, modules/linux/shared/compat_pci.h: fix
	  Wake-On-LAN for 2.6.27 and newer Linux guests.

	* modules/linux/vsock/linux/*: changes to support trusted VMCI host apps;
	  pull out notification and stats logging code into their own files.

	* modules/solaris/vmhgfs/vnode.c: do not substitute errors returned by
	  uiomove() calls with EIO, propagate returned error code (which is EFAULT)
	  up the stack.

	* services/vmtoolsd/Makefile.am, scripts/common/linux/pam.d/vmtoolsd-x64,
	  scripts/common/linux/pam.d/64/vmtoolsd: install the 64-bit PAM config
	  file with the correct name.

	* services/plugins/powerOps/powerOps.c: fix running default scripts by
	  making sure the path to the script is absolute.

	* services/vmtoolsd/Makefile.am, services/vmtoolsd/pluginMgr.c: use info
	  from the configure step to define the plugin path; this avoids requiring
	  a symlink to be placed in /etc/vmware-tools for vmtoolsd to be able to
	  find the plugins.

	* services/vmtoolsd/toolsRpc.c: send the build information to the host so
	  it's logged in the VM's logs.

	* toolbox/toolbox-cmd.c, toolbox/toolboxcmd-*, toolbox/toolboxCmdInt.h:
	  make string comparison case-insensitive on Win32.

	* toolbox/toolboxcmd-shrink.c: properly finish the shrinking process by
	  sending the "disk.shrink" RPC to the host.

	* toolbox/toolboxScripts.c: fix showing default settings for power ops
	  scripts (should show default script enabled, not script disabled).

	* vmblock-fuse/Makefile.am: fix compilation on FreeBSD.

	* vmware-user/copyPasteUI.cpp: disallow copy-paste text of size greater than
	  4MB, instead of truncating the data.

	* vmware-user/dndUI.*, lib/dndGuest/dnd.cc, lib/include/dndBase.h: remove
	  drag timeout callback (which was not needed), and add new signal to
	  indicate that a GH DnD was cancelled.

	* vmware-user/Makefile.am: remove C++ link hack (not needed now since
	  vmware-user has C++ code already).

2009-04-23	Marcelo Vanzin	 <mvanzin@vmware.com>
	* Resync with internal trunk (2009.04.17)

	* configure.ac, Makefile.am, docs/*: build API docs for vmtools; the
	  documentation files are provided under a BSD-style license.

	* configure.ac, Makefile.am, guestd/*, lib/Makefile.am, lib/guestInfo/*,
	  lib/include/vmbackup_def.h, lib/include/vmBackup.h, lib/vmBackupLib/*,
	  libvmtools/Makefile.am, services/plugins/vmbackup/vmbackup_def.h: remove
	  guestd from open-vm-tools, and clean up code in other places that was only
	  there because of guestd.

	* configure.ac, modules/solaris/vmblock/*, modules/solaris/vmmemctl/*: add
	  Solaris vmblock and vmmemctl driver sources. The vmmemctl module also
	  includes a user-level daemon (vmmemctld.c).

	* lib/conf/conf.c, lib/include/conf.h, libvmtools/vmtoolsConfig.c: remove
	  unused config options.

	* lib/deployPkg/toolsDeployPkg.h: code refactoring.

	* lib/dnd/dndClipboard.c: if size of clipboard exceeds the maximum backdoor
	  packet size, only keep text data (dropping the RTF data).

	* lib/dnd/dndLinux.c, lib/include/dnd.h, lib/include/vmblock.h,
	  vmware-user/copyPaste.c, vmware-user/dnd.c, vmware-user/vmware-user.cpp,
	  vmware-user/vmwareuserint.h, vmware-user-suid-wrapper/main.c: detect
	  whether plain vmblock or vmblock-fuse is being used, allowing the same
	  executable to be used with either.

	* lib/dndGuest/*, vmware-user/copyPaseDnDWrapper.{cpp,h},
	  vmware-user/dndUI.{cpp,h}, vmware-user/dragDetWnd.{cpp,h}:
	  vmware-user/vmware-user.cpp: more DnD V3 protocol work.

	* lib/ghIntegration/*, lib/include/guestCaps.h, lib/include/unityCommon.h:
	  work related to mapping Outlook folders over HGFS and exposing the Windows
	  Recycle Bin to the host (doesn't really affect open-vm-tools).

	* lib/ghIntegration/ghIntegrationX11.c: restore the native environment when
	  launching external applications. This doesn't really affect open-vm-tools.

	* lib/guestRpc/*, vmware-user/copyPasteUI.{cpp,h}: implement RTF and file
	  contents copy & paste.

	* lib/include/circList.h, lib/include/vm_basic_math.h,
	  lib/include/vm_device_version.h, modules/linux/*, modules/Makefile.am:
	  changes to share files between the user space code and the kernel code,
	  instead of duplicating the same source files in different places.

	* lib/include/rpcChannel.h, lib/rpcChannel/*, tests/testDebug/testDebug.c,
	  test/vmrpcdbg/debugChannel.c: some code cleanup, and fix crash when dealing
	  with multiple reset messages.

	* lib/include/system.h, lib/system/systemLinux.c,
	  services/vmtoolsd/mainPosix.c: remove System_Daemon() (replaced with
	  Hostinfo_Daemonize()).

	* lib/include/unityCommon.h, lib/unity/*: ressurrect UNITY_RPC_WINDOW_SHOW
	  and UNITY_RPC_WINDOW_HIDE RPCs.

	* lib/procMgr/procMgrPosix.c: fix ProcMgr_IsProcessRunning().

	* lib/system/systemLinux.c: fix shutdown / reboot commands on Solaris; fix
	  rebuilding of native environment from variables set by VMware scripts (this
	  last one doesn't really affect open-vm-tools).

	* lib/unicode/unicodeSimpleTypes.c: speed up UnicodeIANALookup, and fix case
	  where C++ constructors could call UnicodeIANALookup before Unicode_Init()
	  was called by lazily creating the internal cache.

	* libguestlib/*: link libguestlib against libvmtools. This avoids having
	  two definitions of certain symbols (like Debug()) when an application
	  links to both libraries.

	* modules/linux/vmblock/linux/control.c: only set directory entry owner when
	  needed.

	* modules/linux/vmhgfs/bdhandler.{c,h}, modules/linux/vmhgfs/dir.c,
	  modules/linux/vmhgfs/file.c, modules/linux/vmhgfs/filesystem.c,
	  modules/linux/vmhgfs/fsutil.c, modules/linux/vmhgfs/inode.c,
	  modules/linux/vmhgfs/module.{c,h}, modules/linux/vmhgfs/page.c,
	  modules/linux/vmhgfs/request.{c,h}, modules/linux/vmhgfs/super.c,
	  modules/linux/vmhgfs/tcp.{c,h}, modules/linux/vmhgfs/transport.{c,h}:
	  cleanup use of atomic variables in HGFS; add a transport abstraction layer,
	  and add an initial version of a socket-based transport (not yet stable and
	  not yet supported by any released VMware product).

	* modules/linux/vmxnet3/vmxnet3.c: fix build on kernel 2.6.29.

	* modules/linux/vsock/af_vsock.c: export more functions to other kernel
	  modules; some changes to statistics gathering code.

	* modules/solaris/vmhgfs/filesystem.c: make module loadable on Solaris 9.

	* modules/solaris/vmhgfs/vnode.c: unify mapping of HGFS to Solaris error
	  codes.

	* scripts/*: restart network before running user scripts in resume scripts.

	* services/plugin/powerOps/powerOps.c: fix running default power scripts.

	* services/vmtoolsd/pluginMgr.c: better error logging.

	* toolbox/toolbox-cmd.c: fix help string.

	* vmblock-fuse/block.c: fix vmblock-fuse compilation on FreeBSD.

2009-03-18	Marcelo Vanzin	 <mvanzin@vmware.com>
	* Resync with internal trunk (2009.03.13)

	* configure.ac: check for FreeBSD kernel tree when building modules; warn
	  about which version of make to use when building kernel modules on FreeBSD
	  and Solaris; add compiler defines for identifying Solaris 9 and 11.

	* configure.ac, modules/Makefile.am: handle SYSDIR on FreeBSD.

	* guestd/main.c, modules/solaris/vmhgfs/Makefile: remove HGFS-related that
	  is now obsolete with the recent changes to the HGFS module on Solaris.

	* guestd/toolsDaemon.c: default to the configuration dir when the power
	  script path is not absolute.

	* guestd/toolsDaemon.c, lib/include/guestInfo.h, lib/netUtil/netUtilLinux.c:
	  handle case when all network interfaces have been disabled and send an
	  "unknown" IP address to the host.

	* guestd/toolsDaemon.c, services/vmtoolsd/toolsRpc.c: always send
	  TOOLS_VERSION_UNMANAGED from an open-vm-tools build, so there's no need for
	  a config file option anymore.

	* hgfsclient/*: make it link to libvmtools to avoid code duplication.

	* lib/appUtil/appUtil.c: update list of "skippable" apps when figuring out
	  an application's path.

	* lib/auth/authPosix.c, scripts/linux/pam.d/*, guestd/Makefile.am,
	  services/vmtoolsd/Makefile.am : change the name of the PAM application to
	  "vmtoolsd" to reflect the new service name.

	* lib/dnd/dndFileContentsUtil.h, lib/dnd/dndInt.h, lib/dndGuest/*.hh, and
	  corresponding files in lib/include: relocate private headers.

	* lib/ghIntegration/ghIntegration.c, lib/ghIntegration/ghIntegrationInt.h,
	  lib/ghIntegration/ghIntegrationX11.c, lib/include/unityCommon.h: glue code
	  for Outlook mirrored folder, which does not affect open-vm-tools.

	* lib/guestRpc/guestlibV3.x, lib/include/vmGuestLib.h,
	  libguestlib/vmGuestLib.c: add new guestlib counters.

	* lib/include/conf.h, toolbox/toolbox-gtk.c: remove the need for the
	  "helpdir" config option; this doesn't really affect open-vm-tools since the
	  help files are not yet included.

	* lib/include/guest_os.h, lib/misc/hostinfoPosix.c: more guest OS names; fix
	  name used to identify Solaris to match what VMware's host code expects.

	* lib/include/guestStats.h: documentation changes.

	* lib/include/hostinfo.h, lib/user/hostinfoPosix.c: add a new function that
	  behaves like daemon(3), but is more Mac OS-friendly.

	* lib/include/toolsLogger.h, lib/Makefile.am, lib/toolsLogger/*: removed
	  library, which is not used anymore.

	* lib/include/vm_basic_types.h, lib/misc/timeutil.c: fixes to compile under
	  (Open) Solaris 11.

	* lib/include/vmtoolsApp.h, services/plugins/vmbackup/stateMachine.c,
	  services/vmtoolsd/mainLoop.c, services/vmtoolsd/mainPosix.c,
	  services/vmtoolsd/serviceObj.c, services/vmtoolsd/toolsCoreInt.h: add new
	  signal handler to gather debugging information from a running vmtoolsd
	  instance.

	* lib/misc/posixPosix.c: fix off-by-one error.

	* lib/unity/unity.c, lib/unity/unityPlatform.h, lib/unity/unityPlatformX11.c,
	  lib/unity/unityPlatformX11Settings.c: always send Unity updates using RPCI;
	  this avoids a possible race between replying to an incoming RPC and sending
	  an Unity update from a different thread; also, API documentation updates.

	* lib/unity/unityPlatformX11.c: verify the DnD detection window was
	  initialized before actually using it.

	* lib/unity/unityPlatformX11Settings.c, lib/unity/unityPlatformX11Window.c:
	  reset _NET_WM_DESKTOP as necessary before exiting Unity; this could cause
	  guest taskbars to disappear when in Unity mode.

	* lib/unity/unityPlatformX11.c, lib/unity/unityPlatformX11Window.c,
	  lib/unity/unityX11.h: examine WM_CLIENT_LEADER when gathering application
	  information; certain applications use this property to define the window
	  where the WM_COMMAND property should be.

	* lib/vixTools/vixTools.c: do not follow symlinks when deleting files in the
	  guest using the VIX API.

	* libvmtools/vmtools.c, libvmtools/vmtoolsLog.c: allow the logging subsystem
	  to be re-configured, and clean up the logging data when unloading the
	  library; allow ${USER} and ${PID} to be used in log file paths.

	* modules/freebsd/vmblock/subr.c, modules/freebsd/vmblock/vnops.c: fix kernel
	  panic on FreeBSD 7.

	* modules/linux/*/Makefile: remove GCC version check.

	* modules/linux/*/compat_wait.h: fix COMPAT_DEFINE_WAIT for "vanilla" 2.4
	  kernels.

	* modules/linux/vmhgfs/Makefile.normal: fix build of HGFS module on 2.4
	  kernels.

	* modules/linux/vmxnet/*, modules/linux/vmxnet3/*: avoid using compat
	  functions when they're not needed; add compatibility functions for
	  newer Linux kernels.

	* modules/linux/vsock/linux/af_vsock.c: fix two races; one when the socket
	  state changed between calls to VSockVmciRecvStreamCB and
	  VSockVmciRecvPktWork, and another when trying to read from the socket after
	  a RST arrived after the socket got a detach notification.

	* modules/solaris/vmxnet3/*: add Solaris vmxnet3 driver.

	* rpctool/*: add "rpctool", a simple, stand-alone tool to send RPC commands
	  to the host software.

	* services/plugins/guestInfo/guestInfoServer.c: don't cache configuration
	  data.

	* services/plugins/guestInfo/perfMonLinux.c: fix problem with overwriting
	  flags after GuestInfoMonitorReadMeminfo() was called. (Same as fix to
	  lib/guestInfo on previous release.)

	* services/plugins/powerOps/powerOps.c: handle power ops-related options
	  sent from the host.

	* services/vmtoolsd/mainLoop.c: handle re-loading the configuration file.

	* services/vmtoolsd/mainPosix.c: exec after forking on Mac OS, since
	  CoreFoundation classes don't work after a fork.

	* services/vmtoolsd/pluginMgr.c: allow both 32 and 64 bit plugins to be
	  installed on Solaris by loading them from the appropriate directory;
	  add library loading code that is not really needed (nor used) in
	  open-vm-tools.

	* services/vmtoolsd/toolsRpc.c: send another "capability" the host expects
	  from Tools.

	* toolbox/toolbox-gtk.c: add F1 shortcut to invoke help.

	* toolbox/toolboxScripts.c: fix issue with freeing data that should not be
	  freed.

	* vmware-user/*: implement the new DnD protocol (V3).


2009-02-18	Marcelo Vanzin	 <mvanzin@vmware.com>
	* Resync with internal trunk (2009.02.13)

	* configure.ac, m4/vmtools.m4: clean up a lot of the library detection code.

	* configure.ac: remove support for gtk+ 1.2 (code already depended on it in
	  any case); enforce need for glib 2.6.0 or later due to new code being
	  added; add detection for gtkmm; check for C++ compiler when it's needed;
	  reorder the include path to avoid clashing with system headers in some
	  situations.

	* guestd/foundryToolsDaemon.*, vmware-user/foundryToolsDaemon.*,
	  guestd/Makefile.am, vmware-user/Makefile.am: moved shared source files to
	  a new place to avoid duplication.

	* hgfsmounter/hgfsmounter.c: add support for Solaris.

	* lib/appUtil/appUtilX11.c: fix loading of icons when the name has a period.

	* lib/dnd/dndClipboard.c, lib/dnd/dndInt.h, lib/dnd/dndMsg.c,
	  lib/dnd/Makefile.am, lib/dndGuest/*, lib/include/copyPasteBase.h,
	  lib/include/copyPaste.hh, lib/include/copyPasteRpc.hh,
	  lib/include/copyPasteRpcV3.hh, lib/include/dndBase.h,
	  lib/include/dndClipboard.h, lib/include/dndFileContentsUtil.h,
	  lib/include/dndFileList.hh, lib/include/dnd.h, lib/include/dnd.hh,
	  lib/include/dndInt.h, lib/include/dndMsg.h, lib/include/dndRpc.hh,
	  lib/include/dndRpcV3.hh, lib/include/dndTransportGuestRpc.hh,
	  lib/include/dndTransport.hh, lib/include/libExport.hh,
	  vmware-user/copyPaste.cpp, vmware-user/copyPasteUI.{cpp,h},
	  vmware-user/copyPasteV3.h, vmware-user/copyPasteWrapper.{cpp,h},
	  vmware-user/dnd.cpp, vmware-user/Makefile.am,
	  vmware-user/vmware-user.{c,cpp}, vmware-user/vmwareuserInt.h,
	  vmware-user/stringxx/string.{cc,hh}, vmware-user/stringxx/ubstr_t.hh: add
	  support for new version of the DnD protocol.

	* lib/guestInfo/guestInfoPerfMonLinux.c: fix problem with overwriting flags
	  after GuestInfoMonitorReadMeminfo() was called.

	* lib/guestRpc/guestlibV3.x, lib/include/vmGuestLib.h,
	  libguestlib/vmGuestLib.c: add new host stats.

	* lib/guestRpc/Makefile.am: fix a few compatibility issues with non-GNU
	  versions of make.

	* lib/hgfsServer/hgfsServer.c, lib/hgfsServer/hgfsServerInt.h,
	  lib/hgfsServer/hgfsServerLinux.c, */hgfsProto.h,
	  modules/freebsd/vmhgfs/vnops.c, modules/freebsd/vmhgfs/vnopscommon.{c,h}:
	  don't trust the local VFS layer, check the HGFS server to see if an
	  operation would succeed.

	* lib/include/rpcChannel.h, lib/rpcChannel/*: add new Guest RPC channel
	  abstraction library used by the new "core services" code.

	* lib/include/vmrpcdbg.h, tests/*: add test code from the "core services"
	  project.

	* lib/include/vmtoolsApp.h, lib/include/vmtoolsd_version.h,
	  services/vmtoolsd/*: add "vmtoolsd", the new service "shell" used in the
	  "core services" project.

	* lib/unity/unityPlatformX11Window.c: don't send initial "region" updates for
	  shaped windows. This works around an issue where resizing a shaped window
	  would not work as expected in Unity mode.

	* lib/wiper/wiperPosix.c: fix major number detection for disks on newer Linux
	  kernels.

	* libvmtools/Makefile.am: link more libraries needed by vmtoolsd and the new
	  plugins.

	* modules/linux/pvscsi/pvscsi.c, modules/linux/pvscsi/pvscsi_version.h: use
	  PCI-specific memory allocation functions and update driver version.

	* modules/linux/vmci/vmciKernelIf.c: disable queue pair support in the host
	  version of the driver on older Linux kernels. This doesn't affect the
	  guest driver.

	* modules/linux/vmci/vmci_queue_pair.h: implement MSG_PEEK support on
	  Linux driver.

	* modules/linux/vmhgfs/bdhandler.c, modules/linux/vmhgfs/compat_sched.h,
	  modules/linux/vmmemctl/os.c: fix issue with HGFS module interfering with
	  suspend / hibernation on newer Linux kernels (bug #2523263).

	* modules/linux/vmhgfs/compat_cred.h, modules/linux/vmhgfs/file.c,
	  modules/linux/vmhgfs/filesystem.c, modules/linux/vmhgfs/inode.c: changes
	  for compatibility with newer Linux kernels, where it's not possible to
	  change fsuid/capabilities directly anymore.

	* modules/linux/vmhgfs/compat_pagemap.h, modules/linux/vmhgfs/page.c:
	  fix warning, and compatibility changes for newer Linux kernels
	  (2.6.28.1 and newer; bug #2530616).

	* modules/linux/vmhgfs/inode.c: fix creation of symlinks (bug #2531303).

	* modules/linux/vmxnet/vmxnet.c: use PCI-specific memory allocation
	  functions.

	* modules/linux/vmxnet/vmxnet.c, modules/linux/vmxnet3/vmxnet3.c: add option
	  to disable LRO.

	* modules/linux/vsock/af_inet.{c,h}, modules/linux/vsock/util.{c,h}: add
	  MSG_PEEK support; remove ifdefs that were disabling support for queue
	  pairs on the host kernel module; fix compilation with certain versions
	  of gcc (bug #2531283).

	* modules/solaris/vmhgfs/*: move backdoor handling code to the HGFS driver;
	  this makes the user-level code to handle the driver (currently in
	  vmware-guestd) obsolete.

	* modules/solaris/vmxnet/*: add vmxnet driver for Solaris, under the CDDL.

	* services/plugins/*: add all currently available "core services" plugins.
	  The current set of plugins provide the functionality available in
	  vmware-guestd; there are a few plugins that replace functionality from
	  vmware-user, but not all features are ported yet (and vmtoolsd - with
	  vmware-user plugins - and vmware-user cannot run at the same time).

	* toolbox/toolboxAbout.c: fix the copyright character.

	* toolbox/toolbox-cmd.c: reword a few messages, fix typos.

	* toolbox/toolboxCmdInt.h, toolbox/toolboxcmd-record.c,
	  toolbox/toolbox-gtk.c, toolbox/toolboxRecord.c: remove the "record"
	  functionality from tools (due to internal request).

	* toolbox/toolboxInt.c, toolbox/toolboxScripts.c, toolbox/toolbox-scripts.c:
	  changes to use the new config file format used by the "core services" code.

	* */Makefile.am: make sure 'rm' and 'mv' are being used instead of $(RM) and
	  $(MV) (which are not defined by automake; bug #2492040).

2009-01-21	Marcelo Vanzin	 <mvanzin@vmware.com>
	* Resync with internal trunk (2009.01.19)

	* configure.ac: detect the presence of FUSE libraries.

	* configure.ac, Makefile.am: compile kernel modules for Solaris, and
	  vmblock-fuse module if FUSE is available.

	* lib/ghIntegration/ghIntegrationX11.c: retrieved localized application
	  names.

	* lib/guestInfo/guestInfo.c, lib/guestInfo/guestInfoPosix.c,
	  lib/include/hostinfo.h, lib/misc/hostinfo_misc.c, lib/misc/hostinfoPosic.c,
	  lib/vixTools/vixTools.c: refactoring to move code shared with other VMware
	  products to a common library.

	* lib/guestRpc/guestlibV3.x, lib/guestRpc/Makefile.am,
	  lib/include/vmGuestLib.h, libguestlib/*: add new iteration of the
	  "guestlib" protocol. This is a more extensible solution than the current
	  protocol, and should make it easier to add new information when needed.

	* lib/include/dynarray.h, lib/include/dynbuf.h, lib/misc/dynarray.c,
	  lib/misc/dynbuf.c: make some DynArray/DynBuf functions inline for speed.

	* lib/include/unityCommon.h: more documentation about the Unity protocol.

	* lib/unity/unityPlatformX11.c: fix Unity<->guest desktop ID mappings.

	* libvmtools/vmtoolsLog.c: change the way log domains are configured; now
	  sub-domains inherit the default handler for the app if no handler is
	  specified.

	* modules/freebsd/vmhgfs/state.c, modules/freebsd/vmhgfs/state.h,
	  modules/freebsd/vmhgfs/vnopscommon.{c,h}: implement support for mmap on
	  the Mac OS driver, which allows running executables from an HGFS
	  share. The FreeBSD module still does not support this functionality.

	* modules/freebsd/vmhgfs/transport.{c,h}: refactoring for sharing structure
	  definitions.

	* modules/linux/pvscsi/pvscsi.c, modules/linux/vmblock/linux/module.c,
	  modules/linux/vmci/vmci_drv.c, modules/linux/hgfs/module.c,
	  modules/linux/vmmemctl/os.c, modules/linux/vmsync/sync.c,
	  modules/linux/vmxnet/vmxnet.c, modules/linux/vmxnet3/vmxnet3.c: add support
	  for Novell's proprietary module info tag ("supported").

	* modules/linux/vmci/vmciKernelIf.c: add support for VMCI queue pairs on
	  the host. This does not affect the driver when it runs inside virtual
	  machines.

	* modules/linux/vmci/*.h, modules/linux/vsock/*.h: some changes in the common
	  code to support Mac OS X, and also queue pairs on the Solaris VMCI module.

	* modules/linux/vsock/af_vsock.{c,h}: add functions for registering with
	  the vsock driver from within the kernel.

	* modules/linux/*/Makefile: add $(LINUXINCLUDE) to the compiler flags; this
	  allows compiling the modules against recent kernels which removed that
	  from $(KBUILD_CPPFLAGS).

	* modules/Makefile.am: add support for compiling Solaris kernel modules.

	* modules/solaris/vmhgfs/*: initial release of the Solaris HGFS driver in
	  open-vm-tools. Driver is licensed under the CDDL 1.0.

	* vmblock-fuse/*: add the user-level implementation of the vmblock driver,
	  which is build on top of FUSE, to open-vm-tools. vmware-user hasn't yet
	  been modified to use this version of vmblock.

	* vmware-user/copyPaseV3.h: new header introduced during development of the
	  next version of copy paste / DnD for X11 platforms.


2008-11-23  Marcelo Vanzin  <mvanzin@vmware.com>
	* Resync with internal trunk (2008.12.19)

	* configure.ac, */Makefile.am: standardize on using libtool archives for
	  the libraries. This also means several makefiles were removed, since
	  there's no need to build two archives of the same library anymore.

	* configure.ac: add logic to detect glib 2.6; this is the minimum version
	  required by the "Core Services" project. Currently it's an optional
	  dependency.

	* configure.ac: disable Unity when user specifies --disable-multimon.

	* configure.ac: actually build the pvscsi modules if the detected kernel
	  version supports it.

	* configure.ac, Makefile.am, lib/guestInfo/Makefile.am,
	  lib/stubs/Makefile.am, libvmtools/*, lib/include/vmtools.h: add the
	  "vmtools" shared library used in the "Core Services" project. The library
	  is a collection of a lot of other libraries used by most VMware Tools
	  programs, and adds some functionality on top of glib that is used in the
	  "Core Services" project. Currently no other components from that project
	  are available as part of open-vm-tools.

	* lib/deployPkg/deployPkgLog.h, lib/deployPkg/toolsDeployPkg.h: moved private
	  headers out of the public header directory.

	* lib/guestRpc/Makefile.am, modules/Makefile.am: fix the makefiles so that
	  it's possible to build open-vm-tools from a directory different from the
	  source dir.

	* lib/hgfsServer/hgfsServer.c: changes to support aliases on Mac OS hosts.

	* lib/hgfsServer/hgfsServerLinux.c: changes to map Windows attributes to
	  Mac OS FileInfo.

	* lib/include/circList.h: removed unused file.

	* lib/include/unityCommon.h, lib/unity/unity.c: changes to add documentation
	  to various application RPCs used in Tools.

	* lib/misc/posixPosix.c, toolbox/toolboxScripts.c: fix include path for
	  syslimits.h on FreeBSD.

	* lib/unity/unityPlatformX11.c: better detection of the guest's work area
	  boundaries; fixes a problem when dragging a Window in Unity mode with
	  the host's task bar on the left/right of screen would result in weird
	  behavior.

	* lib/unity/unityPlatformX11Settings.c, lib/unity/unityPlatformX11Window.c,
	  lib/unity/unityX11.h: preserve the _NET_WM_DESKTOP setting when hiding
	  windows; this fixes a problem where hiding a panel and later restoring it
	  would result in the wrong _NET_WM_DESKTOP property being set for the panel,
	  causing it to only display on the first virtual desktop.

	* modules/linux/vmci/*: minor changes related to internal development of the
	  Mac OS drivers.

	* modules/linux/vmhgfs/page.c: fix HGFS driver for kernel 2.6.28.

	* modules/linux/vsock/linux/af_vsock.c: added code to gather some performance
	  statistics for the driver.

	* toolbox/toolbox-gtk.c: a few fixes to the help functionality.

	* vmware-user/vmware-user.c, vmware-user-suid-wrapper/main.c: change the
	  "blockFd" argument to have an extra dash so it follows the convention of
	  common command line parsing libraries.

	* Other bug fixes and changes in shared code that don't affect open-vm-tools.

2008-11-18  Marcelo Vanzin  <mvanzin@vmware.com>
	* Resync with internal trunk (2008.11.14)

	* lib/include/vm_version.h: Bumped TOOLS_VERSION.

	* guestd/toolsDaemon.c, lib/include/vm_app.h: changes related to host-side
	  configuration of power operations.

	* hgfsclient/hgfsclient.c, lib/dnd/dndCommon.c, lib/dnd/dndLinux.c,
	  lib/hgfs/*, lib/hgfsServer/*, lib/include/cpName.h, lib/include/dnd.h,
	  lib/include/hgfsEscape.h, lib/include/staticEscape.h, modules/*/vmhgfs/*,
	  vmware-user/dnd.c: refactor the HGFS character escaping code; escape
	  invalid characters when the sender allows characters in the file name that
	  the receiver does not allow.

   * lib/hgfsServer/hgfsServerLinux.c: return proper error code when the
     remote path points to a non-existent directory.

	* lib/deployPkg/deployPkg.c, lib/deployPkg/deployPkgLog.c,
	  lib/include/deployPkg.h, lib/include/rpcin.h, lib/rpcin/rpcin.c:
     refactoring for the Tools Core Services project.

	* lib/dnd/dndCommon.c: don't ASSERT if the staging directory is not
	  actually a directory.

	* lib/dynxdr/xdrutil.c, lib/include/xdrutil.h: more XDR-related utility
	  functions.

	* lib/file/file.c, lib/file/fileLockPrimitive.c, lib/include/vm_basic_defs.h:
	  replace use of strtok with strtok_r.

	* lib/guestApp/guestApp.c, lib/include/guestApp.h: more utility functions.

	* lib/guestApp/guestApp.c, lib/include/backdoor_def.h, vmware-user/pointer.c:
	  add the ability to detect whether the mouse hardware can be used in
     absolute mode, which allows for auto grab / auto ungrab to work.

	* lib/guestInfo/guestInfo.c, lib/guestInfo/guestInfoPosix.c,
     lib/guestRpc/nicinfo.x: provide the prefix length of an IPv6 address in a
     separate field of the NicInfo struct.

	* lib/guestInfo/guestInfoPerfMonLinux.c: reduce log spew.

	* lib/guestInfo/guestInfoServer.c, lib/include/guestInfo.h: changes related
	  to how the VMware code in the host handles Tools version information.

	* lib/include/unityCommon.h: changes related to documenting the Unity API.

	* lib/include/unity.h, lib/unity/*: remove a few unused RPCs, add a new
	  function used to notify the host of the status of Unity.

	* modules/freebsd/vmhgfs/state.c, modules/vmhgfs/freebsd/vnops.c,
     modules/vmhgfs/freebsd/vnopscommon.*: support symlinks on FreeBSD and
     Mac OS.

   * modules/freebsd/vmhgfs/worker.c: fix mutex not being unlocked in some
     error paths.

	* modules/linux/dkms.conf: add rudimentary dkms support.

	* modules/linux/pvscsi/*: add a driver for VMware's paravirtualized SCSI
	  device.

	* modules/linux/*/Makefile, modules/linux/vmci/Makefile.kernel,
	  modules/linux/vsock/Makefile.kernel: add support for exporing symbols,
	  needed for dependent modules to load if a kernel >= 2.6.26 is compiled
	  with CONFIG_MODVERSIONS. Make the vsock module reference the vmci module's
	  symbols.

	* modules/vmmemctl/freebsd/os.c: add sysctl to get driver status. Information
	  can be retrieved with "sysctl vm.vmmemctl".

   * modules/linux/vmci/vmci_defs.h, modules/linux/vmci/vmci_call_defs.h,
     modules/linux/vsock/vmciHostKernelAPI.h: changes related to VMCI work
     on VMware ESX.

	* modules/linux/vsock/linux/*: improve performance of some applications by
	  improving the poll behavior and sending less packets when waiting
	  for a response.

   * modules/linux/vmsnc/sync.c: fix panic on kernels < 2.6.20.

	* modules/linux/vmxnet3/vmxnet3.c, modules/linux/vmxnet3/vmxnet3_int.h,
     modules/linux/vmxnet3/vmxnet3_version.h: inherit net device features to
     avoid having the kernel setting the PSH flag on every TCP packet (among
     other issues).

	* modules/*/*/*: Reflected changes from elsewhere.

	* scripts/common/vmware-user.desktop: add missing "Type" information; fixes
	  auto-start of vmware-user on Ubuntu 8.10.

	* toolbox/*: fix a GTK+ warning caused when trying to unref a dialog
	  instance from a signal callback.

	* vmware-user/copyPaste.c: work around an issue when OpenOffice's "cut"
	  command is used; it sets the timestamp of both the clipboard and the
	  primary selection, but only puts data in the clipboard.

	* Other files: minor refactorings, and changes unrelated to open-vm-tools.

2008-10-13  Adar Dembo  <adar@vmware.com>
	* Resync with internal trunk (2008.10.09)

	* configure.ac, modules/Makefile.am: Added a command-line option to
	skip privileged operations during make install (requested by Dennis
	Leroy). Integrated new vmxnet3 kernel module.

	* configure.ac, lib/guestInfo/Makefile.am,
	lib/guestInfo/guestInfoPerfMonLinux.c, lib/include/vm_procps.h:
	Removed open-vm-tools dependency on libproc-dev by providing some procps
	bits and pieces in our own vm_procps.h (Sourceforge bug 1960947).

	* hgfsmounter/Makefile.am: Removed chown calls. Only call chmod
	if we're running as root (requested by Dennis Leroy).

	* */foreignVMToolsDaemon.c, */foundryToolsDaemon.[ch],
	lib/guestInfo/guestInfo.c, lib/guestInfo/guestInfoServer.c,
	lib/include/guestInfoServer.h, lib/include/vixTools.h,
	lib/rpcin/rpcin.c, lib/vixTools/vixTools.c, vmware-user/copyPaste.c,
	vmware-user/vmware-user.c: More refactoring from the Tools core
	services project.

	* */foundryToolsDaemon.c: Changed HGFS mounting behavior such that the
	global HGFS share is mounted at /mnt/hgfs instead of relying on
	"mount -a".

	* guestd/toolsDaemon.[ch], lib/include/backdoor_def.h,
	lib/include/system.h, lib/include/vm_app.h, lib/system/systemLinux.c:
	Added backwards time synchronization functionality. Moved Tools scripts
	checking from VMX to guestd.

	* hgfsmounter/hgfsmounter.c: Added handling for multiple "-o" flags on
	the command line.

	* lib/dynxdr/dynxdr.c: Fixed x_putint32 behavior on 64-bit Solaris.

	* lib/file/*, lib/include/codeset.h, lib/include/file.h,
	lib/include/fileIO.h, lib/include/hostinfo.h,
	lib/include/loglevel_user.h, lib/include/productState.h,
	lib/include/timeutil.h, lib/include/unicodeTypes.h,
	lib/include/vixCommands.h, lib/include/vix.h,
	lib/include/vm_basic_asm.h, lib/include/vm_basic_types.h,
	lib/include/vm_legal.h, lib/include/vm_product.h,
	lib/include/win32util.h, lib/include/x86cpuid.h, lib/misc/codeset.c,
	lib/misc/codesetOld.[ch], lib/misc/posixPosix.c, lib/misc/timeutil.c,
	lib/region/region.c, lib/string/bsd_vsnprintf.c, lib/unicode/*,
	lib/user/hostinfoPosix.c, modules/freebsd/vmhgfs/sha1.c,
	modules/*/*/vm_device_version.h, modules/linux/*/vmci_iocontrols.h,
	modules/linux/*/vmci_version.h, modules/linux/vmhgfs/hgfsEscape.h:
	Changes from work unrelated to open-vm-tools on internal trunk.

	* lib/ghIntegration/ghIntegrationX11.c: Fixed some bugs in menu-spec and
	desktop-entry-spec support in Linux guests.

	* lib/guestApp/guestApp.c, lib/include/guestApp.h,
	lib/include/statelogger_backdoor_def.h, toolbox/Makefile.am,
	toolbox/toolbox-cmd.c, toolbox/toolbox-gtk.c, toolbox/toolboxCmdInt.h,
	toolbox/toolboxGtkInt.h, toolbox/toolboxInt.h, toolbox/toolboxRecord.c,
	toolbox/toolboxcmd-record.c: Patches from Yiwen Zhang to add basic
	record/replay controls to the gtk and command-line toolbox apps.

	* lib/guestInfo/guestInfoPosix.c: Fixed a bug where we assumed the
	primary interface's addresses were all IPv4 addresses.

	* lib/guestInfo/guestInfoServer.c: Fixed a memory leak.

	* lib/guestRpc/Makefile.am, lib/guestRpc/unityActive.x,
	lib/include/guestCaps.h, lib/include/unityCommon.h, lib/unity/unity.c,
	vmware-user/Makefile.am: Added new unityActive xdr protocol, used for
	tracking whether Unity is enabled or not.

	* lib/hgfsServer/hgfsServer.c, lib/hgfsServer/hgfsServerLinux.c,
	lib/hgfsServerPolicyGuest/hgfsServerPolicyGuest.c,
	lib/include/hgfsProto.h: Fixed bug where we were invalidating HGFS
	handles on the share of entire drive ("/"). Added optional symlink
	following behavior to HGFS server. Fixed a UTF-8 validation issue.
	Added volume ID field to attribute fields.

	* lib/include/vm_tools_version.h: Bumped internal Tools backdoor
	version.

	* lib/include/vm_version.h: Bumped TOOLS_VERSION.

	* lib/procMgr/progMgrPosix.c: Fixed impersonation behavior so that
	uids are passed to setresuid instead of gids. Added alternate way to
	list processes in situations where a process lacks a command line.

	* lib/region/region.c: Reforked xorg miregion.c and apply open-vm-tools
	specific patches.

	* lib/unity/*, lib/unityWindowTracker/unityWindowTracker.c: Fixed an
	overflow that lead to a panic when a window title exceeded 1024 bytes.
	Fixed some initialization assumptions when using virtual desktops.

	* lib/unity/unityPlatformX11Window.c: Fixed an issue with restacking
	windows above non-existent windows. Other minor fixes.

	* modules/*/*/*: Reflected changes from elsewhere.

	* modules/linux/*/Makefile.kernel: Changed clean target to remove
	Module.markers and modules.order.

	* modules/linux/vsock/include/compat_sock.h,
	modules/linux/vsock/*: Fixed several issues in vsock.

2008-09-03  Adar Dembo  <adar@vmware.com>
	* Resync with internal trunk (2008.08.29)

	* Makefile.am, aclocal.m4, m4/*: Moved macros to 'm4' subdir.

	* compile, config.guess, config.sub, config/*, depcomp, install-sh,
	ltmain.sh, missing: Moved auxiliary build tools to 'config' subdir.

	* configure.ac: Moved macros and auxiliary build tools into separate
	subdirectories. Added command line option to force the use of gtk1 over
	gtk2. Cosmetic fixes. Reworked libicu detection. Switched over to
	libtool-2.2. Added library check for new gdk symbol. Added library
	check for libnotify. Reworked use of macros from AC_PATH_XTRA and
	some X11 library checks.

	* */foundryToolsDaemon.c, toolbox/toolbox-cmd.c, guestd/main.c,
	lib/guestInfo/guestInfoPerfMonLinux.c, lib/guestInfo/guestInfoPosix.c,
	lib/misc/posixPosix.c, lib/panic/panic.c, lib/system/systemLinux.c,
	modules/linux/vsock/linux/util.c, xferlogs/xferlogs.c: Added checks for
	return codes of certain functions and passed %s to formatted string
	functions where appropriate (needed to compile on Ubuntu Intrepid).

	* lib/appUtil/appUtilX11.c: Fixed command line skipping logic and added
	more icon paths. Removed unnecessary chdir(2) canonicalization logic.

	* lib/deployPkg/runDeployPkgPosix.c, lib/file/fileIO.c,
	lib/file/fileIOPosix.c, lib/file/fileLockPrimitive.c,
	lib/file/filePosix.c, lib/hgfsServer/hgfsServerLinux.c,
	lib/include/bsdfmt.h, lib/include/file.h, lib/include/fileIO.h,
	lib/include/iovector.h, lib/include/msgfmt.h, lib/include/str.h,
	lib/include/vm_basic_defs.h, lib/include/vm_basic_types.h,
	lib/misc/hostname.c, lib/misc/idLinux.c, lib/misc/posixPosix.c,
	lib/SLPv2Parser/*.c, lib/wiper/wiperPosix.c, toolbox/toolboxScripts.c:
	Added FreeBSD compatibility glue.

	* guestd/toolsDaemon.c, lib/file/file.c,
	lib/foundryMsg/foundryPropertyListCommon.c, lib/image/imageUtilPng.c,
	lib/include/appUtil.h, lib/include/backdoor_def.h, lib/include/conf.h,
	lib/include/cpuid_info.h, lib/include/guest_os.h,
	lib/include/hostinfo.h, lib/include/imageUtil.h,
	lib/include/imageUtilTypes.h, lib/include/log.h,
	lib/include/loglevel_user.h, lib/include/netutil.h,
	lib/include/posix.h, lib/include/timeutil.h, lib/include/util.h,
	lib/include/uuid.h, lib/include/vix.h, lib/include/vixOpenSource.h,
	lib/include/vm_atomic.h, lib/include/vm_legal.h,
	lib/include/vm_version.h, lib/include/x86cpuid.h,
	lib/misc/codesetOld.c, lib/misc/timeutil.c, lib/string/bsd_vsnprintf.c,
	lib/user/util.c, lib/user/utilPosix.c, lib/vixTools/vixTools.c,
	modules/linux/*/vmci_kernel_if.h, modules/linux/vmxnet/compat_timer.h,
	toolbox/toolboxCmdInt.h, toolbox/toolboxcmd-*.c:
	Changes from work unrelated to open-vm-tools on internal trunk.

	* lib/ghIntegration/ghIntegration.c,
	lib/guestRpc/ghiGetBinaryHandlers.x: Don't send oversized messages.
	Increased maximum number of binary handlers.

	* lib/ghIntegration/ghIntegrationX11.c, lib/guestApp/guestAppPosix.c,
	lib/include/guestApp.h, lib/include/system.h, lib/system/systemLinux.c,
	toolbox/toolbox-gtk.c: Improved "run program" functionality by
	restoring program environment and stripping any VMware wrapper script
	changes to LD_LIBRARY_PATH.

	* lib/guestApp/guestAppPosixX11.c: Now using glib to open URLs instead
	of system(3). Improved gnome and kde session detection.

	* lib/guestApp/Makefile.am: This library needed GTK_CPPFLAGS too.

	* lib/guestInfo/guestInfoInt.h, lib/guestInfo/guestInfoPosix.c,
	lib/guestInfo/guestInfoServer.c: Added logic to optionally convert
	subnet mask to an ASCII string.

	* lib/guestRpc/Makefile.am: Cleaned up generated xdr headers better.

	* lib/hgfsServer/hgfsServer.c, lib/hgfsServer/hgfsServerInt.h,
	lib/hgfsServer/hgfsServerLinux.c: Fixed	problems when packing V3
	replies.

	* lib/hgfsServer/hgfsServerLinux.c: Fixed UTF-8 normal form D/C
	conversions on the root directory.

	* lib/include/dndGuest.h: Changed preprocessor usage to allow gtk1 to
	access UnityDnD.

	* lib/include/dnd.h, vmware-user/copyPaste.c: Code motion.

	* lib/include/guestCaps.h: Resort the capabilities table.

	* lib/include/rpcin.h, lib/rpcIn/rpcin.c, : Beginnings of the Tools
	core services. This is a full-fledged refactoring of the Tools
	userlevel apps to a "service" vs. "plugin" programming model.

	* lib/include/vmblock.h, modules/*/vmblock/block.c,
	modules/*/vmblock/stubs.c, modules/*/vmblock/stubs.h: Changes needed
	to support the fuse-based implementation of vmblock (coming soon).

	* lib/include/vm_tools_version.h: Some Tools version bumps.
	
	* modules/*/*/*: Reflected changes from elsewhere.

	* modules/*/*/compat/compat_stdarg.h: Added compatibility wrappers for
	stdarg features.

	* modules/freebsd/vmhgfs/debug.*: Cosmetic fixes.

	* modules/freebsd/vmhgfs/*: Make driver compliant with HGFSv3.

	* modules/*/vmmemctl/vmballoon.c: Allow module to yield the processor
	when allocating many pages.

	* modules/linux/*/autoconf/cachector1.c,
	modules/linux/*/include/compat_sched.h,
	modules/linux/*/include/compat_semaphore.h,
	modules/linux/*/include/compat_slab.h,
	modules/linux/vmblock/linux/filesystem.c,
	modules/linux/*/Makefile.kernel,
	modules/linux/vmhgfs/bdhandler.c, modules/linux/vmhgfs/filesystem.c,
	modules/linux/vmhgfs/module.h, modules/linux/vmhgfs/request.c,
	modules/linux/vmsync/sync.c, modules/linux/vsock/linux/af_vsock.c: Fix
	modules for 2.6.27 kernels.

	* modules/linux/*/Makefile: Fixed DRIVER target.

	* modules/linux/vmci/vmci_drv.c: Moved interrupt registration to be
	after driver initialization.

	* modules/linux/vsock/linux/af_vsock.c,
	modules/linux/vsock/linux/af_vsock.c: Added optimized flow control
	protocol.

	* toolbox/toolboxScripts.c, toolbox/toolboxShrink.c: Cosmetic fixes.

	* vmware-user/copyPaste.c, vmware-user/dnd.c: Fixed edge case behavior
	with file copy paste and DnD.

	* vmware-user/modconfig.c, vmware-user/notify.c,
	vmware-user/vmware-user.c, vmware-user/vmwareuserInt.h: Added stubbed
	modconfig module out-of-date notification framework. Not useful for
	open-vm-tools, hence the stubs.

2008-08-08  Adar Dembo  <adar@vmware.com>
	* Resync with internal trunk (2008.07.24)

	* configure.ac, */Makefile.am: Landed support for command line Toolbox,
	Unity, vsock, and vmci. Refactored and reformatted a few things.
	Improved portability by using $(SED) and AC_PROG_SED instead of "sed",
	$(MKDIR_P) and AC_PROG_MKDIR_P instead of "mkdir -p", $(LN_S) and
	AC_PROG_LN_S instead of "ln -s". Changed icu feature detection and
	linking to rely on C++ linker instead of C linker. Fixed module
	compilation checks on FreeBSD. Fixed $(DESTDIR) handling (patch by Mike
	Auty). Refactored lib/strUtil into lib/misc. Changed hgfsmounter
	install hook to symlink mount.vmhgfs. Renamed libghIntegrationStub to
	libGhIntegrationStub. Fixed compilation of lib/guestApp when using
	--without-x (reported by Martin Preishuber). Renamed libunityStub to
	libUnityStub. Fix build on FreeBSD by using ":=" instead of "=" when
	exporting module directories. The vmware-user desktop link now executes
	vmware-user-suid-wrapper. Properly install vmware-user-suid-wrapper.

	* */foundryToolsDaemon.c, lib/vixTools/vixTools.c: Use a larger result
	packet when handling impersonated HGFS requests (since HGFSv3 uses
	larger packets).

	* guestd/main.c: Moved foreign VM check.

	* guestd/toolsDaemon.*: Added plumbing for HGFS usability library
	calls.

	* hgfsmounter/hgfsmounter.c: Added support for passing options to
	the MacOS HGFS driver.

	* lib/appUtil/*, lib/include/appUtil.h: New library for Unity support.

	* lib/auth/authPosix.c: Don't try using PAM from the Tools.
	
	* lib/dnd/dndCommon.c, lib/dnd/dndLinux.c, lib/file/file.c,
	lib/file/fileIOPosix.c, lib/file/filePosix.c, lib/include/dnd.h,
	lib/include/loglevel_user.h, lib/include/panic.h, lib/include/posix.h,
	lib/include/strutil.h, lib/unicode/unicodeBase.h,
	lib/include/unicodeOperations.h, lib/include/vix.h,
	lib/include/vm_app.h, lib/include/vm_assert.h,
	lib/include/vm_product.h, lib/include/x86cpuid.h, lib/misc/codeset.c,
	lib/misc/hashTable.c, lib/misc/strutil.c, lib/misc/timeutil.c,
	lib/panic/panic.c, lib/string/bsd_vsnprintf.c, lib/strUtil/*,
	lib/unicode/unicodeCommon.c, lib/unicode/unicodeSimpleBase.c,
	lib/unicode/unicodeStatic.c, lib/user/hostinfoPosix.c,
	lib/user/util.c, lib/user/utilPosix.c: Changes from work unrelated to
	open-vm-tools on the internal trunk.

	* lib/backdoor/backdoorInt.h, lib/deployPkg/runDeployPkgInt.h,
	lib/dnd/dndInt.h, lib/file/fileInt.h, lib/guestInfo/guestInfoInt.h,
	lib/hgfs/cpNameInt.h, lib/hgfsServer/hgfsServerInt.h,
	lib/impersonate/impersonateInt.h, lib/include/backdoorInt.h,
	lib/include/bsd_output_int.h, lib/include/cpNameInt.h,
	lib/include/dndInt.h, lib/include/fileInt.h,
	lib/include/guestInfoInt.h, lib/hgfsServer/hgfsServerInt.h,
	lib/include/impersonateInt.h, lib/include/runDeployPkgInt.h,
	lib/include/toolsLoggerInt.h, lib/include/unicodeInt.h,
	lib/string/bsd_output_int.h, lib/toolsLogger/toolsLoggerInt.h,
	lib/unicode/unicodeInt.h: Moved some internal header files out of
	the general include directory and into the appropriate libraries.

	* lib/ghIntegration/*: New library for Unity support.

	* lib/guestApp/guestAppPosixX11.c: Reset the value of LD_LIBRARY_PATH
	before running the web browser.

	* lib/guestInfo/guestInfoPosix.c, lib/include/guest_os.h: Fixed a typo
	in Mandriva guest detection. Added Asianux.

	* lib/guestInfo/guestInfoServer.c: Fixed behavior for sending nicInfo
	updates to the host (patch by Jason Lunz).

	* lib/guestRpc/ghi*.*: New xdr protocol for Unity support.

	* lib/guestRpc/nicinfo.x: Correctly applied LGPL to file.

	* lib/hgfs/cpNameLinux.c: Allow building for versions of Solaris newer
	than 10.

	* lib/hgfsServer/hgfsServer.c,
	lib/hgfsServerPolicyGuest/hgfsServerPolicyGuest.c,
	lib/include/hgfsServerPolicy.h: Provide an override setting for
	disabling case conversion during file lookups.

	* lib/hgfsServer/hgfsServerLinux.c: Only perform case insensitive
	file lookups if a case sensitive lookup fails.

	* lib/image/imageUtilPng.c, lib/include/imageUtil.h,
	lib/include/imageUtilTypes.h: New library for
	Unity support.

	* lib/include/conf.h, toolbox/toolbox-gtk.c: Robustified the help page
	discovery mechanism.

	* lib/include/dndGuest.h: Allow inclusion of header into source files
	without GTK2 support.

	* lib/unity/*, lib/include/guestCaps.h, lib/include/unityCommon.h: New
	library for Unity support.

	* lib/include/hgfsUtil.h: Fixed a precedence issue in a macro.

	* lib/raster/*, lib/include/rasterConv.h: New library for Unity support.

	* lib/region/*, lib/include/region.h: New library for Unity support.

	* lib/include/system.h: Added new OS type for WinXP 64-bit, reformatted
	enums.

	* lib/unityWindowTracker/*, lib/include/unityWindowTracker.h: New
	library for Unity support.

	* lib/include/vm_version.h: Bumped TOOLS_VERSION.

	* lib/wiper/wiperPosix.c: Replaced BSD_VERSION with __FreeBSD_version.

	* modules/*/*/*: Reflected changes from elsewhere.

	* modules/freebsd/vmhgfs/*: Reflected changes from MacOS HGFS work, and
	fixed file permissions so that they're not all owned by root.

	* modules/linux/vmblock/linux/dentry.c: Changed d_revalidate to
	properly invalidate negative dentries.

	* modules/linux/vmci/*: Landed the Virtual Machine Communication
	Interface guest module.

	* modules/linux/vmmemctl/os.c: Fixed vmmemctl to build on 2.6.26
	(reported by Pavol Rusnak).

	* modules/linux/vmsync/sync.c: Fixed vmsync to build on 2.6.26
	(reported by Pavol Rusnak).

	* modules/linux/vsock/*: Landed the VMCI sockets interface module.

	* modules/linux/vmxnet/vmxnet.c, modules/linux/vmxnet/vmxnet2_def.h,
	modules/linux/vmxnet/vmxnetInt.h: Increased rx ring size for enhanced
	vmxnet2.

	* toolbox/*: Refactored pieces of GTK Toolbox and landed the command
	line Toolbox. Fixed mnemonic collisions in the GTK Toolbox.

	* vmware-user/copyPaste.c: Fixed several bugs with file copy paste
	behavior.

	* vmware-user/notify.c, vmware-user/vmware-user.c,
	vmware-user/vmwareuserInt.h: Added stubs for notification framework.

	* vmware-user/pointer.c: Reverted fix for bug with clipboard retry
	behavior.

	* vmware-user/vmware-user.c: Fixed build with gtk 1.2 (reported by
	Stephen Duncan). Added signal handlers for SIGUSR1/SIGUSR2 used by
	VMware Tools installer to reload vmware-user cleanly during a Tools
	upgrader. Reload vmware-user on a fatal X I/O error. Don't panic if
	run outside of a VM. Don't leave Unity mode on a Tools reset.
	
2008-07-01  Adar Dembo  <adar@vmware.com>
	* Resync with internal trunk (2008.06.30)

	* configure.ac, lib/guestApp/*, toolbox/Makefile.am,
	vmware-user/Makefile.am: Split lib/guestApp into two libraries, one
	with X11 functionality, and one without. Improved detection of
	gnome-open.

	* guestd/*, lib/netUtil/netUtilLinux.c: guestd now compiles for MacOS
	guests.
	
	* guestd/main.c, lib/include/system.h, lib/system/systemLinux.c:
	Refactored GuestdWritePidfile into System_Daemon.

	* guestd/toolsDaemon.c: Fixed a backwards time synchronization issue.
	Thanks to Eric Castan for reporting the bug.

	* lib/conf/conf.c, lib/include/conf.h: Removed obsolete configuration
	keys and values.

	* lib/file/*, lib/dict/*, lib/foundryMsg/*, lib/include/backdoor_def.h,
	lib/include/codeset.h, lib/include/config.h,
	lib/include/file_extensions.h, lib/include/fileInt.h,
	lib/include/loglevel_user.h, lib/include/msg.h, lib/include/msgid.h,
	lib/include/posix.h, lib/include/preference.h, lib/include/unity.h,
	lib/include/vixCommands.h, lib/include/vix.h,
	lib/include/vmbackup_def.h, lib/include/vmBackup.h,
	lib/include/vm_basic_defs.h, lib/include/vm_basic_types.h,
	lib/include/vm_product.h, lib/include/win32util.h,
	lib/include/x86cpuid.h, lib/misc/codeset.c, lib/misc/codesetOld.c,
	lib/misc/codesetOld.h, lib/misc/posixPosix.c, lib/strUtil/strutil.c,
	lib/user/hostinfoPosix.c, lib/user/util.c,
	lib/vmBackupLib/stateMachine.c, modules/*/vmxnet/net.h: Changes from
	work unrelated to open-vm-tools on the internal trunk.

	* lib/guestRpc/Makefile.am: Added comment about misuse of CFLAGS.

	* lib/hgfsServer/hgfsServer.c: Corrected pointer arithmetic so that
	new node and search allocation works consistently in 64-bit apps.

	* lib/hgfsServer/hgfsServerLinux.c, lib/include/hgfsProto.h: Added
	HGFS_ATTR_HIDDEN_FORCED and set it when returning hidden files.
	
	* lib/hgfsServer/*, lib/hgfsServerPolicy/hgfsServerPolicyGuest.c,
	lib/include/hgfsServerInt.h, lib/include/hgfsServerPolicy.h:
	Refactored and cleaned up some code.

	* lib/include/resolution.h, lib/resolution/*,
	vmware-user/vmware-user.c: Refactored some functions.

	* lib/include/vm_legal.h: Added another patent to the patent string.

	* lib/include/vm_tools_version.h: Added a pair of Tools version macros.

	* lib/include/vm_version.h: Bumped Tools product version.

	* lib/Makefile.am: Included a fix for compilation --without-x. Thanks to
	Mark Foster for reporting the issue.

	* lib/misc/Makefile.am, lib/misc/shared/Makefile.am: Realphabetized
	some sources and added missing source files.

	* lib/misc/posixWin32.c: Removed unneeded file from tree.

	* lib/procMgr/procMgrPosix.c: Made safe for -fPIC and for MacOS.

	* modules/*/*/*: Reflected changes from elsewhere.

	* modules/freebsd/vmhgfs/*: Added some code to handle codeset
	conversions between UTF-8 precomposed and decomposed strings.

	* modules/linux/vmhgfs/*: Refactored string escaping/unescaping code.

	* toolbox/*: Added mnemonics for some buttons.

	* vmware-user/pointer.c: Fixed bug in clipboard retry behavior.

	* vmware-user/vmware-user.c: Added handlers for SIGUSR1 and SIGUSR2
	to facilitate smooth vmware-user upgrades with respect to the vmblock
	kernel module.
	
2008-06-20  Elliot Lee  <elliot@vmware.com>

	* Resync with internal trunk (2008.06.13)

	* FreeBSD 7/8 fixes from Martin Blapp.

	* Fix getpwnam_r etc. on FreeBSD & Solaris.

	* configure.ac: Add --without-kernel-modules,
	--with-linux-release, and --with-linuxdir (gissa).

	* configure.ac, lib/guestRpc/*, lib/guestInfo/guestInfo.c,
	lib/guestInfo/guestInfoServer.c, lib/dynxdr/*,
	{vmware-user,guestd}/foreignVMToolsNetworking.c, guestd/Makefile.am,
	{vmware-user,guestd}/foundryToolsDaemon.c, lib/include/dynxdr.h,
	lib/include/guestInfo.h, lib/include/vmxrpc.h,
	lib/include/xdrutil.h, lib/Makefile.am, lib/netUtil/*,
	lib/vixTools/Makefile.am: Add support for XDR encoding of RPC
	values, including the NicInfoV2 structure.

	* guestd/stub.c, hgfsclient/Makefile.am, hgfsclient/stub.c,
	hgfsclient/stub-user-util.c, hgfsmounter/Makefile.am,
	hgfsmounter/stub.c, lib/stubs/*, libguestlib/Makefile.am,
	libguestlib/stubs.c, toolbox/Makefile.am, toolbox/stub.c,
	vmware-user/stub.c: Centralize stubs.

	* lib/guestInfo/guestInfoPerfMonLinux.c: Convert ioInRate and
	ioOutRate to be in terms of KB instead of pages.

	* lib/hgfsBd/hgfsBd.c, lib/hgfsServer/hgfsServer.c,
	lib/hgfsServer/hgfsServerLinux.c: Large packet support, and
	additional case-insensitivity fixes.

	* lib/include/hgfsBd.h, lib/include/hgfs.h,
	lib/include/hgfsProto.h: Add HGFS error code.
	
	* lib/hgfs/hgfsUtil.c, lib/guestInfo/Makefile.am,
	lib/guestInfo/guestInfoPosix.c, lib/guestApp/guestApp.c,
	lib/foundryMsg/foundryMsg.c, lib/file/fileLockPrimitive.c,
	lib/file/fileIOPosix.c, lib/file/fileLockPosix.c,
	guestd/toolsDaemon.c, guestd/debugStdio.c, guestd/main.c,
	lib/hgfsServerManagerGuest/hgfsServerManagerGuest.c,
	lib/include/codeset.h, lib/include/cpuid_info.h,
	lib/include/dnd.h, lib/include/file_extensions.h,
	lib/include/fileInt.h, lib/include/ghIntegration.h,
	lib/include/guestApp.h, lib/include/guestStats.h,
	lib/include/hgfsServerInt.h, lib/include/hgfsUtil.h,
	lib/include/hostinfo.h, lib/include/loglevel_user.h,
	lib/include/netutil.h, lib/include/panic.h, lib/include/posix.h,
	lib/include/unicode*.h, lib/include/util.h, lib/include/vix.h,
	lib/include/vixTools.h, lib/include/vm_app.h,
	lib/include/vm_basic_defs.h, lib/include/vm_product.h,
	lib/include/vm_tools_version.h, lib/include/vm_version.h,
	lib/include/x86cpuid.h, lib/misc/codeset.c, lib/misc/codesetOld.c,
	lib/misc/codesetOld.h, lib/misc/hashTable.c, lib/misc/hostname.c,
	lib/misc/timeutil.c, lib/panic/panic.c, lib/string/str.c,
	lib/sync/syncMutex.c, lib/system/systemLinux.c, lib/unicode/*.c,
	lib/unityStub/*, lib/user/hostinfo.c, lib/user/hostinfoPosix.c,
	lib/vixTools/*, modules/linux/vmxnet/*, toolbox/debugStdio.c,
	vmware-user/debugStdio.c, vmware-user/dnd.c, vmware-user/main.c:
	Bug fixes.

	* modules/linux/vmxnet/*: Remove unused BPF code. Add ethtool
	callbacks to get & set driver settings.

	* lib/user/util.c: Add function for getting backtraces.

	* lib/resolution/*, vmware-user/*, lib/Makefile.am, configure.ac:
	Move resolution-changing code into separate library.

	* guestd/main.c, lib/include/tools.h: Allow disabling tools
	version reporting to the host, via config file.

	* lib/rpcIn/*, lib/include/rpcin.h, guestd/toolsDaemon.c,
	toolbox/toolbox-gtk.c: Updated RPC API

	* lib/include/dndGuest.h: Helper API for DnD code

	* modules/freebsd/vmhgfs/*, modules/freebsd/vmmemctl/*,
	modules/freebsd/vmblock/*, modules/linux/vmhgfs/*,
	modules/linux/vmmemctl/*: Reflect changes from main source tree.

	* vmware-user/copyPaste.c: Copy/paste cleanup.

	* vmware-user/vmware-user.c: Updated locking code to use X11
	display instead of lockfiles.

2008-06-03  Adar Dembo  <adar@vmware.com>
	* Resync with internal trunk (2008.05.28).

	* configure.ac, Makefile.am, */Makefile.am: Added rudimentary
	`make install` support. Fixes Sourceforge bug 1839981.

	* configure.ac, Makefile.am, vmware-user-suid-wrapper/*: Added
	vmware-user-suid-wrapper to help autostart vmware-user. Added some
	informational tags to AC_DEFINE macros.

	* */debugStdio.c: Fixed a format string vulnerability
	in Debug. Allocate fd on the stack in DebugToFile.

	* lib/auth/authPosix.c, lib/dnd/dndCommon.c, lib/dnd/dndLinux.c
	lib/impersonate/impersonate.c: Add inclusion of vmware.h and refactor
	some include statements.

	* lib/file/file.c, lib/include/file.h: Added File_UnlinkNoFollow
	function.

	* lib/file/fileIO.c, lib/file/fileLockPrimitive.c,
	lib/include/fileIO.h: Added error case for ENAMETOOLONG to FileIO_Lock.
	Constified 'buf' in FileIO_Pwrite.

	* lib/file/fileIOPosix.c: Removed coalescing and decoalescing code.
	Consolidated some Unicode calls.

	* lib/file/filePosix.c: Reworked some error handling logic.

	* lib/foundryMsg/foundryMsg.c: Refactored buffer encoding and decoding
	logic into a single pair of functions.

	* lib/foundryMsg/foundryThreads.c, lib/include/foundryThreads.h
	lib/include/util.h, lib/misc/util_misc.c: Changed generic thread type
	from uintptr_t to Util_ThreadID.

	* lib/hgfsServer/*, lib/hgfs/hgfsProto.h, modules/linux/vmhgfs/*:
	Additional HGFSv3 fixes and refactoring.

	* lib/include/dbllnklst.h, lib/misc/dbllnklst.c: Constified argument to
	DblLnkLst_IsLinked.

	* lib/include/dnd.h: Added support for DnD of RTF.

	* lib/include/fileInt.h: Removed prototype of FileLockFileSize.

	* lib/include/hashTable.h, lib/misc/hashTable.c: Cosmetic changes.
	Added HashTable_ReplaceIfEqual.

	* lib/include/loglevel_user.h: Added hpet loglevel.

	* lib/include/msg.h: Removed prototype of MsgSetPostStderrBlock.

	* lib/include/posix.h: Removed certain includeCheck allowances.

	* lib/include/productState.h: Added VDM client product.

	* lib/include/unicode*, lib/unicode/*: Ongoing i18n work.

	* lib/include/vixCommands.h: Added command to set snapshot information.

	* lib/include/vix.h: Added more errors and a new flag.

	* lib/include/vixOpenSource.h: Reworked asserts and added VIX_ASSERT.

	* lib/include/vm_app.h: Added Tools tray app.

	* lib/include/vm_product.h: Reworked VMRC product definitions and added
	VDM client product definitions.

	* lib/include/vm_tools_version.h: Added WS65 Tools version.

	* lib/include/vm_version.h: Bumped Tools version. Added logic for VMRC
	product.

	* lib/include/x86cpuid.h: Modified a flag and trimmed an unneeded macro.

	* lib/misc/codesetOld.c: Implement UTF-16 codest conversion to UTF-8
	for CURRENT_IS_UTF8.

	* lib/misc/dynbuf.c: Modified dynbuf growing behavior.

	* lib/misc/posixDlopen.c, lib/misc/posixInt.h, lib/misc/posixPosix.h:
	Refactored codeset conversion code into PosixConvertToCurrent.

	* lib/misc/posixWin32.c: Added some path checks.

	* lib/misc/timeutil.c: Win32-wrappified TimeUtil_GetTimeFormat.

	* lib/misc/vmstdio.c: Reduce virtual memory usage and add '\r' as a line
	ending in StdIO_ReadNextLine.

	* lib/rpcout/rpcout.c: Added comments.

	* lib/str/str.c: Cosmetic changes.

	* lib/vixTools/vixTools.c: Added unlink(2) logic to avoid deleting
	symlink targets. Cosmetic changes.

	* modules/*/*/*: Reflect changes from elsewhere in the source tree.

	* modules/linux/vmhgfs/super.c: Fix vmhgfs to properly report the
	available space on the host (Sourceforge bug 1924246).

	* vmware-user/vmware-user.c: Add advisory locking code to help maintain
	only one vmware-user instance per X session.

	* xferlogs/xferlogs.c: Fix a formatted string vulnerability.

2008-05-12  Elliot Lee  <elliot@vmware.com>

	* Resync with internal trunk (2008.05.08).

	* configure.ac, **/Makefile.am: Use CPPFLAGS instead of
	CFLAGS to eliminate warning about proc/sysinfo.h.

	* guestd/foreignVMToolsNetworking.c,
	vmware-user/foreignVMToolsNetworking.c
	lib/hgfsServer/hgfsServerLinux.c, lib/include/hgfsServerInt.h,
	modules/linux/vmhgfs/bdhandler.c, modules/linux/vmhgfs/dir.c,
	modules/linux/vmhgfs/file.c, modules/linux/vmhgfs/filesystem.h,
	modules/linux/vmhgfs/fsutil.h, modules/linux/vmhgfs/inode.c,
	modules/linux/vmhgfs/link.c, modules/linux/vmhgfs/module.h,
	modules/linux/vmhgfs/page.c, modules/linux/vmhgfs/request.c,
	modules/linux/vmhgfs/request.h: Whitespace cleanups.

	* guestd/main.c: Removed "blessed app" code for starting
	vmware-user. Hooray!

	* lib/deployPkg/deployPkg.c: Remove unneeded Utf8 conversion for
	Windows.

	* lib/file/filePosix.c: Use new Posix_RealPath implementation.

	* lib/guestApp/guestApp.c, lib/include/guestApp.h: Remove/cleanup
	UTF-8 related RPC functions.

	* lib/guestInfo/guestInfoPerfMonLinux.c,
	lib/guestInfo/guestInfoPosix.c, lib/include/guestInfo.h,
	lib/include/guestInfoInt.h, lib/include/guestStats.h: Rename
	structures to GuestMemInfo, GuestNicInfo, and GuestDiskInfo.

	* lib/guestInfo/guestInfoServer.c, lib/include/guest_msg_def.h: As
	above, and also GUESTMSG_MAX_IN_SIZE moved to guest_msg_def.h, and
	misc locking updates. Also add GuestInfoServer_Main(), and cleanup
	whitespace.

	* lib/hgfsServer/hgfsServer.c: Cleanup UTF-8 handling.

	* lib/include/codeset.h: Update defines that indicate whether the
	current platform is using UTF-8.

	* lib/include/dnd.h: Add prototypes for a couple of string
	conversion functions.

	* lib/include/file_extensions.h: Add OVF and Archived OVF file extensions.

	* lib/include/file.h: C++ guard thingies. Update a couple of
	function prototypes to work on file descriptors instead of
	filenames.

	* lib/include/hashTable.h, lib/include/guest_os.h,
	lib/include/loglevel_defs.h, lib/include/stats_user_defs.h,
	lib/include/stats_user_setup.h, lib/include/str.h,
	lib/include/unicodeTypes.h, lib/include/util.h: Allow inclusion in
	kernel modules...

	* lib/include/loglevel_user.h: As above, and add a couple of
	loglevel variables.

	* lib/include/util.h, lib/misc/util_misc.c: Allow inclusion in
	kernel modules as above, and add some utility functions on Windows
	for manipulating canonical paths.

	* lib/include/hgfsProto.h, lib/include/hgfsUtil.h: Move
	request/reply payload macros to hgfsProto.h.

	* lib/include/hgfsServerPolicy.h: Add ShareList management
	prototypes and structure members.

	* lib/include/msg.h: Add function prototypes for creating and
	posting lists of messages.

	* lib/include/system.h: Add types & functions related to desktop
	switch monitoring on Windows.

	* lib/include/unicodeOperations.h: Add/update inline unicode operations.

	* lib/include/vixCommands.h: Add VIX requests and events.

	* lib/include/vmbackup_def.h, lib/vmBackupLib/stateMachine.c: Move
	backup status enum to public header.

	* lib/include/vm_basic_asm_x86_64.h: Div643232 now also works on MSC.

	* lib/include/vm_basic_defs.h: Add debug output macros for Windows drivers.

	* lib/include/vm_basic_types.h: Update the FMTPD macro, add
	SCANF_DECL macro for arg checking on scanf-like functions.

	* lib/include/x86cpuid.h: Defines for AMD L2/L3 cache separately, and CPUID for Nehalem.

	* lib/misc/codesetOld.c: Bug fixes and general unicode handling updates. 

	* lib/system/systemLinux.c: Use Posix_Getenv/Posix_Setenv impls.

	* lib/vixTools/vixTools.c, lib/vmBackupLib/scriptOps.c: Bug fixes.

	* modules/freebsd/*, modules/linux/*: Updates to correspond to
	updates of files in main tree.

	* modules/freebsd/vmhgfs/hgfs_kernel.h: Bug fixes.

	* modules/freebsd/vmxnet/vm_device_version: Add
	SCSI_IDE_HOSTED_CHANNEL define, update SCSI_MAX_CHANNELS.

	* modules/freebsd/vmxnet/vmnet.def: Add capabilities for IPv6
	checksumming and TSO, and large packet TSO.

	* lib/include/vmblock.h, modules/linux/vmblock/linux/control.c,
	modules/linux/vmblock/linux/vmblockInt.h: Use a macro to better
	abstract the vmblock mount point & device.

	* vmware-user/vmware-user.c: Add SIGPIPE to the list of signals
	that vmware-user handles.
	
2008-05-02  Adar Dembo  <adar@vmware.com>

	* Resync with internal trunk (2008.04.19).

	* configure.ac, guestd/Makefile.am, hgfsclient/Makefile.am,
	lib/misc/*/Makefile.am, lib/string/*/Makefile.am, toolbox/Makefile.am,
	vmware-user/Makefile.am, xferlogs/Makefile.am: Added libicu support for
	codeset conversions. This includes some makefile logic as well as
	autoconf arguments for controlling libicu behavior at compile-time.

	* */foreignVMToolsNetworking.c, lib/vixTools/vixTools.c: Unicode fixes.

	* */foundryToolsDaemon.c, lib/foundryMsg/vixTranslateErrOpenSource.c,
	lib/panic/panic.c, lib/printer/printer.c: Added calls to Win32 Unicode
	wrappers.

	* guestd/main.c: Cleaned up guestInfo server when guestd shuts down.

	* guestd/toolsDaemon.c, vmware-user/resolution.c: Disabled multi-mon
	advertisement for Win2k.

	* lib/auth/authPosix.c, lib/dnd/dndLinux.c, lib/file/*,
	lib/impersonate/impersonatePosix.c, lib/include/mntinfo.h,
	lib/sync/syncWaitQPosix.c, lib/user/hostinfoPosix.c, lib/user/util.c,
	lib/user/utilPosix.c, lib/wiper/wiperPosix.c: Added calls to POSIX
	Unicode wrappers. 

	* lib/file/*: Replaced calls to string functions with calls to
	the "safe" family of string functions.

	* lib/dict/dictll.c, lib/include/dictll.h: Detect and tolerate UTF-8
	dictionary files that contain the UTF-8 BOM.

	* lib/err/*, lib/include/err.h, lib/include/msgfmt.h,
	lib/include/msg.h: Added support for localization of error strings.

	* lib/foundryMsg/foundryThreads.c, lib/include/foundryThreads.h,
	lib/misc/util_misc.c: Added opaque type for threads/process IDs.

	* lib/guestInfo/guestInfoServer.c: Removed separate thread context.

	* lib/hgfsServer/*, lib/include/hgfs*.h: Additional HGFSv3 cleanup.

	* lib/hgfsServer/hgfsServerLinux.c: Added calls to POSIX Unicode
	wrappers. Fixed some alias detection code for MacOS.

	* lib/include/backdoor_def.h: Added backdoor call for debugging events.

	* lib/include/bsdfmt.h, lib/string/bsd_vsnprintf.c,
	lib/string/bsd_vsnprintfw.c: Replaced BSDFmt_WCSonv with
	BSDFmt_WChartoUTF8.

	* lib/include/codeset.h, lib/include/codesetOld.h, lib/misc/codeset.c,
	lib/misc/codesetOld.c, lib/string/convertutf.h: Implemented
	libicu-backed codeset layer. When building without libicu, fallback on
	codesetOld.

	* lib/include/guestApp.h: Added wide versions of dictionary functions.

	* lib/include/loglevel_user.h: Added two new loglevels.

	* lib/include/posix.h, lib/misc/posixPosix.c: Added new POSIX wrappers.

	* lib/include/str.h: Clarified the use of some functions.

	* lib/include/syncMutex.h, lib/include/syncWaitQ.h: Removed unneeded
	macros.

	* lib/include/unicode*.h, lib/unicode/*: Ongoing Unicode work.

	* lib/include/util.h: Added Util_FreeStringList, removed Util_FreeList.

	* lib/include/uuid.h: Added new UUID creation scheme.

	* lib/include/vix*.h: Tweaked some VIX commands, errors, and properties.

	* lib/include/vmBackup.h, lib/vmBackupLib/scriptOps.c,
	lib/vmBackupLib/stateMachine.c: Moved disabled targets logic from
	library to Windows VSS provider.

	* lib/include/vm_basic_asm_x86*.h: Allow emitted FX functions to
	modify main memory as a side effect.

	* lib/include/vm_tools_version.h: Bump Tools version.

	* lib/include/vm_version.h: Added several product versions.

	* modules/linux/vmhgfs/*: Additional cleanup for HGFSv3. Use new kthread
	wrapper when possible. Bump module version.

	* modules/linux/vmmemctl/*: Use new kthread wrapper when possible.
	Remove dead delayed work code. Bump module version.

	* modules/linux/*/compat_kthread.c: Added kthread wrapper implementation
	for modules that use kernel threads.

	* modules/*/*/*: Reflect header file changes from elsewhere in the
	source code tree.

	* vmware-user/copyPaste.c, vmware-user/pointer.c,
	vmware-user/vmwareuserInt.h: Stop wastefully polling for pointer
	updates if the VMX is new enough.

	* xferlogs/xferlogs.c: Fixed a warning in the call to fwrite.
	(Thanks to Denis Leroy for reporting this bug.)
	
	
2008-04-14  Elliot Lee  <elliot@vmware.com>

	* Resync with internal trunk (2008.04.01).

	* Fixed legal header on all LGPL-licensed files.

	* vmware-user/resolution.c: Normalize the display topology that
	comes in from the host, and report 'global_offset' capability.

	* toolbox/Makefile.am, vmware-user/Makefile.am,
	lib/misc/Makefile.am, lib/misc/atomic.c, lib/Makefile.am,
	lib/atomic/*, hgfsclient/Makefile.am: Move libAtomic stuff into libmisc

	* vmware-user/foundryToolsDaemon.c, lib/vixTools/vixTools.c,
	lib/include/hgfsServerInt.h, guestd/toolsDaemon.c,
	guestd/foundryToolsDaemon.c: Remove WIN9XCOMPAT, and some
	SOCKET_MGR code.

	* vmware-user/copyPaste.c: Copy/paste fixes for cross-platform
	operation.

	* modules/linux/vmxnet/vmnet_def.h: Add SG_SPAN_PAGES capability.

	* modules/linux/vmxnet/vm_device_version.h: Update some device limits.

	* modules/linux/*/compat_sched.h: Add TASK_COMM_LEN define.

	* modules/linux/*/compat_kernel.h,
	modules/linux/*/kernelStubsLinux.c: Add vsnprintf define.

	* modules/linux/*/x86cpuid.h: Add new CPUs.

	* modules/linux/vmhgfs/vmhgfs_version.h: Bump HGFS version.

	* modules/linux/*/vm_basic_asm_x86.h,
	modules/linux/*/vm_basic_asm_x86_64.h,
	lib/include/vm_basic_asm_x86.h, lib/include/vm_basic_asm_x86_64.h:
	Formatting fixes, and change asm directives used.

	* modules/linux/vmhgfs/module.h,
	modules/linux/vmhgfs/filesystem.c,
	modules/linux/vmhgfs/bdhandler.c,
	modules/linux/*/compat_kthread.h: compat_kthread fixes.

	* modules/freebsd/vmxnet/net_compat.h,
	modules/freebsd/vmxnet/if_vxn.c: Updates for FreeBSD 7.0.
	(Thanks to Martin Blapp for contributing to these changes.)

	* lib/misc/util_misc.c, lib/include/loglevel_user.h,
	lib/user/hostinfoPosix.c, lib/misc/hostname.c: Bugfix.

	* lib/unityStub/unityStub.c, lib/include/unity.h: Add stub and enums
	related to DnD support.

	* lib/unicode/unicodeSimpleTypes.c,
	lib/unicode/unicodeSimpleTransforms.c,
	lib/unicode/unicodeSimpleBase.c, lib/unicode/unicodeCommon.c,
	lib/include/unicodeTypes.h,
	lib/include/unicodeTransforms.h,
	lib/include/unicodeBase.h, lib/include/unicodeCommon.h: Add
	additional Unicode-related functions.

	* lib/sync/syncMutex.c, lib/include/syncMutex.h: Add TryLock method.

	* lib/strUtil/strutil.c: Add int64-related functions.

	* lib/string/str.c: Compile fix

	* lib/string/bsd_output_shared.c: Better handling of floating
	point on Windows.

	* lib/include/progMgr.h, lib/procMgr/procMgrPosix.c: Clarify that
	the strings are in UTF-8, do conversion as needed.

	* lib/include/posix.h, lib/misc/posixPosix.c,
	lib/misc/posixWin32.c, lib/file/filePosix.c: Add new Posix_
	function implementations, and unicodify existing ones.

	* lib/misc/hashTable.c, lib/include/hashTable.h: Add lock-less hash
	table functions.

	* lib/misc/util_misc.c, lib/include/w32util.h: Add a couple of
	Win32 utility functions.

	* lib/include/vm_version.h: Add WS5 config version.

	* lib/include/vm_atomic.h: Add typecasts to atomic operations to
	make compilers stop complaining, and expand the AtomicUseFence option.

	* lib/include/vm_app.h: Add a couple of HGFS-related options.

	* lib/include/vix.h: Update a few errors and other macros.

	* lib/include/vixCommands.h, lib/foundry/foundryMsg.c: Change a
	bunch of structure members from int32 to uint32, and add a parsing
	function.

	* lib/include/msgfmt.h, lib/include/msg.h: Additional
	message-handling prototypes.

	* lib/include/guestInfoInt.h, lib/include/guestInfo.h,
	lib/guestInfo/Makefile.am, lib/guestInfo/guestInfoServer.c,
	lib/guestInfo/guestInfoPosix.c,
	lib/guestInfo/guestInfoPerfMonLinux.c: Add IPv6 support, and the
	ability to read mem stats on Linux.

	* lib/include/fileIO.h, lib/file/fileIOPosix.c: Add MacOS function
	related to Time Machine.

	* lib/guestApp/guestApp.c: Use Posix_ variants of functions.

	* lib/ghIntegrationStub/ghIntegrationStub.c: Add GHI capabilities
	stubs.

	* lib/dnd/dndCommon.c, lib/file/file.c: Use new Unicode_Format()
	function, bugfix.

	* guestd/main.c: Fix a security bug.

	* configure.ac: Allow calling libdnet 'dumbnet' for Debian
	systems. Detect libprocps.

2008-03-19  Adar Dembo  <adar@vmware.com>

	* Resync with internal trunk (2008.03.13).

	* vm_version.h: Updated Tools version.

	* configure.ac: Added dynamic dnet detection and --without-dnet flag.

	* guestd/debugStdio.c, lib/include/system.h, lib/system/systemLinux.c:
	Modified debugging to file behavior to prepend debug strings with human
	readable timestamps.

	* guestd/main.c, guestd/toolsDaemon.c, lib/conf/conf.c,
	lib/guestApp/guestApp.c, lib/include/guestApp.h: Internationalized
	GuestApp_GetInstallPath and GuestApp_GetconfPath.

	* lib/auth/authPosix.c, lib/dnd/dndLinux.c, lib/file/*,
	lib/impersonate/impersonatePosix.c, lib/include/fileInt.h,
	lib/include/posix.h, lib/misc/posix*.c: Refactored, extended, and made
	use of the set of POSIX internationalization-safe function wrappers.

	* lib/dnd/dndCommon.c, lib/include/dnd.h, lib/include/dndInt.h,
	vmware-user/copyPaste.c, vmware-user/dnd.c: Replaced some duplicated
	UTF-8 formatting code with calls to lib/unicode.

	* lib/guestInfo/guestInfoPosix.c: Replaced the old syscall-based
	implementation of nicinfo with a simpler implementation that uses dnet.

	* lib/guestInfo/guestInfoServer.c, lib/include/guestInfo.h,
	lib/include/guestInfoInt.h: Added Win32 implementation of
	meminfo. POSIX implementation to follow.

	* lib/hgfsServer/hgfsServerLinux.c: Replaced a direct readlink(3) call
	with a call to the POSIX wrapper for readlink(3). Relax an overeager
	ASSERT in symlink checking when using the special empty share.

	* lib/include/codeset.h, lib/string/bsd_vsnprintf.c, lib/string/str.c,
	lib/unicode/unicodeSimpleOperations.c, lib/unicode/unicodeSimpleUTF16.h:
	Refactored ICU routines from unicodeSimpleUtf16.h to codeset.h, which
	is now licensed under the ICU license (BSD variant).

	* lib/include/file.h, lib/file/file.c: Added function File_StripSlashes.

	* lib/include/hgfsProto.h: Removed an A acute from a comment to allow
	the file to be built on Windows systems where the default language isn't
	English.

	* lib/include/hostinfo.h, lib/include/util.h, lib/user/hostinfoPosix.c,
	lib/user/util.c, lib/user/utilPosix.c: More conversions to
	lib/unicode. Added Util_ZeroFreeStringW function for Windows in util.h.

	* lib/include/msg.h: Removed obsolete NO_MSGFMT macro.

	* lib/include/unicodeBase.h, lib/unicode/unicodeCommon.c,
	lib/unicode/unicodeSimpleBase.c: Added some more encoding functions.

	* lib/include/vixCommands.h, lib/include/vixOpenSource.h: Added another
	user credential type, some command flags, some command layouts, some
	error codes, some properties, and tweaked existing commands.

	* lib/include/vixTools.h: Added VixToolsUserIsMemberOfAdministratorGroup
	function.

	* lib/include/vm_assert.h, lib/include/vm_basic_defs.h: Move IMPLIES to
	vm_basic_defs.h. Removed some vprobes definitions.

	* lib/include/vmBackup.h, lib/vmBackupLib/scriptOps.c,
	lib/vmBackupLib/stateMachine.c: Added infrastructure to disable
	quiescing targets from a config file.

	* lib/include/vm_basic_asm.h: Changed __GET_CPUID2 handling for Windows.

	* lib/include/vm_produt.h: Added VDM product.

	* lib/include/vm_tools_version.h: Bumped internal Tools version.

	* lib/include/win32util.h, lib/misc/hostname.c, lib/misc/util_misc:
	Refactored functions to separate set of Win32 wrappers (next to the
	POSIX wrappers mentioned earlier).

	* lib/misc/codeset.c: Made CodeSetGetCurrentCodeSet non-static.

	* lib/misc/*/Makefile.am: Added POSIX wrappers to build system.

	* lib/strUtil/strutil.c: Fixed bug in StrUtil_EndsWith function.

	* lib/include/unicodeTypes.h, lib/unicode/unicodeSimpleTypes.c: Removed
	ISO-8859-11 encoding. Added cross-reference of IANA character set
	names, windows code pages, and ICU encodings.

	* lib/vixTools/vixTools.c: Impersonation tweaks.

	* modules/*/*/*: Reflect header file changes from elsewhere in the
	source code tree.

2008-03-11  Adar Dembo  <adar@vmware.com>

	* vm_version.h: Updated Tools version.

	* modules/vmblock/linux/*: Make vmblock build under 2.6.25-rc2.
	The dentry and mount objects have been moved out of struct
	nameidata and into the new struct path. Also, path_release() is
	now path_put().

	* modules/vmsync/linux/*: Make vmsync build under 2.6.25-rc2.
	The same changes were needed here as in vmblock above.

2008-03-10  Adar Dembo  <adar@vmware.com>

	* vm_version.h: Updated Tools version.

	* modules/vmhgfs/linux/*: Make vmhgfs build under 2.6.25-rc1.
	The iget() function has been removed and filesystems are now
	expected to implement it themselves using iget_locked().

2008-02-27  Elliot Lee  <elliot@vmware.com>

	* configure.ac, guestd/Makefile.am, toolbox/Makefile.am,
	vmware-user/Makefile.am: Allow passing custom LDFLAGS in to
	build process (patch by Mike Auty).

	* Resync with internal trunk (2008.02.27).

	* guestd/foundryToolsDaemon.c, lib/vixTools/vixTools.c,
	vmware-user/foundryToolsDaemon.c: Win9x compat changes.

	* guestd/toolsDaemon.c: Style fixes.

	* hgfsmounter/hgfsmounter.c: Bug fixes.

	* lib/dnd/dndLinux.c, lib/dnd/dndCommon.c: Move some code to the
	platform-independant file, some DnDv3 support.

	* lib/include/dnd.h, lib/include/dndInt.h: DnDv3 support.

	* lib/file/file.c, lib/file/fileIO.c, lib/file/fileIOPosix.c,
	lib/file/fileLockPrimitive.c, lib/file/filePosix.c,
	lib/include/file_extensions.h, lib/include/fileInt.h,
	lib/include/fileIO.h: Move functions around, Unicode fixes, misc
	fixes.

	* lib/foundryMsg/foundryPropertyListCommon.c: Error handling fixes.

	* lib/hgfsServer/*.c, lib/include/hgfs*.h,
	modules/freebsd/vmhgfs/*, modules/linux/vmhgfs/*: HGFS v3 support,
	updates to improve code re-use between the FreeBSD and MacOS X
	ports, and updates to make the Linux port build on 2.6.25-rc1 (but
	not rc2, yet).

	* lib/include/auth.h, lib/include/codeset.h,
	lib/include/hostinfo.h, lib/include/str.h, lib/include/unicode*.h,
	lib/include/vm_basic_types.h, lib/misc/hostname.c,
	lib/unicode/*.c, lib/user/hostinfoPosix.c: Unicode fixes.

	* lib/include/backdoor_def.h: Add a new command for use by the
	BIOS in checking the GuestOS against Darwin.

	* lib/include/dynarray.h, lib/misc/dynarray.c,
	lib/misc/Makefile.am, lib/misc/shared/Makefile.am: Add Dynarray
	implementation.

	* lib/include/bsdfmt.h, lib/include/bsd_output_int.h,
	lib/string/bsd_output_shared.c, lib/string/bs_vsnprintf.c,
	lib/string/bsd_vsnwprintf.c, lib/string/str.c: Rework built-in
	printf implementation, esp. for Unicode fixes.

	* lib/include/ghIntegration.h: Shuffle types around.

	* lib/include/loglevel_user.h, lib/include/unity.h,
	lib/syncDriver/syncDriverPosix.c, lib/user/util.c,
	toolbox/toolbox-gtk.c: Misc fixes.

	* lib/include/vmBackup.h, lib/vmBackupLib/scriptOps.c,
	lib/vmBackupLib/stateMachine.c, lib/vmBackupLib/vmBackupInt.h:
	Rework scripts for freeze & thaw operations.

	* lib/include/vm_product.h, lib/include/vm_version.h: Add new
	product defs (VMRC).

	* lib/include/vm_tools_version.h: Add ESX 3.5U1 product.

	* lib/include/vixCommands.h, lib/include/vix.h: Add new VIX
	commands and error code.

	* lib/include/win32util.h: Add misc Win32 utilities.

	* modules/*/*/*: Reflect header file changes from elsewhere in the
	source code tree.

2008-02-13  Adar Dembo  <adar@vmware.com>

	* Resync with internal trunk (2008.02.12).

	* configure.ac, lib/unityStub/*, lib/ghIntegrationStub/*,
	lib/Makefile.am, vmware-user/Makefile.am, vmware-user/vmware-user.c:
	Added lib/unityStub and lib/ghIntegrationStub. Unity and guest-host
	integration features for X11 guests are on the way.

	* configure.ac, guestd/Makefile.am, lib/fileUtf8/*,
	lib/vixTools/vixTools.c, vmare-user/Makefile.am: lib/file is now fully
	internationalized. Removed unneeded lib/fileUtf8.

	* foundryToolsDaemon.c: Fixed a leak of the sync driver handle.

	* guestd/toolsDaemon.c: Send guestd's "config directory" to the VMX for
	publishing.

	* hgfsmounter/hgfsmounter.c: Port to MacOS.

	* lib/dnd/*, lib/err/err.c, lib/file/*, lib/include/dnd*,
	lib/include/file*, lib/include/unicode*, lib/include/util.h,
	lib/unicode/*, lib/user/utilPosix.c: More Unicodification.

	* lib/file/file.c, lib/include/file.h: Added File_EnsureDirectory.

	* lib/foundryMsg/foundryMsg.c, lib/guestInfo/guestInfoServer.c,
	lib/misc/codeset.c, lib/misc/vmstdio.c,
	lib/SLPv2Parser/SLPv2MsgAssembler.c, lib/user/util.c: Removed some
	unneeded casts.

	* lib/foundryMsg/foundryThreads.c, lib/include/foundryThreads.h: Added
	FoundryThreads_Free.

	* lib/guestInfo/*, lib/include/guest_os.h, lib/include/guestInfo.h:
	Refactored GetSystemBitness. Removed osNames.h.

	* lib/hgfsServer/hgfsServerLinux.c: Modified MacOS alias resolution code
	so as not to mount volumes. Made HGFS query volume code more resilient
	to failures.

	* lib/include/backdoor_def.h: Added commands for VAssert.

	* lib/include/escape.h, lib/misc/escape.c: Escape_Do is no longer
	declared inline.

	* lib/include/hashTable.h, lib/misc/hashTable.c, lib/misc/Makefile.am,
	lib/misc/shared/Makefile.am: Renamed from hash.[ch].

	* lib/include/iovector.h, lib/include/vm_basic_types.h: Added
	SectorType definition.

	* lib/include/loglevel_user.h: Added additional log levels.

	* lib/include/msgfmt.h: Modified for use in VMKERNEL. Added
	MsgFmt_GetArgswithBuf.

	* lib/include/msg.h: Added Msg_AppendVob for ESX.

	* lib/include/stats_user*: Modified some preprocessing steps. Added
	SETUP_WANT_GETVAL to retrieve named stat counter values.

	* lib/include/str.h: Modified behavior Str_* family of functions for
	Windows.

	* lib/include/strutil.h, lib/strUtil/strutil.c: Removed Split, Grep,
	GrepFd, and GrepFree. Added EndsWith and DecimalStrToUint.

	* lib/include/syncWaitQ.h, lib/sync/*: Modified SyncWaitQ_Add and
	SyncWaitQ_Remove to use PollDevHandle fd types instead of int fd types.

	* lib/include/timeutil.h, lib/misc/timeutil.c: Added
	TimeUtil_GetLocalWindowsTimeZoneIndex and some helper functions.

	* lib/include/util.h, lib/user/utilPosix.c: Added Util_BumpNoFds.

	* lib/include/vixCommands.h: Added commands for device hotplug and
	remote debugging.

	* lib/include/vix.h, lib/include/vixOpenSource.h: Added some new errors
	and properties. Added more VM manipulation functions.

	* lib/include/vm_atomic.h: Comment cleanup and added VMKERNEL-specific
	calls for fencing.

	* lib/include/vm_basic_asm_x86_64.h: Added inline routines to save and
	restore ES1.

	* lib/include/vm_basic_types.h: Added some types and cleaned up a bit.

	* lib/include/vm_legal.h: Updated COPYRIGHT_YEARS.

	* lib/include/vm_product.h: Added hostd service name.

	* lib/include/x86cpuid.h: Cleaned up the file and added some definitions
	for Penryn processors.

	* lib/misc/codeset.c: Added new UTF-16 --> UTF-8 conversion routine.

	* lib/misc/util_misc.c, lib/user/util.c: Moved Util_GetCurrentThreadId
	and friends to util_misc.c.

	* lib/procMgr/procMgrPosix.c: Cleaned up some code and reworked
	asynchronous process execution so as to properly track the grandchild's
	pid instead of the child's pid.

	* lib/string/bsd*: Reorganized BSD formatter.

	* lib/string/str.c: Updated unit tests. Added some Windows corner case
	behavior for Str_Vsnwprintf.

	* lib/strUtil/strutil.c: Fixed some corner cases in existing functions
	that call strtoul.

	* lib/vixTools/vixTools.c: Changed signature of VixToolsImpersonateUser.
	Changed error code handling in a few places.

	* modules/freebsd/vmhgfs/*: Refactored a lot of code so that it can be
	safely reused within the MacOS vmhgfs module.

	* modules/*/*/kernelStubs*: Removed dead System_Uptime function.

	* modules/linux/*/compat_wait.h: Reworked VMW_HAVE_EPOLL macro. Added
	waitqueue helper macros for older kernels.

	* modules/linux/vmhgfs/file.c, modules/linux/vmhgfs/fsutil.*,
	modules/linux/vmhgfs/inode.c: Added HgfsSetUidGid function and used it
	to preserve uid/gid after creating a directory.

	* modules/linux/vmhgfs/vmhgfs_version.h: Bumped driver version.

	* modules/linux/vmsync/compat_workqueue.h: Basic implementation of
	work queues and delayed work queues (using taskqueues and timers) for
	older kernels.

	* modules/linux/vmsync/sync.c: Modified internal state to use new
	compatible work queue implementation.

	* modules/linux/vmxnet/compat_ioport.h,
	modules/linux/vmxnet/compat_netdevice.h,
	modules/linux/vmxnet/compat_pci.h,
	modules/linux/vmxnet/compat_skbuff.h,
	modules/linux/vmxnet/vmxnetInt.h: Added and refactored
	compatibility macros for use in vmxnet3 and vmci sockets modules.

	* modules/linux/vmxnet/vmxnet.c: Hide some kernel functions behind
	compatibility macros.

2008-01-23  Adar Dembo  <adar@vmware.com>

	* Resync with internal trunk (2008.01.08).

	* configure.ac, guestd/Makefile.am, hgfsclient/Makefile.am,
	lib/Makefile.am, toolbox/Makefile.am, vmware-user/Makefile.am:
	integrated lib/unicode for internationalizing strings.

	* guestd/main.c: Stopped using pgrep for finding existing instances
	of guestd. Removed ancient bandwidth test code.

	* guestd/toolsDaemon.c: Moved initial send of the guest's uptime from
	when guestd sends its version to when guestd registers its
	capabilities.

	* lib/file/*, lib/include/file*.h : Massive overhaul of lib/file to
	integrate the new unicode strings that are i18n-safe. Quite a bit of
	cleanup and refactoring as well.

	* lib/file/file.c: Addition of File_PrependToPath function.

	* lib/file/fileIOPosix.c: Addition of FileIO_SetExcludedFromTimeMachine
	and FileIO_PrivilegedPosixOpen functions.

	* lib/fileUTF8/fileUTF8Linux.c, lib/include/fileUTF8.h: Removal of some
	casts and addition of FileUTF8_GetSize function.

	* lib/foundryMsg/foundryMsg.c, lib/misc/vmstdio.c,
	lib/SLPv2Parser/SLPv2MsgAssembler.c: Addition of some casts.

	* lib/foundryMsg/foundryPropertyListCommon.c: Robustified some error
	cases.

	* lib/foundryMsg/vixTranslateErrOpenSource.c,
	lib/include/vixOpenSource.h: Added VIX_E_OUT_OF_MEMORY error code.
	Added Vix_TranslateCOMError function. ADded VIX_DEBUG macro.

	* lib/guestInfo/guestInfoServer.c, lib/include/guestInfo.h: Added some
	casts and refactored some functions. Also fixed a crash that hinders
	backwards compatibility.

	* lib/hgfs/cpNameUtil.c, lib/hgfs/cpNameUtilLinux.c,
	lib/hgfsBd/hgfsBd.c, lib/include/cpName.h, lib/include/cpNameLite.h,
	lib/include/escBitvector.h, lib/include/hgfsUtil.h,
	lib/message/messageBackdoor.c, lib/message/message.c,
	lib/message/messageStub.c, lib/rpcout/rpcout.c,
	modules/freebsd/vmhgfs/kernelStubs.h: Made safe for inclusion in MacOS
	kernel module code.

	* lib/include/backdoor.h: Refactored some type definitions.

	* lib/include/bsd_output_int.h, lib/include/safetime.h,
	lib/string/bsd_output_shared.c: Made safe for Win64 builds.

	* lib/include/dynbuf.h: Added DynBuf_AppendString function.

	* lib/include/err.h: Assorted cleanup.

	* lib/include/escape.h, lib/misc/escape.c: Converted Escape_Do to be
	inline. Some cleanup.

	* lib/include/guest_os.h: Assorted cleanup.

	* lib/include/hash.h, lib/misc/hash.c, lib/misc/Makefile.am,
	lib/misc/shared/Makefile.am: Added basic hash table implementation.

	* lib/include/hostinfo.h, lib/user/hostinfoPosix.c: Refactored and
	added several timekeeping functions.

	* lib/include/localconfig.h, lib/include/util_shared.h: Modified
	statements for include check.

	* lib/include/log.h: Changed the value of some macros when debugging.

	* lib/include/loglevel_defs.h: Refactoed some code, added macros for
	use in the VMM.

	* lib/include/loglevel_user.h: Added loglevels for some new components.

	* lib/include/msgfmt.h: Added new functions.

	* lib/include/msg.h: Added new Msg_LocalizeList function.

	* lib/include/netutil.h: Modified prototypes for two Windows-only
	functions.

	* lib/include/preference.h: Added new Preference_GetInt64 and
	Preference_SetFromString functions.

	* lib/include/strutil.h, lib/strUtil/strutil.c: Cleaned up and added
	some new functions.

	* lib/include/su.h: Cleanup.

	* lib/include/syncMutex.h, lib/sync/syncMutex.c: Added NetWare
	implementation of some synchronization primitives.

	* lib/include/unicode*, lib/unicode/*: New library for handling
	Unicode-aware strings.

	* lib/include/util.h, lib/user/util.c: Assorted refactoring and
	addition of some new functions, one related to backtracing.

	* lib/include/vixCommands.h: New commands for vprobes, replay, message
	dialogs, and others, plus cleanup of some existing commands.

	* lib/include/vm_assert.h: Added IMPLIES macro.

	* lib/include/vm_atomic.h, lib/include/vm_basic_asm.h: Refactored for
	safe Win64 builds.

	* lib/include/vm_basic_defs.h: Added compatibility code for __va_copy.

	* lib/include/vm_basic_types.h: Added FMTH for printing the value of
	handles. Set a new #pragma to ignore size_t truncation warnings on
	Windows. Added several other macros, as well as a ssize_t definition
	for some versions of BSD.

	* lib/include/vm_legal.h: Added more patents to the patent string.

	* lib/include/vm_product.h: Added new macros for some products.

	* lib/include/vm_tools_version.h: Added macros for certain older Tools
	versions and for PRODUCT_BUILD_NUMBER refactoring.

	* lib/include/vm_version.h: Tweaked some product expiration dates and
	versions. Refactored many uses of BUILD_NUMBER to PRODUCT_BUILD_NUMBER.

	* lib/include/x86cpuid.h: Tweaked definition of RDTSCP flag. Refactored
	BIT_MASK macro to VMW_BIT_MASK.

	* lib/misc/base64.c: Modified calling contract for Base64_EasyEncode.

	* lib/misc/codeset.c: Tweaked casts and preprocessor conditioning.

	* lib/misc/idLinux.c: Added IdAuthCreateWithFork and reworked several
	other functions to work around a bug in Apple's detection of GUI
	processes.

	* lib/misc/util_misc.c: Moved W32Util_GetLongPathName and
	W32UTil_LookupSidForAccount elsewhere.

	* lib/rpcin/rpcin.c: Addition of a ping GuestRPC callback.

	* lib/string/str.c: Removed a comment.

	* lib/sync/syncWaitQPosix.c: Added code to disable a workaround for a
	MacOS bug when appropriate (it was fixed in Leopard).

	* lib/vixTools/vixTools.c: Refactored some code, added code to modify
	the guest's networking configuration, added some casts, and added
	code to prevent renaming a file to itself.

	* modules/freebsd/*/Makefile, modules/linux/*/Makefile.normal: Set a
	make variable so the module file will be build in the parent directory.
	Removed some unused rules.

	* modules/freebsd/vmhgfs/kernelStubsBSD.c,
	modules/linux/vmhgfs/kernelStubsLinux.c: Removed unused function.

	* modules/linux/*/include/driver-config.h: Added check to prevent
	uintptr_t from being declared twice.

	* modules/linux/vmblock/linux/filesystem.c,
	modules/linux/vmblock/Makefile.kernel: Added check for newer kernels
	where the slab allocator's constructor function expects three
	arguments. Makes it work with 2.6.25-rc1 (but not rc2, yet).

	* modules/linux/vmblock/linux/vmblock_version.h: Bumped module version.

	* modules/linux/vmhgfs/filesystem.c, modules/linux/vmhgfs/inode.c,
	modules/linux/vmhgfs/module.h, modules/linux/vmhgfs/page.c: Added
	support for writeback caching in conformant kernels.

	* modules/linux/vmhgfs/vmhgfs_version.h: Bumped module version.

	* modules/linux/vmxnet/vmxnetInt.h: Renamed a type and removed the
	inclusion of unnecessary headers. Pruned said headers from codebase.

2007-11-15  Elliot Lee  <elliot@vmware.com>

	* Bandsaw release (2007.11.15).

	* configure.ac: Handle building modules for multiple OS's. Improve
	X detection to allow building --without-x. Improve Gtk+
	detection. Detect libdnet on Solaris. Detect which -Wwarning flags
	the compiler can handle.

	* vmware-user/foreignVMToolsNetworking.c, lib/vixTools/vixTools.c,
	guestd/foreignVMToolsNetworking.c, lib/include/netutil.h,
	lib/include/guestInfo.h, lib/netUtil/netUtilLinux.c,
	lib/include/guestInfoInt.h, lib/guestInfo/guestInfoPosix.c,
	lib/guestInfo/guestInfoServer.c: Move to new NicInfo structures.

	* vmware-user/foundryToolsDaemon.c, guestd/foundryToolsDaemon.c:
	Make sure requestMsg is not NULL before looking inside it.

	* guestd/main.c: Cleanup of HGFS pserver and mounting code. Check
	for some type of signal when sending an RPC.

	* guestd/toolsDaemon.c, vmware-user/resolution.c: Have the guest
	tell the host whether screen resolution changes should be sent,
	instead of having the host guess it based on the OS type set in
	the .vmx file.  Better timeout checking to avoid problems when
	host & guest time diverge.

	* hgfsmounter/hgfsmounter.c: FreeBSD support. Fixes to compile on
	old systems.

	* lib/backdoor/backdoor.c: Tweak for FreeBSD kernel modules.

	* lib/include/mntinfo.h, lib/dnd/dndLinux.c,
	lib/wiper/wiperPosix.c, lib/syncDriver/syncDriverPosix.c: Fixes to
	compile on new systems w/gcc 4.2.

	* lib/err/err.c, lib/err/errPosix.c, lib/err/Makefile.am: Move
	Err_Errno2String function into POSIX-specific source file.

	* lib/file/fileIOPosix.c: Handle EDQUOT if applicable. Fixes to
	compile on new systems where SYS__llseek may not be
	available. Better reporting of errors, by translating errno into
	FILEIO_* error codes.

	* lib/file/fileLockPosix.c: Fixes to compile on old systems. Add a
	bunch of functions to the FileLock* API.

	* lib/file/fileLockPrimitive.c, lib/include/fileInt.h: Bunch of
	file locking cleanups and bug fixes.

	* lib/file/filePosix.c: Bunch of MacOS-related fixes. Add
	File_GetTimes(), FilePosixGetParent(), FilePosixGetBlockDevice(),
	etc.

	* lib/fileUtf8/fileUTF8Linux.c: Add FileUTF8_GetTimes() function.

	* lib/foundry/foundryMsg.c, lib/include/vixCommands.h: Add
	VIX_USER_CREDENTIAL_HOST_CONFIG_HASHED_SECRET credential type, and
	a bunch of VIX commands relating to record-replay.

	* lib/foundryMsg/vixTranslateErrOpenSource.c: Translate a couple
	more error codes.

	* lib/guestInfo/guestInfoPosix.c, lib/guestInfo/Makefile.am: Use
	libdnet on Solaris to retrieve networking info.

	* lib/hgfs/cpNameUtil.c, lib/hgfs/cpNameUtilInt.h,
	lib/hgfs/cpNameUtilLinux.c: Couple more CPName <-> UTF8 conversion
	routines. Some MacOS changes as well.

	* lib/hgfs/hgfsUtil.c, lib/include/hgfs.h,
	modules/linux/vmhgfs/fsutil.c: Handle ENAMETOOLONG.

	* lib/hgfs/staticEscape.c, lib/hgfs/hgfsBd.c: Handle FreeBSD as
	well.

	* lib/hgfsServer/hgfsServer.c: Tie in the cpNameUtil UTF8 changes
	on MacOS.

	* lib/hgfsServer/hgfsServerLinux.c: Make the getdents() wrapper
	work on a wider range of Linux systems. Add "alias" resolution on
	MacOS, and tie in the cpNameUtil UTF8 changes on MacOS.

	* lib/hgfsServer/hgfsServerPolicyGuest.c: Handle FreeBSD.

	* lib/include/backdoor_def.h: Add BDOOR_CMD_LAZYTIMEREMULATION and
	BDOOR_CMD_BIOSBBS.

	* lib/include/str.h, lib/include/bsd_output.h,
	lib/include/bsd_output_int.h: include compat_stdarg.h, change
	vsnwprintf prototype, add HAVE_BSD_WPRINTF define, other compat
	fixups.

	* lib/include/cpNameUtil.h, lib/include/codeset.h,
	lib/misc/codeset.c: Changes to correspond to cpNameUtil UTF8
	changes.

	* lib/include/compat/compat_stdarg.h: New header for doing stdarg
	easily across platforms.

	* lib/include/cpName.h: FreeBSD fixes.

	* lib/include/dnd.h: Add Dnd_SetClipboard and Dnd_GetFileList().

	* lib/include/escBitvector.h: FreeBSD fixes.

	* lib/include/file.h, lib/include/fileUTF8.h: Add new MacOS
	routines and File_GetTimes/FileUTF8_GetTimes.

	* lib/include/hgfsProto.h: Explanation of the whole cpNameUtil and
	codeset UTF8 changes and how they tie in with HGFS.

	* lib/include/hgfsUtil.h: Random compatibility changes.

	* lib/include/loglevel_user.h: Add a few LOGLEVEL_VAR definitions.

	* lib/include/msg.h: s/USE_MSGFMT/NO_MSGFMT/

	* lib/include/osNames.h: Add Windows 2003 Datacenter Edition, and
	user-visible 64bit suffix macro.

	* lib/misc/random.c, lib/include/random.h: Add Random_Quick() and
	Random_QuickSeed() routines.

	* lib/misc/idLinux.c, lib/include/su.h: Add Id_AuthGetLocal() and
	Id_GetAuthExternal() routines, and compat fixes.

	* lib/misc/timeutil.c, lib/include/timeutil.h: Add
	TimeUtil_UnixTimeToNtTime() routine.

	* lib/include/util.h: Add a couple of MacOS routines.

	* lib/include/vmBackup.h, lib/vmBackupLib/stateMachine.c: add a
	couple of structure elements for Windows backup fixes.

	* lib/include/vm_basic_asm.h: fixes for reading TSC on 64-bit
	platforms.

	* lib/include/vm_basic_defs.h: Add other va_copy macros.

	* lib/include/vm_basic_types.h: Fixes for compiling on a wide
	range of systems.

	* lib/include/vm_legal.h: Change the PATENTS_STRING

	* lib/include/vm_product.h: Add "License Infrastructure" product.

	* lib/include/vm_tools_version.h: Change tools versions listed for
	various upcoming product releases.

	* lib/include/vm_version.h: Update the versions.

	* lib/include/x86cpuid.h: Define more CPU flags & fields, add new
	CPU models. Fixes for fully writable TSC detection.

	* lib/message/message.c, lib/message/messageBackdoor.c: Fixes for
	FreeBSD.

	* lib/misc/util_misc.c: Handle MacOS.

	* lib/rpcIn/rpcin.c: Fail a badly-formed RPC instead of
	ASSERT()'ing into oblivion.

	* lib/string/bsd_vsnprintf.c: Various fixes to synchronize with
	bsd_vsnwprintf.c.

	* lib/string/Makefile.am, lib/string/shared/Makefile.am,
	lib/string/str.c lib/string/bsd_vsnwprintf.c: New file to
	implement vsnwprintf() for compat purposes.

	* lib/vixTools/vixTools.c: New FileUTF8 routines.

	* Makefile.am, modules/Makefile.am: --without-x fixes, add
	xferlogs, move kernel module building into separate Makefile.am

	* modules/freebsd/*: Add FreeBSD kernel modules (vmblock, vmhgfs,
	vmmemctl, vmxnet).

	* modules/linux/*/include/compat_*.h,
	modules/linux/*/autoconf/cachector.c,
	modules/linux/*/autoconf/cachecreate.c,
	modules/linux/*/backdoor.c, modules/linux/vmhgfs/filesystem.c,
	modules/linux/vmhgfs/hgfsBd.c, lib/procMgr/procMgrPosix.c,
	lib/rpcOut/rpcout.c, lib/user/util.c, lib/vmCheck/vmcheck.c,
	libguestlib/Makefile.am, lib/deployPkg/runDeployPkgPosix.c,
	lib/include/vm_atomic.h: Compat fixes.

	* modules/linux/*/kernelStubs.h: Update for FreeBSD.

	* modules/linux/*/include/*.h, modules/linux/*/backdoor_def.h,
	modules/linux/*/cpName.h, modules/linux/*/hgfs.h,
	modules/linux/*/hgfsProto.h, modules/linux/*/hgfsUtil.[ch],
	modules/linux/*/kernelStubsLinux.c,
	modules/linux/*/messageBackdoor.c, modules/linux/*/message.c,
	modules/linux/*/rpcout.c, modules/linux/*/rpcin.c,
	modules/linux/*/staticEscape.c, modules/linux/*/vm_basic_asm.h,
	modules/linux/*/vm_basic_defs.h, modules/linux/*/vm_basic_types.h,
	modules/linux/*/x86cpuid.h, modules/linux/*/compat_*.h: Pull in
	updated files from main source tree.

	* modules/linux/*/Makefile.kernel: Remove CC_WARNINGS/CC_OPTS
	gunk.

	* modules/linux/*/README, modules/linux/*/Makefile.normal: Build
	foo.o driver by default on systems with VM_KBUILD=no.

	* modules/linux/vmhgfs/vmhgfs_version.h: Updated VMHGFS driver
	version.

	* modules/linux/vmmemctl/os.[ch],
	modules/linux/vmmemctl/vmballoon.c: Implement and use os_yield()
	to deprioritize the Balloon_Deallocate operation.

	* modules/linux/vmsync/*: New sync driver to make VM snapshots
	consistent.

	* modules/linux/vmxnet/bpf_meta.h: New file.

	* modules/linux/vmxnet/net_dist.h: Update NET_MAX_IMPL_PKT_OVHD
	value.

	* modules/linux/vmxnet/vm_device_version.h: Mention VMXNET3

	* modules/linux/vmxnet/vmkapi_status.h: Updated VMK_ERR codes.

	* modules/linux/vmxnet/vmkapi_types.h: Add VMK_CONST64(U) macros.

	* modules/linux/vmxnet/vmxnet2_def.h,
	modules/linux/vmxnet/vmnet_def.h,
	modules/linux/vmxnet/vmxnet_def.h,
	modules/linux/vmxnet/vmxnetInt.h, modules/linux/vmxnet/vmxnet.c:
	Add (optional) BPF support.

	* modules/linux/vmxnet/vmxnetInt.h, modules/linux/vmxnet/vmxnet.c:
	Add vmxnet_link_check to propagate device link status to netdev.

	* common/vm-support: New script to gather support info from a VM.

	* scripts/*/*-default: New poweron/poweroff/suspend/resume scripts
	for a VM. Add support for dropping user-provided scripts into a
	subdirectory.

	* toolbox/toolboxAbout.c: Eliminate warnings about unused
	variables.

	* toolbox/toolboxShrink.c: Update wording of message.

	* toolbox/copyPaste.c: Try cutting & pasting UTF8 text if we can.

	* xferlogs/*: New log transfer utility.

2007-10-26  Elliot Lee  <elliot@vmware.com>

	* Initial import of 2007.09.04-56574 code ("Axe" release).

	* Import 2007.10.08 snapshot, which includes patches to fix the
	--without-x flag, and compilation with gcc 4.2.
