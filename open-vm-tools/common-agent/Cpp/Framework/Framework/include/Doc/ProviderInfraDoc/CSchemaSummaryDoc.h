/*
 *  Author: bwilliams
 *  Created: April 6, 2012
 *
 *  Copyright (c) 2012 Vmware, Inc.  All rights reserved.
 *  -- VMware Confidential
 *
 *  This code was generated by the script "build/dev/codeGen/genCppDoc". Please
 *  speak to Brian W. before modifying it by hand.
 *
 */

#ifndef CSchemaSummaryDoc_h_
#define CSchemaSummaryDoc_h_

namespace Caf {

/// A simple container for objects of type SchemaSummary
class CSchemaSummaryDoc {
public:
	CSchemaSummaryDoc() :
		_isInitialized(false) {}
	virtual ~CSchemaSummaryDoc() {}

public:
	/// Initializes the object with everything required by this
	/// container. Once initialized, this object cannot
	/// be changed (i.e. it is immutable).
	void initialize(
		const std::string providerNamespace,
		const std::string providerName,
		const std::string providerVersion,
		const SmartPtrCClassCollectionDoc classCollection,
		const std::string invokerPath) {
		if (! _isInitialized) {
			_providerNamespace = providerNamespace;
			_providerName = providerName;
			_providerVersion = providerVersion;
			_classCollection = classCollection;
			_invokerPath = invokerPath;

			_isInitialized = true;
		}
	}

public:
	/// Accessor for the ProviderNamespace
	std::string getProviderNamespace() const {
		return _providerNamespace;
	}

	/// Accessor for the ProviderName
	std::string getProviderName() const {
		return _providerName;
	}

	/// Accessor for the ProviderVersion
	std::string getProviderVersion() const {
		return _providerVersion;
	}

	/// Accessor for the ClassCollection
	SmartPtrCClassCollectionDoc getClassCollection() const {
		return _classCollection;
	}

	/// Accessor for the InvokerPath
	std::string getInvokerPath() const {
		return _invokerPath;
	}

private:
	bool _isInitialized;

	std::string _providerNamespace;
	std::string _providerName;
	std::string _providerVersion;
	SmartPtrCClassCollectionDoc _classCollection;
	std::string _invokerPath;

private:
	CAF_CM_DECLARE_NOCOPY(CSchemaSummaryDoc);
};

CAF_DECLARE_SMART_POINTER(CSchemaSummaryDoc);

}

#endif
