/*
 *  Author: bwilliams
 *  Created: April 6, 2012
 *
 *  Copyright (c) 2012 Vmware, Inc.  All rights reserved.
 *  -- VMware Confidential
 *
 *  This code was generated by the script "build/dev/codeGen/genCppDoc". Please
 *  speak to Brian W. before modifying it by hand.
 *
 */

#ifndef CFullPackageElemDoc_h_
#define CFullPackageElemDoc_h_

namespace Caf {

/// A simple container for objects of type FullPackageElem
class CFullPackageElemDoc {
public:
	CFullPackageElemDoc() :
		_index(0),
		_isInitialized(false) {}
	virtual ~CFullPackageElemDoc() {}

public:
	/// Initializes the object with everything required by this
	/// container. Once initialized, this object cannot
	/// be changed (i.e. it is immutable).
	void initialize(
		const int32 index,
		const std::string packageNamespace,
		const std::string packageName,
		const std::string packageVersion,
		const SmartPtrCPackageDefnDoc installPackage,
		const SmartPtrCPackageDefnDoc uninstallPackage) {
		if (! _isInitialized) {
			_index = index;
			_packageNamespace = packageNamespace;
			_packageName = packageName;
			_packageVersion = packageVersion;
			_installPackage = installPackage;
			_uninstallPackage = uninstallPackage;

			_isInitialized = true;
		}
	}

public:
	/// Accessor for the Index
	int32 getIndex() const {
		return _index;
	}

	/// Accessor for the PackageNamespace
	std::string getPackageNamespace() const {
		return _packageNamespace;
	}

	/// Accessor for the PackageName
	std::string getPackageName() const {
		return _packageName;
	}

	/// Accessor for the PackageVersion
	std::string getPackageVersion() const {
		return _packageVersion;
	}

	/// Accessor for the InstallPackage
	SmartPtrCPackageDefnDoc getInstallPackage() const {
		return _installPackage;
	}

	/// Accessor for the UninstallPackage
	SmartPtrCPackageDefnDoc getUninstallPackage() const {
		return _uninstallPackage;
	}

private:
	int32 _index;
	std::string _packageNamespace;
	std::string _packageName;
	std::string _packageVersion;
	SmartPtrCPackageDefnDoc _installPackage;
	SmartPtrCPackageDefnDoc _uninstallPackage;
	bool _isInitialized;

private:
	CAF_CM_DECLARE_NOCOPY(CFullPackageElemDoc);
};

CAF_DECLARE_SMART_POINTER(CFullPackageElemDoc);

}

#endif
