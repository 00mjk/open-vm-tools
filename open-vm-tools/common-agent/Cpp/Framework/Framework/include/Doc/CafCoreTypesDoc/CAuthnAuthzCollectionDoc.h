/*
 *  Author: bwilliams
 *  Created: April 6, 2012
 *
 *  Copyright (c) 2012 Vmware, Inc.  All rights reserved.
 *  -- VMware Confidential
 *
 *  This code was generated by the script "build/dev/codeGen/genCppDoc". Please
 *  speak to Brian W. before modifying it by hand.
 *
 */

#ifndef CAuthnAuthzCollectionDoc_h_
#define CAuthnAuthzCollectionDoc_h_

namespace Caf {

/// Set of logging levels for different components
class CAuthnAuthzCollectionDoc {
public:
	CAuthnAuthzCollectionDoc() :
		_isInitialized(false) {}
	virtual ~CAuthnAuthzCollectionDoc() {}

public:
	/// Initializes the object with everything required by this
	/// container. Once initialized, this object cannot
	/// be changed (i.e. it is immutable).
	void initialize(
		const std::deque<SmartPtrCAuthnAuthzDoc> authnAuthz = std::deque<SmartPtrCAuthnAuthzDoc>()) {
		if (! _isInitialized) {
			_authnAuthz = authnAuthz;

			_isInitialized = true;
		}
	}

public:
	/// Used to change the logging level for a specific component
	std::deque<SmartPtrCAuthnAuthzDoc> getAuthnAuthz() const {
		return _authnAuthz;
	}

private:
	bool _isInitialized;

	std::deque<SmartPtrCAuthnAuthzDoc> _authnAuthz;

private:
	CAF_CM_DECLARE_NOCOPY(CAuthnAuthzCollectionDoc);
};

CAF_DECLARE_SMART_POINTER(CAuthnAuthzCollectionDoc);

}

#endif
