/*
 *  Author: bwilliams
 *  Created: April 6, 2012
 *
 *  Copyright (c) 2012 Vmware, Inc.  All rights reserved.
 *  -- VMware Confidential
 *
 *  This code was generated by the script "build/dev/codeGen/genCppDoc". Please
 *  speak to Brian W. before modifying it by hand.
 *
 */

#ifndef CParameterCollectionDoc_h_
#define CParameterCollectionDoc_h_

namespace Caf {

/// A simple container for objects of type ParameterCollection
class CParameterCollectionDoc {
public:
	CParameterCollectionDoc() :
		_isInitialized(false) {}
	virtual ~CParameterCollectionDoc() {}

public:
	/// Initializes the object with everything required by this
	/// container. Once initialized, this object cannot
	/// be changed (i.e. it is immutable).
	void initialize(
		const std::deque<SmartPtrCRequestParameterDoc> parameter = std::deque<SmartPtrCRequestParameterDoc>(),
		const std::deque<SmartPtrCRequestInstanceParameterDoc> instanceParameter = std::deque<SmartPtrCRequestInstanceParameterDoc>()) {
		if (! _isInitialized) {
			_parameter = parameter;
			_instanceParameter = instanceParameter;

			_isInitialized = true;
		}
	}

public:
	/// Accessor for the Parameter
	std::deque<SmartPtrCRequestParameterDoc> getParameter() const {
		return _parameter;
	}

	/// Accessor for the InstanceParameter
	std::deque<SmartPtrCRequestInstanceParameterDoc> getInstanceParameter() const {
		return _instanceParameter;
	}

private:
	bool _isInitialized;

	std::deque<SmartPtrCRequestParameterDoc> _parameter;
	std::deque<SmartPtrCRequestInstanceParameterDoc> _instanceParameter;

private:
	CAF_CM_DECLARE_NOCOPY(CParameterCollectionDoc);
};

CAF_DECLARE_SMART_POINTER(CParameterCollectionDoc);

}

#endif
