/*
 *  Author: bwilliams
 *  Created: April 6, 2012
 *
 *  Copyright (c) 2012 Vmware, Inc.  All rights reserved.
 *  -- VMware Confidential
 *
 *  This code was generated by the script "build/dev/codeGen/genCppDoc". Please
 *  speak to Brian W. before modifying it by hand.
 *
 */

#ifndef CLoggingLevelElemDoc_h_
#define CLoggingLevelElemDoc_h_

namespace Caf {

/// Logging level for a component
class CLoggingLevelElemDoc {
public:
	CLoggingLevelElemDoc() :
		_component(LOGGINGCOMPONENT_NONE),
		_level(LOGGINGLEVEL_NONE),
		_isInitialized(false) {}
	virtual ~CLoggingLevelElemDoc() {}

public:
	/// Initializes the object with everything required by this
	/// container. Once initialized, this object cannot
	/// be changed (i.e. it is immutable).
	void initialize(
		const LOGGINGCOMPONENT_TYPE component = LOGGINGCOMPONENT_NONE,
		const LOGGINGLEVEL_TYPE level = LOGGINGLEVEL_NONE) {
		if (! _isInitialized) {
			_component = component;
			_level = level;

			_isInitialized = true;
		}
	}

public:
	/// The logging level applies to this component
	LOGGINGCOMPONENT_TYPE getComponent() const {
		return _component;
	}

	/// Set the logging level to this value
	LOGGINGLEVEL_TYPE getLevel() const {
		return _level;
	}

private:
	LOGGINGCOMPONENT_TYPE _component;
	LOGGINGLEVEL_TYPE _level;

	bool _isInitialized;

private:
	CAF_CM_DECLARE_NOCOPY(CLoggingLevelElemDoc);
};

CAF_DECLARE_SMART_POINTER(CLoggingLevelElemDoc);

}

#endif
