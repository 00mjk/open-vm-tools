/*
 *  Author: bwilliams
 *  Created: April 6, 2012
 *
 *  Copyright (c) 2012 Vmware, Inc.  All rights reserved.
 *  -- VMware Confidential
 *
 *  This code was generated by the script "build/dev/codeGen/genCppDoc". Please
 *  speak to Brian W. before modifying it by hand.
 *
 */

#ifndef CProviderInvokeOperationCollectionDoc_h_
#define CProviderInvokeOperationCollectionDoc_h_

namespace Caf {

/// A simple container for objects of type ProviderInvokeOperationCollection
class CProviderInvokeOperationCollectionDoc {
public:
	CProviderInvokeOperationCollectionDoc() :
		_isInitialized(false) {}
	virtual ~CProviderInvokeOperationCollectionDoc() {}

public:
	/// Initializes the object with everything required by this
	/// container. Once initialized, this object cannot
	/// be changed (i.e. it is immutable).
	void initialize(
		const std::deque<SmartPtrCProviderInvokeOperationDoc> invokeOperation) {
		if (! _isInitialized) {
			_invokeOperation = invokeOperation;

			_isInitialized = true;
		}
	}

public:
	/// Accessor for the InvokeOperation
	std::deque<SmartPtrCProviderInvokeOperationDoc> getInvokeOperation() const {
		return _invokeOperation;
	}

private:
	bool _isInitialized;

	std::deque<SmartPtrCProviderInvokeOperationDoc> _invokeOperation;

private:
	CAF_CM_DECLARE_NOCOPY(CProviderInvokeOperationCollectionDoc);
};

CAF_DECLARE_SMART_POINTER(CProviderInvokeOperationCollectionDoc);

}

#endif
