/*
 *  Author: bwilliams
 *  Created: April 6, 2012
 *
 *  Copyright (c) 2012 Vmware, Inc.  All rights reserved.
 *  -- VMware Confidential
 *
 *  This code was generated by the script "build/dev/codeGen/genCppDoc". Please
 *  speak to Brian W. before modifying it by hand.
 *
 */

#ifndef CSchemaDoc_h_
#define CSchemaDoc_h_

namespace Caf {

/// Set of elements describing the objects that can be generated by the provider
class CSchemaDoc {
public:
	CSchemaDoc() :
		_isInitialized(false) {}
	virtual ~CSchemaDoc() {}

public:
	/// Initializes the object with everything required by this
	/// container. Once initialized, this object cannot
	/// be changed (i.e. it is immutable).
	void initialize(
		const std::deque<SmartPtrCDataClassDoc> dataClassCollection,
		const std::deque<SmartPtrCActionClassDoc> actionClassCollection,
		const std::deque<SmartPtrCLogicalRelationshipDoc> logicalRelationshipCollection = std::deque<SmartPtrCLogicalRelationshipDoc>(),
		const std::deque<SmartPtrCPhysicalRelationshipDoc> physicalRelationshipCollection = std::deque<SmartPtrCPhysicalRelationshipDoc>()) {
		if (! _isInitialized) {
			_dataClassCollection = dataClassCollection;
			_actionClassCollection = actionClassCollection;
			_logicalRelationshipCollection = logicalRelationshipCollection;
			_physicalRelationshipCollection = physicalRelationshipCollection;

			_isInitialized = true;
		}
	}

public:
	/// Accessor for the DataClassCollection
	std::deque<SmartPtrCDataClassDoc> getDataClassCollection() const {
		return _dataClassCollection;
	}

	/// Accessor for the ActionClassCollection
	std::deque<SmartPtrCActionClassDoc> getActionClassCollection() const {
		return _actionClassCollection;
	}

	/// Accessor for the LogicalRelationshipCollection
	std::deque<SmartPtrCLogicalRelationshipDoc> getLogicalRelationshipCollection() const {
		return _logicalRelationshipCollection;
	}

	/// Accessor for the PhysicalRelationshipCollection
	std::deque<SmartPtrCPhysicalRelationshipDoc> getPhysicalRelationshipCollection() const {
		return _physicalRelationshipCollection;
	}

private:
	bool _isInitialized;

	std::deque<SmartPtrCDataClassDoc> _dataClassCollection;
	std::deque<SmartPtrCActionClassDoc> _actionClassCollection;
	std::deque<SmartPtrCLogicalRelationshipDoc> _logicalRelationshipCollection;
	std::deque<SmartPtrCPhysicalRelationshipDoc> _physicalRelationshipCollection;

private:
	CAF_CM_DECLARE_NOCOPY(CSchemaDoc);
};

CAF_DECLARE_SMART_POINTER(CSchemaDoc);

}

#endif
